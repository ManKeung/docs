import{_ as n,o as s,c as a,a as t}from"./app.ac481352.js";const p={},e=t(`<h1 id="\u9762\u8BD5\u5B98-\u6570\u7EC4\u6241\u5E73\u5316\u5B9E\u73B0\u65B9\u5F0F-\u770B\u770B\u4F60\u80FD\u8BF4\u51E0\u79CD" tabindex="-1"><a class="header-anchor" href="#\u9762\u8BD5\u5B98-\u6570\u7EC4\u6241\u5E73\u5316\u5B9E\u73B0\u65B9\u5F0F-\u770B\u770B\u4F60\u80FD\u8BF4\u51E0\u79CD" aria-hidden="true">#</a> \u9762\u8BD5\u5B98\uFF1A\u6570\u7EC4\u6241\u5E73\u5316\u5B9E\u73B0\u65B9\u5F0F\uFF0C\u770B\u770B\u4F60\u80FD\u8BF4\u51E0\u79CD\uFF1F</h1><h2 id="\u4F7F\u7528\u6700\u57FA\u7840\u7684\u9012\u5F52\u904D\u5386\u65B9\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528\u6700\u57FA\u7840\u7684\u9012\u5F52\u904D\u5386\u65B9\u5F0F" aria-hidden="true">#</a> \u4F7F\u7528\u6700\u57FA\u7840\u7684\u9012\u5F52\u904D\u5386\u65B9\u5F0F</h2><p>\u4F7F\u7528\u57FA\u7840\u904D\u5386\u7684\u65B9\u5F0F\uFF0C\u7136\u540E\u904D\u5386\u7684item\u9879\u662F\u5426\u4E3A\u6570\u7EC4\uFF0C\u5982\u679C\u662F\u6570\u7EC4\u9012\u5F52\u6267\u884C\u6241\u5E73\u5316\u51FD\u6570\uFF0C\u5E76\u628A\u6267\u884C\u7684\u7ED3\u679C\u4E0E\u4E4B\u524Dcontact\uFF0C\u5982\u679Citem\u9879\u975E\u6570\u7EC4\uFF0C\u5219\u76F4\u63A5\u5C06\u503Cpush\u5230\u6700\u521D\u5B9A\u4E49\u7684\u6570\u7EC4\u4E2D</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> array <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">34</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">flatten</span><span class="token punctuation">(</span><span class="token parameter">array</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> item <span class="token keyword">of</span> array<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            result <span class="token operator">=</span> result<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token function">flatten</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
            result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> result
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">flatten</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u4F7F\u7528reduce-\u51FD\u6570\u8FDB\u884C\u9012\u5F52\u64CD\u4F5C" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528reduce-\u51FD\u6570\u8FDB\u884C\u9012\u5F52\u64CD\u4F5C" aria-hidden="true">#</a> \u4F7F\u7528reduce \u51FD\u6570\u8FDB\u884C\u9012\u5F52\u64CD\u4F5C</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">flatten</span><span class="token punctuation">(</span><span class="token parameter">array</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> array<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">pre<span class="token punctuation">,</span>current<span class="token punctuation">,</span>currentIndex<span class="token punctuation">,</span>array</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>current<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">return</span> pre<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token function">flatten</span><span class="token punctuation">(</span>current<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
            <span class="token keyword">return</span> pre<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>current<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="while\u5FAA\u73AF\u7ED3\u5408findindex\u4E0E\u6269\u5C55\u8FD0\u7B97\u7B26" tabindex="-1"><a class="header-anchor" href="#while\u5FAA\u73AF\u7ED3\u5408findindex\u4E0E\u6269\u5C55\u8FD0\u7B97\u7B26" aria-hidden="true">#</a> while\u5FAA\u73AF\u7ED3\u5408findIndex\u4E0E\u6269\u5C55\u8FD0\u7B97\u7B26</h2><p>\u5B9E\u73B0\u601D\u8DEF: \u4F7F\u7528 while \u5FAA\u73AF\uFF0C\u5FAA\u73AF\u5224\u65AD\u6761\u4EF6\uFF0Cconcat \u4EE5\u540E\u7684\u6570\u7EC4\u4E2D\u662F\u5426\u5305\u542B\u6570\u7EC4\u7C7B\u578B\uFF0C\u5982\u679C\u5305\u542B \u7136\u540E\u4F7F\u7528 ... \u6269\u5C55\u8FD0\u7B97\u7B26\u8FDB\u884C\u5C55\u5F00\u5E76\u5408\u5E76</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> array <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">34</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">]</span>
<span class="token keyword">function</span> <span class="token function">flatten</span><span class="token punctuation">(</span><span class="token parameter">array</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>array<span class="token punctuation">.</span><span class="token function">findIndex</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token operator">&gt;</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        array <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token operator">...</span>array<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> array
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">flatten</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u6570\u7EC4\u5F3A\u5236\u7C7B\u578B\u8F6C\u6362" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4\u5F3A\u5236\u7C7B\u578B\u8F6C\u6362" aria-hidden="true">#</a> \u6570\u7EC4\u5F3A\u5236\u7C7B\u578B\u8F6C\u6362</h2><p>\u5B9E\u73B0\u601D\u8DEF: \u5C06\u6570\u7EC4\u8FDB\u884C\u5F3A\u5236\u7C7B\u578B\u8F6C\u6362\uFF0C\u7136\u540E\u4F7F\u7528 split \u5206\u9694\u4E3A\u6570\u7EC4\uFF0C\u6700\u540E\u6CE8\u610F\u4E0D\u8981\u5FD8\u8BB0\u8F6C\u6362\u4E3A Number \u7C7B\u578B</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">flatten</span><span class="token punctuation">(</span><span class="token parameter">array</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> array<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;,&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token operator">=&gt;</span><span class="token function">Number</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// &#39;array.toString() \u8F6C\u6362\u540E\u7684\u7ED3\u679C 1,2,34,12,4,23&#39;</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">flatten</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u4F7F\u7528-json-\u7684\u51FD\u6570\u548C\u6B63\u5219\u8868\u8FBE\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528-json-\u7684\u51FD\u6570\u548C\u6B63\u5219\u8868\u8FBE\u5F0F" aria-hidden="true">#</a> \u4F7F\u7528 JSON \u7684\u51FD\u6570\u548C\u6B63\u5219\u8868\u8FBE\u5F0F</h2><p>\u5B9E\u73B0\u601D\u8DEF: \u5148\u4F7F\u7528 JSON.stringify \u5C06\u6570\u7EC4\u8FDB\u884C\u8F6C\u6362\uFF0C\u7136\u540E\u4F7F\u7528\u6B63\u5219\u5339\u914D\u53BB\u6389[ ],\u5728\u6700\u5916\u5C42\u589E\u52A0[ ],\u6700\u540E\u4F7F\u7528 JSON.parse \u8F6C\u6362</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> array <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">34</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">flatten</span><span class="token punctuation">(</span><span class="token parameter">array</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// JSON.stringify \u8F6C\u6362\u540E\u7684\u7ED3\u679C &#39;[1,[2,34,[12,4]],23]&#39;</span>
    result <span class="token operator">=</span> result<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(\\[|\\])</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    result <span class="token operator">=</span> <span class="token string">&#39;[&#39;</span> <span class="token operator">+</span> result <span class="token operator">+</span> <span class="token string">&#39;]&#39;</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">flatten</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u4F7F\u7528\u6808\u548C\u6269\u5C55\u8FD0\u7B97\u7B26\u7684\u65B9\u5F0F\u5B9E\u73B0\u6241\u5E73\u5316" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528\u6808\u548C\u6269\u5C55\u8FD0\u7B97\u7B26\u7684\u65B9\u5F0F\u5B9E\u73B0\u6241\u5E73\u5316" aria-hidden="true">#</a> \u4F7F\u7528\u6808\u548C\u6269\u5C55\u8FD0\u7B97\u7B26\u7684\u65B9\u5F0F\u5B9E\u73B0\u6241\u5E73\u5316</h2><p>\u5B9E\u73B0\u601D\u8DEF\uFF1A\u521B\u5EFA\u4E00\u4E2A\u6808\u7684\u7ED3\u6784\uFF0C\u4E00\u4E2A\u7A7A\u6570\u7EC4\uFF0C\u7136\u540E\u904D\u5386\u6808\u7ED3\u6784\uFF0C\u5224\u65AD\u5982\u679C\u662F\u6570\u7EC4,\u4F7F\u7528\u6269\u5C55\u8FD0\u7B97\u7B26\u5C55\u5F00\u518D\u6B21\u6254\u5165\u6808\u4E2D\uFF0C\u5982\u679C\u4E0D\u662F\u5C31\u5F80\u65B0\u521B\u5EFA\u7684\u6570\u7EC4\u5934\u90E8\u589E\u52A0</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">flatten</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> stack <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u54C8\u54C8\u54C8&#39;</span><span class="token punctuation">,</span>stack<span class="token punctuation">)</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>stack<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>stack<span class="token punctuation">.</span>length<span class="token punctuation">,</span>stack<span class="token punctuation">)</span>
        <span class="token keyword">const</span> item <span class="token operator">=</span> stack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
         <span class="token comment">// \u7528\u6269\u5C55\u8FD0\u7B97\u7B26\u5C55\u5F00\u4E00\u5C42</span>
              stack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token operator">...</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                item <span class="token operator">!==</span> <span class="token keyword">undefined</span> <span class="token operator">&amp;&amp;</span> res<span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> res<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">flatten</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u4F7F\u7528es6\u4E2D\u7684flatten\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528es6\u4E2D\u7684flatten\u51FD\u6570" aria-hidden="true">#</a> \u4F7F\u7528ES6\u4E2D\u7684flatten\u51FD\u6570</h2><p>\u5B9E\u73B0\u601D\u8DEF: \u76F4\u63A5\u4F7F\u7528ES6\u63D0\u4F9B\u7684flatten\u51FD\u6570\u5B9E\u73B0\u6241\u5E73\u5316 flatten\u7684\u8BED\u6CD5\u662F arr.flatten([depth]) depth\u53EF\u4EE5\u4F20\u9012\u6570\u7EC4\u7684\u5C55\u5F00\u6DF1\u5EA6\uFF0C(\u9ED8\u8BA4\u4E0D\u586B\u65F6\uFF0C\u6570\u503C\u662F1)\uFF0C\u5373\u5C55\u5F00\u4E00\u5C42\u6570\u7EC4\u3002Infinity \u4EE3\u8868\u4E0D\u8BBA\u591A\u5C11\u5C42\u90FD\u5C55\u5F00\uFF0C\u540C\u65F6\u4E5F\u53EF\u4EE5\u8BBE\u7F6E\u5176\u4ED6\u7684\u6574\u6570\uFF0C\u5C55\u5F00\u56FA\u5B9A\u7684\u5C42\u6570</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> array <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">34</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">]</span>
<span class="token keyword">function</span> <span class="token function">flatten</span><span class="token punctuation">(</span><span class="token parameter">array</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> array<span class="token punctuation">.</span><span class="token function">flat</span><span class="token punctuation">(</span><span class="token number">Infinity</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">flatten</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,21),c=[e];function o(u,l){return s(),a("div",null,c)}var r=n(p,[["render",o],["__file","04.html.vue"]]);export{r as default};
