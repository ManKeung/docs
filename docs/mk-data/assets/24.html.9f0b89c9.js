import{_ as s,o as n,c as a,a as e}from"./app.a5405d0d.js";const p={},t=e(`<h1 id="ts\u8FDB\u9636\u7528\u6CD5partial-pick" tabindex="-1"><a class="header-anchor" href="#ts\u8FDB\u9636\u7528\u6CD5partial-pick" aria-hidden="true">#</a> TS\u8FDB\u9636\u7528\u6CD5Partial &amp; Pick</h1><h2 id="partial" tabindex="-1"><a class="header-anchor" href="#partial" aria-hidden="true">#</a> Partial</h2><p>\u6E90\u7801</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token doc-comment comment">/**
 * Make all properties in T optional
  \u5C06T\u4E2D\u7684\u6240\u6709\u5C5E\u6027\u8BBE\u7F6E\u4E3A\u53EF\u9009
 */</span>
<span class="token keyword">type</span> <span class="token class-name">Partial<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token punctuation">[</span><span class="token constant">P</span> <span class="token keyword">in</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token punctuation">]</span><span class="token operator">?</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">P</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F7F\u7528\u524D</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Person</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>
    age<span class="token operator">:</span> <span class="token builtin">number</span>
<span class="token punctuation">}</span>

<span class="token keyword">type</span> <span class="token class-name">p</span> <span class="token operator">=</span> Partial<span class="token operator">&lt;</span>Person<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F6C\u6362\u540E</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">p</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    name<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
    age<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>keyof \u662F\u5E72\u4EC0\u4E48\u7684\uFF1F</li></ul><p>keyof\u6211\u4EEC\u8BB2\u8FC7\u5F88\u591A\u904D\u4E86 \u5C06\u4E00\u4E2A\u63A5\u53E3\u5BF9\u8C61\u7684\u5168\u90E8\u5C5E\u6027\u53D6\u51FA\u6765\u53D8\u6210\u8054\u5408\u7C7B\u578B</p><ul><li>in \u662F\u5E72\u4EC0\u4E48\u7684\uFF1F</li></ul><p>in \u6211\u4EEC\u53EF\u4EE5\u7406\u89E3\u6210for in P \u5C31\u662Fkey \u904D\u5386 keyof T \u5C31\u662F\u8054\u5408\u7C7B\u578B\u7684\u6BCF\u4E00\u9879</p><ul><li>? \u662F\u5C06\u8BE5\u5C5E\u6027\u53D8\u4E3A\u53EF\u9009\u5C5E\u6027</li></ul><p>\uFF1F\u8FD9\u4E2A\u64CD\u4F5C\u5C31\u662F\u5C06\u6BCF\u4E00\u4E2A\u5C5E\u6027\u53D8\u6210\u53EF\u9009\u9879</p><ul><li>T[P] \u662F\u5E72\u4EC0\u4E48\u7684\uFF1F</li></ul><p>T[P] \u7D22\u5F15\u8BBF\u95EE\u64CD\u4F5C\u7B26\uFF0C\u4E0E JavaScript \u79CD\u8BBF\u95EE\u5C5E\u6027\u503C\u7684\u64CD\u4F5C\u7C7B\u4F3C</p><h2 id="pick" tabindex="-1"><a class="header-anchor" href="#pick" aria-hidden="true">#</a> Pick</h2><p>\u6E90\u7801</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token doc-comment comment">/**
 * From T, pick a set of properties whose keys are in the union K
 */</span>
<span class="token keyword">type</span> <span class="token class-name">Pick<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">K</span> <span class="token keyword">extends</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token punctuation">[</span><span class="token constant">P</span> <span class="token keyword">in</span> <span class="token constant">K</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">P</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Person</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    name<span class="token operator">:</span><span class="token builtin">string</span><span class="token punctuation">,</span>
    age<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">,</span>
    text<span class="token operator">:</span><span class="token builtin">string</span>
    address<span class="token operator">:</span><span class="token builtin">string</span>
<span class="token punctuation">}</span>

<span class="token keyword">type</span> <span class="token class-name">Ex</span> <span class="token operator">=</span> <span class="token string">&#39;text&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;age&#39;</span>

<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">A</span></span> <span class="token operator">=</span> Pick<span class="token operator">&lt;</span>Person<span class="token punctuation">,</span>Ex<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,20),o=[t];function l(c,i){return n(),a("div",null,o)}const d=s(p,[["render",l],["__file","24.html.vue"]]);export{d as default};
