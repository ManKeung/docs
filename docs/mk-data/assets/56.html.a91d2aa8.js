import{_ as n,o as s,c as a,a as p}from"./app.9fb31c86.js";const t={},o=p(`<h1 id="\u5206\u4EAB\u5341\u4E8C\u4E2A\u5B57\u8282\u524D\u7AEF\u5199\u7684\u4EE3\u7801\u7247\u6BB5-\u5230\u5E95\u6709\u4EC0\u4E48\u4E0D\u4E00\u6837" tabindex="-1"><a class="header-anchor" href="#\u5206\u4EAB\u5341\u4E8C\u4E2A\u5B57\u8282\u524D\u7AEF\u5199\u7684\u4EE3\u7801\u7247\u6BB5-\u5230\u5E95\u6709\u4EC0\u4E48\u4E0D\u4E00\u6837" aria-hidden="true">#</a> \u5206\u4EAB\u5341\u4E8C\u4E2A\u5B57\u8282\u524D\u7AEF\u5199\u7684\u4EE3\u7801\u7247\u6BB5\uFF0C\u5230\u5E95\u6709\u4EC0\u4E48\u4E0D\u4E00\u6837\uFF1F</h1><h2 id="\u5982\u4F55\u4F7F\u7528\u4EA4\u4E92\u5F0F\u7684\u547D\u4EE4\u884C\u5DE5\u5177\u4E0B\u8F7D\u9879\u76EE\u6A21\u677F" tabindex="-1"><a class="header-anchor" href="#\u5982\u4F55\u4F7F\u7528\u4EA4\u4E92\u5F0F\u7684\u547D\u4EE4\u884C\u5DE5\u5177\u4E0B\u8F7D\u9879\u76EE\u6A21\u677F" aria-hidden="true">#</a> \u5982\u4F55\u4F7F\u7528\u4EA4\u4E92\u5F0F\u7684\u547D\u4EE4\u884C\u5DE5\u5177\u4E0B\u8F7D\u9879\u76EE\u6A21\u677F</h2><p>\u8FD9\u90E8\u5206\u4EE3\u7801\u5B9E\u73B0\u4E86\u4E00\u4E2A\u7528\u6237\u4EA4\u4E92\u7684 GitHub \u6A21\u677F\u4E0B\u8F7D\u5DE5\u5177\u3002\u9996\u5148\u4F60\u9700\u8981\u5728github\u4E0A\u521B\u5EFA\u4E00\u4E2A\u9879\u76EE\uFF0C\u7136\u540E\u4F7F\u7528\u4E0B\u9762\u4ECB\u7ECD\u7684\u4EE3\u7801\u5C31\u53EF\u4EE5\u7528\u547D\u4EE4\u884C\u62C9\u53D6\u5230\u672C\u5730\uFF0C\u5E76\u89E3\u538B\u4E86\u3002</p><p>\u5B83\u4F7F\u7528 enquirer \u5E93\u63D0\u793A\u7528\u6237\u8F93\u5165\u4ED3\u5E93\u7684\u521B\u5EFA\u8005\u3001\u540D\u79F0\u3001\u5206\u652F\u3001\u548C\u76EE\u6807\u76EE\u5F55\uFF0C\u7136\u540E\u4F7F\u7528 downloadTemplate \u51FD\u6570\u4E0B\u8F7D\u6A21\u677F\uFF0C\u6700\u540E\u4F7F\u7528 fs-extra \u5E93\u5B58\u50A8\u4E0B\u8F7D\u7684\u6587\u4EF6\u3002 print\u51FD\u6570\u5C01\u88C5\u4E86\u65E5\u5FD7\u8BB0\u5F55\u7684\u51FD\u6570\u3002</p><p>\u4EE3\u7801\u7684\u5177\u4F53\u5B9E\u73B0\u5982\u4E0B\uFF1A</p><ul><li>\u5F15\u5165\u4F9D\u8D56\uFF1Afs-extra\u3001enquirer\u3001downloadTemplate \u548C print\u3002\uFF08print\u51FD\u6570\u5B9E\u73B0\u4E0B\u9762\u4F1A\u6709\uFF09</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> fs <span class="token keyword">from</span> <span class="token string">&#39;fs-extra&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> enquirer <span class="token keyword">from</span> <span class="token string">&#39;enquirer&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> downloadTemplate <span class="token keyword">from</span> <span class="token string">&#39;./download&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> print <span class="token keyword">from</span> <span class="token string">&#39;./print&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u5B9A\u4E49\u63A5\u53E3 IRepo \u548C IAnswers\uFF0C\u7528\u6765\u63CF\u8FF0\u4ED3\u5E93\u4FE1\u606F\u548C\u7528\u6237\u8F93\u5165\u7684\u7B54\u6848\u3002</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">IRepo</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  owner<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  branch<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">type</span> <span class="token class-name">IAnswers</span> <span class="token operator">=</span> IRepo <span class="token operator">&amp;</span> <span class="token punctuation">{</span>
  targetDir<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u5B9A\u4E49\u51FD\u6570 githubDownloadUrl\uFF0C\u7528\u6765\u6784\u9020\u4ED3\u5E93\u7684\u4E0B\u8F7D URL\u3002</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">githubDownloadUrl</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">repo</span><span class="token operator">:</span> IRepo</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token string">&#39;https://github.com/&#39;</span> <span class="token operator">+</span> repo<span class="token punctuation">.</span>owner <span class="token operator">+</span> <span class="token string">&#39;/&#39;</span> <span class="token operator">+</span> repo<span class="token punctuation">.</span>name <span class="token operator">+</span> <span class="token string">&#39;/archive/refs/heads/&#39;</span> <span class="token operator">+</span> repo<span class="token punctuation">.</span>branch <span class="token operator">+</span> <span class="token string">&#39;.zip&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u5B9A\u4E49\u4E00\u4E2A\u95EE\u9898\u6570\u7EC4\uFF0C\u5305\u542B\u9700\u8981\u63D0\u793A\u7528\u6237\u8F93\u5165\u7684\u95EE\u9898\u53CA\u5176\u9A8C\u8BC1\u903B\u8F91\u3002 <ul><li>type\uFF1A\u8868\u793A\u95EE\u9898\u7684\u7C7B\u578B\uFF0C\u4F8B\u5982\u8F93\u5165\u3001\u9009\u62E9\u3001\u786E\u8BA4\u7B49\u3002\u8FD9\u91CC\u7684\u95EE\u9898\u90FD\u662F\u8F93\u5165\u7C7B\u578B\u3002</li><li>name\uFF1A\u8868\u793A\u95EE\u9898\u4EA7\u751F\u7684\u7ED3\u679C\u503C\u7684 key\uFF0C\u4F8B\u5982\u5F53\u4F60\u5728\u56DE\u7B54\u95EE\u9898\u65F6\u8F93\u5165\u7684\u503C\u4F1A\u4EE5 name \u4F5C\u4E3A key \u5B58\u50A8\u5728\u7B54\u6848\u5BF9\u8C61\u4E2D\u3002</li><li>message\uFF1A\u8868\u793A\u95EE\u9898\u7684\u63D0\u793A\u8BED\uFF0C\u4F8B\u5982 &quot;\u8BF7\u8F93\u5165\u4ED3\u5E93\u7684\u521B\u5EFA\u8005&quot;\u3002</li><li>default\uFF1A\u8868\u793A\u95EE\u9898\u7684\u9ED8\u8BA4\u503C\uFF0C\u5982\u679C\u7528\u6237\u6CA1\u6709\u8F93\u5165\u7B54\u6848\uFF0C\u5219\u4F7F\u7528\u9ED8\u8BA4\u503C\u3002</li><li>validate\uFF1A\u8868\u793A\u95EE\u9898\u7684\u9A8C\u8BC1\u51FD\u6570\uFF0C\u7528\u6765\u9A8C\u8BC1\u7528\u6237\u8F93\u5165\u7684\u7B54\u6848\u662F\u5426\u5408\u6CD5\u3002\u5982\u679C\u7B54\u6848\u4E0D\u5408\u6CD5\uFF0C\u53EF\u4EE5\u8FD4\u56DE\u4E00\u4E2A\u9519\u8BEF\u6D88\u606F\uFF0C\u63D0\u793A\u7528\u6237\u91CD\u65B0\u8F93\u5165\u3002</li><li>questions \u6570\u7EC4\u5305\u542B\u4E86\u56DB\u4E2A\u95EE\u9898\u5BF9\u8C61\uFF0C\u6BCF\u4E2A\u95EE\u9898\u5BF9\u8C61\u90FD\u6709\u4EE5\u4E0B\u51E0\u4E2A\u5C5E\u6027\uFF1A</li><li>\u8FD9\u4E9B\u95EE\u9898\u5C06\u7528\u4E8E\u63D0\u793A\u7528\u6237\u8F93\u5165\uFF0C\u5E76\u6839\u636E\u7528\u6237\u8F93\u5165\u7684\u7B54\u6848\u8BA1\u7B97\u4E0B\u8F7D\u6A21\u677F\u7684 URL \u548C\u5B58\u50A8\u6587\u4EF6\u7684\u76EE\u5F55\u3002</li></ul></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> questions <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;input&#39;</span><span class="token punctuation">,</span> <span class="token comment">// type\u4E3A\u4EA4\u4E92\u7684\u7C7B\u578B</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;owner&#39;</span><span class="token punctuation">,</span> <span class="token comment">// \u4EA7\u751F\u7684\u503C\u7684key\uFF0C\u6BD4\u5982\u4F60\u8F93\u5165&#39;&#39;</span>
    <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;\u8BF7\u8F93\u5165\u4ED3\u5E93\u7684\u521B\u5EFA\u8005(example: &quot;lio-mengxiang&quot;)&#39;</span><span class="token punctuation">,</span> <span class="token comment">// \u63D0\u793A\u8BED</span>
    <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">&#39;lio-mengxiang&#39;</span><span class="token punctuation">,</span>
    <span class="token function">validate</span><span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>val<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&#39;\u8BF7\u8F93\u5165\u6587\u4EF6\u540D&#39;</span><span class="token punctuation">;</span> <span class="token comment">// \u9A8C\u8BC1\u4E00\u4E0B\u8F93\u5165\u662F\u5426\u4E0D\u4E3A\u7A7A</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>fs<span class="token punctuation">.</span><span class="token function">accessSync</span><span class="token punctuation">(</span>val<span class="token punctuation">,</span> fs<span class="token punctuation">.</span>constants<span class="token punctuation">.</span><span class="token constant">F_OK</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&#39;\u6587\u4EF6\u5DF2\u5B58\u5728&#39;</span><span class="token punctuation">;</span> <span class="token comment">// \u5224\u65AD\u6587\u4EF6\u662F\u5426\u5B58\u5728</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;input&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;\u8BF7\u8F93\u5165\u4ED3\u5E93\u540D\u79F0(example: &quot;react&quot;)&#39;</span><span class="token punctuation">,</span>
    <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">&#39;react-pnpm-monorepo-subTemplate&#39;</span><span class="token punctuation">,</span>
    <span class="token function">validate</span><span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>val<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&#39;\u8BF7\u8F93\u5165\u4ED3\u5E93\u540D&#39;</span><span class="token punctuation">;</span> <span class="token comment">// \u9A8C\u8BC1\u4E00\u4E0B\u8F93\u5165\u662F\u5426\u4E0D\u4E3A\u7A7A</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;input&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;branch&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;\u8BF7\u8F93\u5165\u5206\u652F\u540D(example: &quot;main&quot;)&#39;</span><span class="token punctuation">,</span>
    <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">&#39;main&#39;</span><span class="token punctuation">,</span>
    <span class="token function">validate</span><span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>val<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&#39;\u8BF7\u8F93\u5165\u5206\u652F\u540D&#39;</span><span class="token punctuation">;</span> <span class="token comment">// \u9A8C\u8BC1\u4E00\u4E0B\u8F93\u5165\u662F\u5426\u4E0D\u4E3A\u7A7A</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;input&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;targetDir&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;\u8BF7\u8F93\u5165\u653E\u6587\u4EF6\u7684\u76EE\u5F55(\u9ED8\u8BA4\u5F53\u524D\u76EE\u5F55: &quot;./&quot;)&#39;</span><span class="token punctuation">,</span>
    <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">&#39;./&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u4F7F\u7528 enquirer.prompt \u65B9\u6CD5\u63D0\u793A\u7528\u6237\u8F93\u5165\uFF0C\u5E76\u5904\u7406\u7528\u6237\u8F93\u5165\u7684\u7B54\u6848\u3002\u5982\u679C\u8F93\u5165\u6709\u8BEF\uFF0C\u5219\u8F93\u51FA\u9519\u8BEF\u4FE1\u606F\u5E76\u9000\u51FA\u7A0B\u5E8F\u3002</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>enquirer
  <span class="token punctuation">.</span><span class="token function">prompt</span><span class="token punctuation">(</span>questions<span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">answers</span><span class="token operator">:</span> IAnswers</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u83B7\u53D6\u7528\u6237\u8F93\u5165\u503C</span>
    <span class="token keyword">const</span> owner <span class="token operator">=</span> answers<span class="token punctuation">.</span>owner<span class="token punctuation">;</span>
    <span class="token keyword">const</span> name <span class="token operator">=</span> answers<span class="token punctuation">.</span>name<span class="token punctuation">;</span>
    <span class="token keyword">const</span> branch <span class="token operator">=</span> answers<span class="token punctuation">.</span>branch<span class="token punctuation">;</span>
    <span class="token keyword">const</span> targetDir <span class="token operator">=</span> answers<span class="token punctuation">.</span>targetDir<span class="token punctuation">;</span>
    <span class="token function">downloadTemplate</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token function">githubDownloadUrl</span><span class="token punctuation">(</span><span class="token punctuation">{</span> owner<span class="token punctuation">,</span> name<span class="token punctuation">,</span> branch <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span> targetDir <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    print<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
    process<span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u7528\u6237\u8F93\u5165\u7684\u7B54\u6848\u5408\u6CD5\uFF0C\u5219\u4F7F\u7528 downloadTemplate \u51FD\u6570\u4E0B\u8F7D\u6A21\u677F\u5E76\u4F7F\u7528 fs-extra \u5B58\u50A8\u6587\u4EF6\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> download <span class="token keyword">from</span> <span class="token string">&#39;download&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> compressing <span class="token keyword">from</span> <span class="token string">&#39;compressing&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> print <span class="token keyword">from</span> <span class="token string">&#39;./print&#39;</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * \u4E0B\u8F7D\u8FDC\u7A0B\u9879\u76EE\u6A21\u677F\u7684\u65B9\u6CD5
 */</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">downloadTemplate</span><span class="token punctuation">(</span><span class="token punctuation">{</span> url<span class="token punctuation">,</span> targetDir <span class="token operator">=</span> <span class="token string">&#39;./&#39;</span> <span class="token punctuation">}</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">url</span><span class="token operator">:</span> string<span class="token punctuation">;</span> targetDir<span class="token operator">?</span><span class="token operator">:</span> string <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token operator">:</span> Promise<span class="token operator">&lt;</span>any<span class="token operator">&gt;</span> <span class="token punctuation">{</span>
  print<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&#39;download start, please wait...&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// \u901A\u8FC7get\u65B9\u6CD5\u4E0B\u8F7D</span>
  <span class="token keyword">return</span> <span class="token function">download</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> targetDir<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;end&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      print<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">&#39;download done&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">stream</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> compressing<span class="token punctuation">.</span>zip<span class="token punctuation">.</span><span class="token function">uncompress</span><span class="token punctuation">(</span>stream<span class="token punctuation">,</span> <span class="token string">&#39;./&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      print<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5206\u7EC4\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u5206\u7EC4\u51FD\u6570" aria-hidden="true">#</a> \u5206\u7EC4\u51FD\u6570</h2><p>\u4F8B\u5982\uFF0C\u5047\u8BBE\u6211\u4EEC\u6709\u4E00\u4E2A\u6570\u7EC4 [1, 2, 3, 4, 5, 6]\uFF0C\u5982\u679C\u6211\u4EEC\u8C03\u7528 group([1, 2, 3, 4, 5, 6], 2)\uFF0C\u90A3\u4E48\u8FD9\u4E2A\u51FD\u6570\u4F1A\u8FD4\u56DE\u4E00\u4E2A\u65B0\u7684\u6570\u7EC4 [[1, 2], [3, 4], [5, 6]]\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">group</span><span class="token punctuation">(</span>array<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> subGroupLength<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> newArray <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

  <span class="token keyword">while</span> <span class="token punctuation">(</span>index <span class="token operator">&lt;</span> array<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    newArray<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>array<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> <span class="token punctuation">(</span>index <span class="token operator">+=</span> subGroupLength<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> newArray<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="node\u5FEB\u901F\u6267\u884Clinux\u547D\u4EE4" tabindex="-1"><a class="header-anchor" href="#node\u5FEB\u901F\u6267\u884Clinux\u547D\u4EE4" aria-hidden="true">#</a> node\u5FEB\u901F\u6267\u884Clinux\u547D\u4EE4</h2><p>\u8FD9\u6BB5\u4EE3\u7801\u5B9A\u4E49\u4E86\u4E00\u4E2A execQuick \u51FD\u6570\uFF0C\u5B83\u4F7F\u7528 spawn \u5B50\u8FDB\u7A0B\u7684\u65B9\u5F0F\u6267\u884C\u4E00\u6761\u547D\u4EE4\u3002spawn \u5B50\u8FDB\u7A0B\u7684\u4F18\u70B9\u662F\u6BD4 exec \u66F4\u9AD8\u6548\uFF0C\u56E0\u4E3A\u5B83\u4E0D\u9700\u8981\u521B\u5EFA\u65B0\u7684 shell \u73AF\u5883\uFF0C\u5E76\u4E14\u4E0D\u4F1A\u56E0\u8D85\u51FA\u6700\u5927\u7F13\u51B2\u533A\u7684\u9650\u5236\u800C\u5BFC\u81F4\u9519\u8BEF\u3002</p><p>execQuick \u51FD\u6570\u63A5\u53D7\u4E00\u6761\u547D\u4EE4\u548C\u4E00\u4E9B\u9009\u9879\u4F5C\u4E3A\u53C2\u6570\uFF0C\u5E76\u8FD4\u56DE\u4E00\u4E2A\u5305\u542B\u547D\u4EE4\u6267\u884C\u7ED3\u679C\u7684 Promise \u5BF9\u8C61\u3002</p><p>\u5982\u679C\u7528\u6237\u6307\u5B9A\u4E86 time \u9009\u9879\uFF0CexecQuick \u4F1A\u5728\u6267\u884C\u5B8C\u547D\u4EE4\u540E\u6253\u5370\u51FA\u547D\u4EE4\u6267\u884C\u6240\u82B1\u8D39\u7684\u65F6\u95F4\uFF1B \u5982\u679C\u7528\u6237\u6307\u5B9A\u4E86 silent \u9009\u9879\uFF0CexecQuick \u4F1A\u7981\u6B62\u6253\u5370\u51FA\u547D\u4EE4\u7684\u6807\u51C6\u8F93\u51FA\u548C\u6807\u51C6\u9519\u8BEF\u8F93\u51FA\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> spawn <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;child_process&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> print <span class="token keyword">from</span> <span class="token string">&#39;./print&#39;</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * spawn\u4F18\u4E8Eexec\u7684\u70B9
 * 1\u662F\u5728\u4E8E\u4E0D\u7528\u65B0\u5EFAshell\uFF0C\u51CF\u5C11\u6027\u80FD\u5F00\u9500
 * 2\u662F\u6CA1\u6709maxbuffer\u7684\u9650\u5236
 */</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">execQuick</span><span class="token punctuation">(</span>
  command<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>
  options<span class="token operator">:</span> <span class="token punctuation">{</span>
    cwd<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
    time<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
    silent<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token punctuation">{</span> pid<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span> code<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span> stdout<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span> stderr<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token builtin">Promise</span></span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> silent <span class="token operator">=</span> options<span class="token punctuation">.</span>silent <span class="token operator">!==</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> begin <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token punctuation">{</span>
      pid<span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
      code<span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
      stdout<span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
      stderr<span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token keyword">const</span> <span class="token punctuation">{</span> stdout<span class="token punctuation">,</span> stderr<span class="token punctuation">,</span> pid <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">spawn</span><span class="token punctuation">(</span>command<span class="token punctuation">,</span> <span class="token punctuation">{</span>
      cwd<span class="token operator">:</span> options<span class="token punctuation">.</span>cwd<span class="token punctuation">,</span>
      shell<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;close&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>code<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>options<span class="token punctuation">.</span>time<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> end <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">const</span> waste <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>end <span class="token operator">-</span> begin<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        print<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span>command<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Command executed in </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>waste<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> ms.</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">if</span> <span class="token punctuation">(</span>code <span class="token operator">!==</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>silent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        print<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>command<span class="token punctuation">,</span> <span class="token string">&#39;Command executed failed&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      result<span class="token punctuation">.</span>code <span class="token operator">=</span> code<span class="token punctuation">;</span>
      <span class="token function">resolve</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    result<span class="token punctuation">.</span>pid <span class="token operator">=</span> pid<span class="token punctuation">;</span>

    stdout<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;data&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> dataStr <span class="token operator">=</span> data<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>silent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        print<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span>dataStr<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      result<span class="token punctuation">.</span>stdout <span class="token operator">+=</span> dataStr<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    stderr<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;data&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> dataStr <span class="token operator">=</span> data<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>silent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        print<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>dataStr<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      result<span class="token punctuation">.</span>stderr <span class="token operator">+=</span> dataStr<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u7B80\u5355\u7684\u65E5\u5FD7\u8BB0\u5F55\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u7B80\u5355\u7684\u65E5\u5FD7\u8BB0\u5F55\u51FD\u6570" aria-hidden="true">#</a> \u7B80\u5355\u7684\u65E5\u5FD7\u8BB0\u5F55\u51FD\u6570</h2><p>\u8FD9\u6BB5\u4EE3\u7801\u5B9A\u4E49\u4E86\u4E00\u4E2A\u6253\u5370\u65E5\u5FD7\u7684\u51FD\u6570\uFF0C\u540D\u4E3A log\u3002\u5B83\u4F7F\u7528\u4E86 chalk \u5E93\u6765\u8BBE\u7F6E\u65E5\u5FD7\u7684\u989C\u8272\u3002</p><p>log \u51FD\u6570\u63A5\u53D7\u4EFB\u610F\u6570\u91CF\u7684\u53C2\u6570\uFF0C\u5E76\u5C06\u5B83\u4EEC\u6253\u5370\u5230\u6807\u51C6\u8F93\u51FA\u3002\u5B83\u4E5F\u5B9A\u4E49\u4E86\u56DB\u4E2A\u5206\u522B\u5BF9\u5E94\u4E0D\u540C\u989C\u8272\u7684\u6253\u5370\u51FD\u6570\uFF0C\u5206\u522B\u662F log.info\u3001log.warn\u3001log.error \u548C log.success\u3002</p><p>\u8FD9\u4E9B\u51FD\u6570\u4F1A\u628A\u5B83\u4EEC\u7684\u53C2\u6570\u4EE5\u4E0D\u540C\u7684\u989C\u8272\u6253\u5370\u51FA\u6765\u3002\u4F8B\u5982\uFF0Clog.success(&#39;\u6210\u529F&#39;) \u4F1A\u628A\u5B57\u7B26\u4E32 &#39;\u6210\u529F&#39; \u4EE5\u7EFF\u8272\u6253\u5370\u51FA\u6765\u3002</p><p>\u6B64\u5916\uFF0Clog \u8FD8\u5B9A\u4E49\u4E86\u4E00\u4E2A\u540D\u4E3A log.divider \u7684\u51FD\u6570\uFF0C\u5B83\u53EF\u4EE5\u6253\u5370\u4E00\u6761\u5206\u9694\u7EBF\uFF0C\u7528\u4E8E\u533A\u5206\u4E0D\u540C\u7684\u65E5\u5FD7\u3002\u5206\u9694\u7EBF\u7684\u989C\u8272\u53EF\u4EE5\u901A\u8FC7 level \u53C2\u6570\u6765\u6307\u5B9A\uFF0C\u9ED8\u8BA4\u4E3A &#39;info&#39;\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token doc-comment comment">/**
 * \u66F4\u6539\u989C\u8272
 * example chalk.green(&#39;\u6210\u529F&#39;) \u6587\u5B57\u663E\u793A\u7EFF\u8272
 */</span>
<span class="token keyword">import</span> chalk <span class="token keyword">from</span> <span class="token string">&#39;chalk&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">type</span> <span class="token class-name">ILevel</span> <span class="token operator">=</span> <span class="token string">&#39;info&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;warn&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;success&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;error&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">print</span><span class="token punctuation">(</span>color<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token operator">...</span>args<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>args<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">log</span><span class="token punctuation">(</span>chalk<span class="token punctuation">[</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">bg</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>color<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\\w</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token punctuation">(</span>w<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> w<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span> chalk<span class="token punctuation">[</span>color<span class="token punctuation">]</span><span class="token punctuation">(</span>args<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token function">log</span><span class="token punctuation">(</span>chalk<span class="token punctuation">[</span>color<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">log</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

log<span class="token punctuation">.</span>info <span class="token operator">=</span> <span class="token function">print</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token string">&#39;gray&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
log<span class="token punctuation">.</span>warn <span class="token operator">=</span> <span class="token function">print</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token string">&#39;yellow&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
log<span class="token punctuation">.</span>error <span class="token operator">=</span> <span class="token function">print</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token string">&#39;red&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
log<span class="token punctuation">.</span>success <span class="token operator">=</span> <span class="token function">print</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token string">&#39;green&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
log<span class="token punctuation">.</span>chalk <span class="token operator">=</span> chalk<span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * Print divider
 * <span class="token keyword">@param</span> <span class="token punctuation">{</span>&#39;info&#39; | &#39;warn&#39; | &#39;success&#39; | &#39;error&#39;<span class="token punctuation">}</span> level
 */</span>
log<span class="token punctuation">.</span>divider <span class="token operator">=</span> <span class="token punctuation">(</span>level<span class="token operator">:</span> ILevel <span class="token operator">=</span> <span class="token string">&#39;info&#39;</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> logger <span class="token operator">=</span> log<span class="token punctuation">[</span>level<span class="token punctuation">]</span> <span class="token operator">||</span> log<span class="token punctuation">.</span>info<span class="token punctuation">;</span>
  <span class="token function">logger</span><span class="token punctuation">(</span><span class="token string">&#39;---------------------------------------------------------------------------------------&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> log<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5224\u65AD\u7C7B\u578B\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u5224\u65AD\u7C7B\u578B\u51FD\u6570" aria-hidden="true">#</a> \u5224\u65AD\u7C7B\u578B\u51FD\u6570</h2><p>\u8FD9\u4E9B\u51FD\u6570\u7528\u4E8E\u68C0\u67E5 JavaScript \u4E2D\u7684\u5BF9\u8C61\u662F\u5426\u5C5E\u4E8E\u7279\u5B9A\u7684\u7C7B\u578B\u3002\u4F8B\u5982\uFF0C\u51FD\u6570 isArray() \u53EF\u4EE5\u7528\u6765\u68C0\u67E5\u4F20\u5165\u7684\u5BF9\u8C61\u662F\u5426\u4E3A\u6570\u7EC4\u7C7B\u578B\u3002isObject() \u51FD\u6570\u53EF\u4EE5\u7528\u6765\u68C0\u67E5\u5BF9\u8C61\u662F\u5426\u4E3A\u5BF9\u8C61\u7C7B\u578B\uFF0CisString() \u51FD\u6570\u53EF\u4EE5\u7528\u6765\u68C0\u67E5\u5BF9\u8C61\u662F\u5426\u4E3A\u5B57\u7B26\u4E32\u7C7B\u578B\uFF0C\u4EE5\u6B64\u7C7B\u63A8\u3002</p><p>\u4E3B\u8981\u57FA\u4E8E\u7684\u662F\u4E00\u4E0B\u51FD\u6570\u53BB\u505A\u5224\u65AD</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">getType</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u8FD9\u4E2A\u51FD\u6570\u4E5F\u662F\u5927\u5BB6\u4ECEjuqery\u4EE3\u7801\u91CC\u5B66\u6765\u7684\uFF0C\u4E00\u76F4\u6CBF\u7528\u5230\u73B0\u5728\uFF0C\u4E5F\u662F\u6781\u4E3A\u63A8\u5D07\u7684\u5224\u65AD\u7C7B\u578B\u7684\u65B9\u6CD5\uFF0C\u56E0\u4E3A\u5B83\u975E\u5E38\u51C6\u786E\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> <span class="token function-variable function">getType</span> <span class="token operator">=</span> <span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Object<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">isArray</span><span class="token punctuation">(</span>obj<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token operator">:</span> obj <span class="token keyword">is</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">getType</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&#39;Array&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">isObject</span><span class="token punctuation">(</span>obj<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token operator">:</span> obj <span class="token keyword">is</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span>key<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">any</span> <span class="token punctuation">}</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">getType</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&#39;Object&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">isString</span><span class="token punctuation">(</span>obj<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token operator">:</span> obj <span class="token keyword">is</span> <span class="token builtin">string</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">getType</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&#39;String&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">isNumber</span><span class="token punctuation">(</span>obj<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token operator">:</span> obj <span class="token keyword">is</span> <span class="token builtin">number</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">getType</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&#39;Number&#39;</span> <span class="token operator">&amp;&amp;</span> obj <span class="token operator">===</span> obj<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">isRegExp</span><span class="token punctuation">(</span>obj<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">getType</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&#39;RegExp&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">isFile</span><span class="token punctuation">(</span>obj<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token operator">:</span> obj <span class="token keyword">is</span> File <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">getType</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&#39;File&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">isBlob</span><span class="token punctuation">(</span>obj<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token operator">:</span> obj <span class="token keyword">is</span> Blob <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">getType</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&#39;Blob&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">isUndefined</span><span class="token punctuation">(</span>obj<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token operator">:</span> obj <span class="token keyword">is</span> <span class="token keyword">undefined</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> obj <span class="token operator">===</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">isFunction</span><span class="token punctuation">(</span>obj<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token operator">:</span> obj <span class="token keyword">is</span> <span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">any</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">typeof</span> obj <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">isEmptyObject</span><span class="token punctuation">(</span>obj<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">isObject</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u7CBE\u7B80\u7248classnames\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u7CBE\u7B80\u7248classnames\u51FD\u6570" aria-hidden="true">#</a> \u7CBE\u7B80\u7248classnames\u51FD\u6570</h2><p>\u8FD9\u6BB5\u4EE3\u7801\u5B9E\u73B0\u4E86\u4E00\u4E2A\u540D\u4E3Acs\u7684\u51FD\u6570\uFF0C\u8BE5\u51FD\u6570\u80FD\u591F\u5C06\u4E00\u7EC4\u5B57\u7B26\u4E32\u7C7B\u578B\u7684\u53C2\u6570\u5408\u5E76\u6210\u4E00\u4E2A\u5B57\u7B26\u4E32\uFF0C\u5E76\u8FD4\u56DE\u5408\u5E76\u540E\u7684\u5B57\u7B26\u4E32\u3002\u8FD9\u4E2A\u51FD\u6570\u53EF\u4EE5\u63A5\u53D7\u591A\u4E2A\u53C2\u6570\uFF0C\u5E76\u4E14\u652F\u6301\u5B57\u7B26\u4E32\u3001\u5B57\u7B26\u4E32\u6570\u7EC4\u3001\u5BF9\u8C61\u7B49\u591A\u79CD\u53C2\u6570\u7C7B\u578B\u3002\u5728\u5408\u5E76\u5B57\u7B26\u4E32\u65F6\uFF0C\u4F1A\u81EA\u52A8\u53BB\u9664\u91CD\u590D\u7684\u5B57\u7B26\u4E32\uFF0C\u5E76\u5C06\u6240\u6709\u5B57\u7B26\u4E32\u7528\u7A7A\u683C\u9694\u5F00\u3002</p><p>\u4F8B\u5982\uFF0C\u5BF9\u4E8E\u4EE5\u4E0B\u8C03\u7528\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token function">cs</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;c&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;d&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> e<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> f<span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u4F1A\u8FD4\u56DE\u5B57\u7B26\u4E32\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&#39;a b c d e&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u8BE5\u51FD\u6570\u53EF\u4EE5\u7528\u6765\u66FF\u4EE3\u7C7B\u4F3C\u7684\u5E93\uFF08\u4F8B\u5982classnames\uFF09\uFF0C\u7528\u4E8E\u5408\u5E76\u4E00\u7EC4\u5B57\u7B26\u4E32\u5E76\u4F5C\u4E3A\u4E00\u4E2A\u7C7B\u540D\u4F7F\u7528\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> isString<span class="token punctuation">,</span> isArray<span class="token punctuation">,</span> isObject <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./is&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">type</span> <span class="token class-name">ClassNamesArg</span> <span class="token operator">=</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">|</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span>key<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">any</span> <span class="token punctuation">}</span> <span class="token operator">|</span> <span class="token keyword">undefined</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">|</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * \u4EE3\u66FFclassnames\u5E93,\u6837\u5F0F\u5408\u5E76\u7684\u65B9\u6CD5
 */</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">cs</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token operator">:</span> ClassNamesArg<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> length <span class="token operator">=</span> args<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
  <span class="token keyword">let</span> classNames<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> v <span class="token operator">=</span> args<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>v<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">continue</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isString</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      classNames<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isArray</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      classNames <span class="token operator">=</span> classNames<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isObject</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>v<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          classNames<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span>classNames<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39; &#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="omit\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#omit\u51FD\u6570" aria-hidden="true">#</a> omit\u51FD\u6570</h2><p>omit\u51FD\u6570\uFF0C\u5B83\u63A5\u53D7\u4E24\u4E2A\u53C2\u6570\uFF1A\u4E00\u4E2A\u5BF9\u8C61\u548C\u4E00\u4E2A\u6570\u7EC4\u3002\u51FD\u6570\u4F1A\u8FD4\u56DE\u4E00\u4E2A\u65B0\u5BF9\u8C61\uFF0C\u8BE5\u5BF9\u8C61\u4E3A\u4F20\u5165\u7684\u5BF9\u8C61\u7684\u6D45\u62F7\u8D1D\uFF0C\u5E76\u5220\u9664\u4E86\u6570\u7EC4\u4E2D\u5217\u51FA\u7684\u6240\u6709\u5C5E\u6027\u3002</p><p>\u4F8B\u5982\uFF0C\u5982\u679C\u4F20\u5165\u7684\u5BF9\u8C61\u4E3A { a: 1, b: 2, c: 3 }\uFF0C\u6570\u7EC4\u4E3A [&#39;a&#39;, &#39;c&#39;]\uFF0C\u5219\u8FD4\u56DE\u7684\u5BF9\u8C61\u4E3A { b: 2 }\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token doc-comment comment">/**
 * delete keys from object
 */</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token generic-function"><span class="token function">omit</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> Record<span class="token operator">&lt;</span><span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token punctuation">,</span> <span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token constant">K</span> <span class="token keyword">extends</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>
  obj<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span>
  keys<span class="token operator">:</span> <span class="token builtin">Array</span><span class="token operator">&lt;</span><span class="token constant">K</span> <span class="token operator">|</span> <span class="token builtin">string</span><span class="token operator">&gt;</span> <span class="token comment">// string \u4E3A\u4E86\u67D0\u4E9B\u6CA1\u6709\u58F0\u660E\u7684\u5C5E\u6027\u88ABomit</span>
<span class="token punctuation">)</span><span class="token operator">:</span> Omit<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">K</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> clone <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>obj<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  keys<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>key <span class="token keyword">as</span> <span class="token constant">K</span><span class="token punctuation">)</span> <span class="token keyword">in</span> clone<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">delete</span> clone<span class="token punctuation">[</span>key <span class="token keyword">as</span> <span class="token constant">K</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> clone<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u83B7\u53D6\u9879\u76EE\u6587\u4EF6-\u4EE5\u547D\u4EE4\u8F93\u5165\u7684\u76EE\u5F55\u4E3A\u6839\u76EE\u5F55" tabindex="-1"><a class="header-anchor" href="#\u83B7\u53D6\u9879\u76EE\u6587\u4EF6-\u4EE5\u547D\u4EE4\u8F93\u5165\u7684\u76EE\u5F55\u4E3A\u6839\u76EE\u5F55" aria-hidden="true">#</a> \u83B7\u53D6\u9879\u76EE\u6587\u4EF6,\u4EE5\u547D\u4EE4\u8F93\u5165\u7684\u76EE\u5F55\u4E3A\u6839\u76EE\u5F55</h2><p>\u8FD9\u4E2A\u51FD\u6570\u5B9A\u4E49\u4E86\u4E00\u4E2A getProjectPath() \u51FD\u6570\u3002\u5B83\u63A5\u53D7\u4E00\u4E2A\u76EE\u5F55\u8DEF\u5F84\u4F5C\u4E3A\u53C2\u6570\uFF0C\u5E76\u8FD4\u56DE\u8FD9\u4E2A\u76EE\u5F55\u5728\u9879\u76EE\u4E2D\u7684\u7EDD\u5BF9\u8DEF\u5F84\u3002\u5982\u679C\u6CA1\u6709\u63D0\u4F9B\u76EE\u5F55\u8DEF\u5F84\uFF0C\u9ED8\u8BA4\u4F7F\u7528\u5F53\u524D\u5DE5\u4F5C\u76EE\u5F55\u4F5C\u4E3A\u76EE\u5F55\u8DEF\u5F84\u3002</p><p>\u8FD9\u4E2A\u51FD\u6570\u53EF\u4EE5\u7528\u6765\u6839\u636E\u76F8\u5BF9\u8DEF\u5F84\u83B7\u53D6\u6587\u4EF6\u5728\u9879\u76EE\u4E2D\u7684\u7EDD\u5BF9\u8DEF\u5F84\u3002</p><p>\u4F8B\u5982\uFF0C\u5982\u679C\u5DE5\u4F5C\u76EE\u5F55\u4E3A /home/user/project\uFF0C\u4F20\u5165\u76EE\u5F55\u8DEF\u5F84\u4E3A &#39;./src&#39;\uFF0C\u5219\u8FD4\u56DE\u503C\u4E3A &#39;/home/user/project/src&#39;\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> path <span class="token keyword">from</span> <span class="token string">&#39;path&#39;</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * \u83B7\u53D6\u9879\u76EE\u6587\u4EF6,\u4EE5\u547D\u4EE4\u8F93\u5165\u7684\u76EE\u5F55\u4E3A\u6839\u76EE\u5F55
 */</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">getProjectPath</span><span class="token punctuation">(</span>dir <span class="token operator">=</span> <span class="token string">&#39;./&#39;</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span><span class="token function">cwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> dir<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u66F4\u6539\u4E3B\u9898\u7684\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u66F4\u6539\u4E3B\u9898\u7684\u65B9\u6CD5" aria-hidden="true">#</a> \u66F4\u6539\u4E3B\u9898\u7684\u65B9\u6CD5</h2><p>\u901A\u8FC7\u66F4\u6539css\u53D8\u91CF\u8FBE\u5230\u66F4\u6362\u4E3B\u9898\u7684\u76EE\u7684</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> isObject <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./is&#39;</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * \u66F4\u6362css\u53D8\u91CF\u7684\u65B9\u6CD5
 */</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">setCssVariables</span><span class="token punctuation">(</span>variables<span class="token operator">:</span> Record<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> root <span class="token operator">=</span> document<span class="token punctuation">.</span>body<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>variables <span class="token operator">&amp;&amp;</span> <span class="token function">isObject</span><span class="token punctuation">(</span>variables<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>variables<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>themKey<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      root<span class="token punctuation">.</span>style<span class="token punctuation">.</span><span class="token function">setProperty</span><span class="token punctuation">(</span>themKey<span class="token punctuation">,</span> variables<span class="token punctuation">[</span>themKey<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u81EA\u52A8\u5316\u53D1\u5E03git\u811A\u672C\u4E4B\u68C0\u6D4Bgit\u4ED3\u5E93\u662F\u5426\u521D\u59CB\u5316\u7684\u4EE3\u7801" tabindex="-1"><a class="header-anchor" href="#\u81EA\u52A8\u5316\u53D1\u5E03git\u811A\u672C\u4E4B\u68C0\u6D4Bgit\u4ED3\u5E93\u662F\u5426\u521D\u59CB\u5316\u7684\u4EE3\u7801" aria-hidden="true">#</a> \u81EA\u52A8\u5316\u53D1\u5E03git\u811A\u672C\u4E4B\u68C0\u6D4Bgit\u4ED3\u5E93\u662F\u5426\u521D\u59CB\u5316\u7684\u4EE3\u7801</h2><p>\u8FD9\u4E2A\u51FD\u6570\u5B9A\u4E49\u4E86\u4E00\u4E2A checkGitRemote() \u51FD\u6570\u3002\u5B83\u9996\u5148\u4F1A\u4F7F\u7528 getGitRootPath() \u51FD\u6570\u68C0\u6D4B\u5F53\u524D\u76EE\u5F55\u662F\u5426\u4E3A Git \u4ED3\u5E93\u3002</p><p>\u5982\u679C\u662F\uFF0C\u5B83\u4F1A\u6267\u884C git remote -v \u547D\u4EE4\uFF0C\u7136\u540E\u68C0\u67E5\u547D\u4EE4\u7684\u8F93\u51FA\u4E2D\u662F\u5426\u5305\u542B push\u3002\u5982\u679C\u5305\u542B\uFF0C\u5219\u6253\u5370\u7A7A\u884C\uFF1B</p><p>\u5982\u679C\u4E0D\u5305\u542B\uFF0C\u5219\u6253\u5370\u9519\u8BEF\u4FE1\u606F\uFF0C\u5E76\u9000\u51FA\u7A0B\u5E8F\u3002\u5982\u679C\u68C0\u6D4B\u5230\u7684\u5F53\u524D\u76EE\u5F55\u4E0D\u662F Git \u4ED3\u5E93\uFF0C\u5219\u6253\u5370\u9519\u8BEF\u4FE1\u606F\uFF0C\u5E76\u9000\u51FA\u7A0B\u5E8F</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> execQuick <span class="token keyword">from</span> <span class="token string">&#39;./execQuick&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> getGitRootPath <span class="token keyword">from</span> <span class="token string">&#39;./getGitRootPath&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> print <span class="token keyword">from</span> <span class="token string">&#39;./print&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">checkGitRemote</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">getGitRootPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> code<span class="token punctuation">,</span> stdout <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">execQuick</span><span class="token punctuation">(</span><span class="token string">&#39;git remote -v&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>code <span class="token operator">===</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> stdout<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token string">&#39;(push)&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      print<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;publish&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&#39;\u5728\u6307\u5B9A git remote \u524D\uFF0C\u60A8\u65E0\u6CD5\u53D1\u5E03\u4EE3\u7801\uFF0C\u8BF7\u624B\u52A8\u6DFB\u52A0 git remote\u3002&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      process<span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    print<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;publish&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&#39;\u6CA1\u6709\u68C0\u6D4B\u5230 Git \u4ED3\u5E93\u3002&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    process<span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5F02\u6B65\u51FD\u6570\u7EC4\u5408-\u662F\u5426\u8C03\u7528\u4E0B\u4E00\u4E2A\u51FD\u6570-\u5B8C\u5168\u7531\u4E2D\u95F4\u4EF6\u81EA\u5DF1\u51B3\u5B9A" tabindex="-1"><a class="header-anchor" href="#\u5F02\u6B65\u51FD\u6570\u7EC4\u5408-\u662F\u5426\u8C03\u7528\u4E0B\u4E00\u4E2A\u51FD\u6570-\u5B8C\u5168\u7531\u4E2D\u95F4\u4EF6\u81EA\u5DF1\u51B3\u5B9A" aria-hidden="true">#</a> \u5F02\u6B65\u51FD\u6570\u7EC4\u5408\uFF0C\u662F\u5426\u8C03\u7528\u4E0B\u4E00\u4E2A\u51FD\u6570\uFF0C\u5B8C\u5168\u7531\u4E2D\u95F4\u4EF6\u81EA\u5DF1\u51B3\u5B9A</h2><p>\u8FD9\u4E2A\u51FD\u6570\u5B9A\u4E49\u4E86\u4E00\u4E2A compose() \u51FD\u6570\uFF0C\u5B83\u63A5\u53D7\u4E00\u4E2A\u5305\u542B\u4E00\u7EC4\u4E2D\u95F4\u4EF6\u5BF9\u8C61\u7684\u6570\u7EC4\u4F5C\u4E3A\u53C2\u6570\u3002</p><p>\u6BCF\u4E2A\u4E2D\u95F4\u4EF6\u5BF9\u8C61\u90FD\u6709\u4E00\u4E2A\u540D\u79F0\u548C\u4E00\u4E2A\u51FD\u6570\u3002</p><p>compose() \u51FD\u6570\u4F1A\u6309\u7167\u6570\u7EC4\u4E2D\u7684\u987A\u5E8F\u6267\u884C\u6BCF\u4E2A\u4E2D\u95F4\u4EF6\u51FD\u6570\u3002\u6BCF\u4E2A\u4E2D\u95F4\u4EF6\u51FD\u6570\u6267\u884C\u5B8C\u6BD5\u540E\uFF0C\u4F1A\u66F4\u65B0\u4E00\u4E2A\u540D\u4E3A middlewareData \u7684\u5BF9\u8C61\uFF0C\u8BE5\u5BF9\u8C61\u5305\u542B\u4E86\u6BCF\u4E2A\u4E2D\u95F4\u4EF6\u51FD\u6570\u5904\u7406\u540E\u7684\u6570\u636E\u3002</p><p>\u6700\u7EC8\u8FD4\u56DE\u7684 middlewareData \u5BF9\u8C61\u53EF\u4EE5\u7528\u6765\u5728\u591A\u4E2A\u4E2D\u95F4\u4EF6\u4E4B\u95F4\u5171\u4EAB\u6570\u636E\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token doc-comment comment">/**
 * \u5F02\u6B65\u51FD\u6570\u7EC4\u5408\uFF0C\u662F\u5426\u8C03\u7528\u4E0B\u4E00\u4E2A\u51FD\u6570\uFF0C\u5B8C\u5168\u7531\u4E2D\u95F4\u4EF6\u81EA\u5DF1\u51B3\u5B9A
 * <span class="token keyword">@param</span> <span class="token parameter">middleware</span> \u4E2D\u95F4\u4EF6
 */</span>

<span class="token keyword">type</span> <span class="token class-name">IMiddleware</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  <span class="token function-variable function">fn</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> middlewareData<span class="token punctuation">,</span> next <span class="token punctuation">}</span><span class="token operator">:</span> <span class="token punctuation">{</span> middlewareData<span class="token operator">:</span> Record<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">;</span> <span class="token function-variable function">next</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token punctuation">{</span> data<span class="token operator">:</span> Record<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">any</span><span class="token operator">&gt;</span> <span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">compose</span><span class="token punctuation">(</span>middleware<span class="token operator">:</span> IMiddleware<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> middlewareData<span class="token operator">:</span> Record<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">any</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">dispatch</span><span class="token punctuation">(</span>index<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">===</span> middleware<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> name<span class="token punctuation">,</span> fn <span class="token punctuation">}</span> <span class="token operator">=</span> middleware<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> data <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      middlewareData<span class="token punctuation">,</span>
      <span class="token function-variable function">next</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token operator">++</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    middlewareData <span class="token operator">=</span> <span class="token punctuation">{</span>
      <span class="token operator">...</span>middlewareData<span class="token punctuation">,</span>
      <span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token operator">...</span>middlewareData<span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token operator">...</span>data<span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u547D\u4EE4\u884C\u5DE5\u5177\u5982\u4F55\u663E\u793Aloading\u52A8\u753B" tabindex="-1"><a class="header-anchor" href="#\u547D\u4EE4\u884C\u5DE5\u5177\u5982\u4F55\u663E\u793Aloading\u52A8\u753B" aria-hidden="true">#</a> \u547D\u4EE4\u884C\u5DE5\u5177\u5982\u4F55\u663E\u793Aloading\u52A8\u753B</h2><p>\u6211\u4EEC\u5C01\u88C5\u4E86\u5728\u547D\u4EE4\u884C\u5DE5\u5177\u4E2D\u5E38\u7528ora\u8FD9\u4E2A\u5E93\uFF0Cora \u662F\u4E00\u4E2A JavaScript \u5E93\uFF0C\u7528\u4E8E\u5728\u547D\u4EE4\u884C\u4E2D\u663E\u793A loading \u6307\u793A\u5668\u3002</p><p>\u5B83\u53EF\u4EE5\u7528\u6765\u63D0\u793A\u7528\u6237\u5728\u6267\u884C\u5F02\u6B65\u64CD\u4F5C\u65F6\u7684\u8FDB\u5EA6\u548C\u7ED3\u679C\u3002\u4F8B\u5982\uFF0C\u53EF\u4EE5\u4F7F\u7528 ora \u5E93\u5728\u6267\u884C\u67D0\u4E2A\u5F02\u6B65\u4EFB\u52A1\u65F6\u663E\u793A\u4E00\u4E2A\u8F6C\u5708\u5708\u7684 loading \u6307\u793A\u5668\uFF0C\u5E76\u5728\u4EFB\u52A1\u5B8C\u6210\u540E\u663E\u793A\u6210\u529F\u6216\u5931\u8D25\u4FE1\u606F\u3002</p><p>\u63A5\u7740\u770B\u6211\u4EEC\u5C01\u88C5\u7684\u51FD\u6570\uFF0C\u5982\u679C\u51FD\u6570\u6267\u884C\u6210\u529F\uFF0C\u5219 loading \u6307\u793A\u5668\u4F1A\u663E\u793A\u6210\u529F\u4FE1\u606F\uFF0C\u5E76\u5C06\u51FD\u6570\u7684\u8FD4\u56DE\u503C\u4F5C\u4E3A Promise \u7684\u6210\u529F\u503C\uFF1B</p><p>\u5982\u679C\u51FD\u6570\u6267\u884C\u5931\u8D25\uFF0C\u5219 loading \u6307\u793A\u5668\u4F1A\u663E\u793A\u5931\u8D25\u4FE1\u606F\uFF0C\u5E76\u5C06\u51FD\u6570\u629B\u51FA\u7684\u9519\u8BEF\u4F5C\u4E3A Promise \u7684\u5931\u8D25\u503C\u3002\u8FD9\u4E2A\u51FD\u6570\u53EF\u4EE5\u7528\u6765\u63D0\u793A\u7528\u6237\u5728\u6267\u884C\u5F02\u6B65\u64CD\u4F5C\u65F6\u7684\u8FDB\u5EA6\u548C\u7ED3\u679C\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> ora <span class="token keyword">from</span> <span class="token string">&#39;ora&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> print <span class="token keyword">from</span> <span class="token string">&#39;./print&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">withOra</span><span class="token punctuation">(</span>
  <span class="token function-variable function">promiseFn</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> text<span class="token punctuation">,</span> successText<span class="token punctuation">,</span> failText<span class="token punctuation">,</span> startText <span class="token punctuation">}</span><span class="token operator">:</span> <span class="token punctuation">{</span> text<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span> successText<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span> failText<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span> startText<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token builtin">Promise</span></span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> spinner <span class="token operator">=</span> <span class="token function">ora</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    startText <span class="token operator">&amp;&amp;</span> print<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span>startText<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">promiseFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        spinner<span class="token punctuation">.</span><span class="token function">succeed</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\u2705 </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>successText<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">resolve</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        spinner<span class="token punctuation">.</span><span class="token function">fail</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\u274E </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>failText<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">reject</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,74),e=[o];function c(l,i){return s(),a("div",null,e)}const k=n(t,[["render",c],["__file","56.html.vue"]]);export{k as default};
