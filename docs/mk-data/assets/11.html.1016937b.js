import{_ as s,o as n,c as a,a as e}from"./app.26f3bee3.js";const p={},t=e(`<h1 id="\u7C7B\u578B\u63A8\u8BBA-\u7C7B\u578B\u522B\u540D" tabindex="-1"><a class="header-anchor" href="#\u7C7B\u578B\u63A8\u8BBA-\u7C7B\u578B\u522B\u540D" aria-hidden="true">#</a> \u7C7B\u578B\u63A8\u8BBA | \u7C7B\u578B\u522B\u540D</h1><h2 id="\u7C7B\u578B\u63A8\u8BBA" tabindex="-1"><a class="header-anchor" href="#\u7C7B\u578B\u63A8\u8BBA" aria-hidden="true">#</a> \u7C7B\u578B\u63A8\u8BBA</h2><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> s <span class="token operator">=</span> <span class="token string">&#39;mk&#39;</span> <span class="token comment">// string</span>
<span class="token keyword">const</span> b <span class="token operator">=</span> <span class="token boolean">true</span> <span class="token comment">// boolean</span>
<span class="token keyword">const</span> n <span class="token operator">=</span> <span class="token number">1</span> <span class="token comment">// number</span>
<span class="token operator">...</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u7C7B\u578B\u522B\u540D" tabindex="-1"><a class="header-anchor" href="#\u7C7B\u578B\u522B\u540D" aria-hidden="true">#</a> \u7C7B\u578B\u522B\u540D</h2><p>type \u5173\u952E\u5B57\uFF08\u53EF\u4EE5\u7ED9\u4E00\u4E2A\u7C7B\u578B\u5B9A\u4E49\u4E00\u4E2A\u540D\u5B57\uFF09\u591A\u7528\u4E8E\u590D\u5408\u7C7B\u578B</p><p>\u5B9A\u4E49\u7C7B\u578B\u522B\u540D</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">str</span> <span class="token operator">=</span> <span class="token builtin">string</span>

<span class="token keyword">const</span> s<span class="token operator">:</span> str <span class="token operator">=</span> <span class="token string">&#39;mk&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5B9A\u4E49\u51FD\u6570\u522B\u540D</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">str</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">string</span>
<span class="token keyword">const</span> s<span class="token operator">:</span> <span class="token function-variable function">str</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token string">&#39;mk&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5B9A\u4E49\u8054\u5408\u7C7B\u578B\u522B\u540D</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">str</span> <span class="token operator">=</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span>

<span class="token keyword">const</span> s<span class="token operator">:</span> str <span class="token operator">=</span> <span class="token string">&#39;mk&#39;</span>
<span class="token keyword">const</span> s2<span class="token operator">:</span> str <span class="token operator">=</span> <span class="token number">1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5B9A\u4E49\u503C\u7684\u522B\u540D</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">str</span> <span class="token operator">=</span> <span class="token builtin">boolean</span> <span class="token operator">|</span> <span class="token number">0</span> <span class="token operator">|</span> <span class="token string">&#39;mk&#39;</span>

<span class="token keyword">const</span> s<span class="token operator">:</span> str <span class="token operator">=</span> <span class="token boolean">true</span> <span class="token comment">// \u53D8\u91CFs\u7684\u503C  \u53EA\u80FD\u662F\u4E0A\u9762value\u5B9A\u4E49\u7684\u503C</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="type-\u548C-interface-\u8FD8\u662F\u4E00\u4E9B\u533A\u522B\u7684-\u867D\u7136\u90FD\u53EF\u4EE5\u5B9A\u4E49\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#type-\u548C-interface-\u8FD8\u662F\u4E00\u4E9B\u533A\u522B\u7684-\u867D\u7136\u90FD\u53EF\u4EE5\u5B9A\u4E49\u7C7B\u578B" aria-hidden="true">#</a> type \u548C interface \u8FD8\u662F\u4E00\u4E9B\u533A\u522B\u7684 \u867D\u7136\u90FD\u53EF\u4EE5\u5B9A\u4E49\u7C7B\u578B</h2><ul><li>interface\u53EF\u4EE5\u7EE7\u627F type \u53EA\u80FD\u901A\u8FC7 &amp; \u4EA4\u53C9\u7C7B\u578B\u5408\u5E76</li><li>type \u53EF\u4EE5\u5B9A\u4E49 \u8054\u5408\u7C7B\u578B \u548C \u53EF\u4EE5\u4F7F\u7528\u4E00\u4E9B\u64CD\u4F5C\u7B26 interface\u4E0D\u884C</li><li>interface \u9047\u5230\u91CD\u540D\u7684\u4F1A\u5408\u5E76 type \u4E0D\u884C</li></ul><h2 id="type\u9AD8\u7EA7\u7528\u6CD5" tabindex="-1"><a class="header-anchor" href="#type\u9AD8\u7EA7\u7528\u6CD5" aria-hidden="true">#</a> type\u9AD8\u7EA7\u7528\u6CD5</h2><p>\u5DE6\u8FB9\u7684\u503C\u4F1A\u4F5C\u4E3A\u53F3\u8FB9\u503C\u7684\u5B50\u7C7B\u578B\u9075\u5FAA\u56FE\u4E2D\u4E0A\u4E0B\u7684\u5305\u542B\u5173\u7CFB</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">a</span> <span class="token operator">=</span> <span class="token number">1</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">number</span></span> <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token number">0</span> <span class="token comment">//1</span>

<span class="token keyword">type</span> <span class="token class-name">a</span> <span class="token operator">=</span> <span class="token number">1</span> <span class="token keyword">extends</span> <span class="token class-name">Number</span> <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token number">0</span> <span class="token comment">//1</span>

<span class="token keyword">type</span> <span class="token class-name">a</span> <span class="token operator">=</span> <span class="token number">1</span> <span class="token keyword">extends</span> <span class="token class-name">Object</span> <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token number">0</span> <span class="token comment">//1</span>

<span class="token keyword">type</span> <span class="token class-name">a</span> <span class="token operator">=</span> <span class="token number">1</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">any</span></span> <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token number">0</span> <span class="token comment">//1</span>

<span class="token keyword">type</span> <span class="token class-name">a</span> <span class="token operator">=</span> <span class="token number">1</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">unknown</span></span> <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token number">0</span> <span class="token comment">//1</span>

<span class="token keyword">type</span> <span class="token class-name">a</span> <span class="token operator">=</span> <span class="token number">1</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">never</span></span> <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token number">0</span> <span class="token comment">//0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>unknown any
object
Number String Boolean
number string boolean
1 &#39;mk&#39; true
never
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,19),o=[t];function l(r,c){return n(),a("div",null,o)}const d=s(p,[["render",l],["__file","11.html.vue"]]);export{d as default};
