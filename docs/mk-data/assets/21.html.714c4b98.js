import{_ as n,o as s,c as a,a as t}from"./app.c5a3bfa0.js";const p={},e=t(`<h1 id="\u9762\u8BD5\u7387\u8D85\u9AD8\u7684js\u9519\u8BEF\u5904\u7406" tabindex="-1"><a class="header-anchor" href="#\u9762\u8BD5\u7387\u8D85\u9AD8\u7684js\u9519\u8BEF\u5904\u7406" aria-hidden="true">#</a> \u9762\u8BD5\u7387\u8D85\u9AD8\u7684JS\u9519\u8BEF\u5904\u7406</h1><h2 id="\u9519\u8BEF\u6982\u8FF0" tabindex="-1"><a class="header-anchor" href="#\u9519\u8BEF\u6982\u8FF0" aria-hidden="true">#</a> \u9519\u8BEF\u6982\u8FF0</h2><p>JavaScript \u4E2D\u7684\u9519\u8BEF\u662F\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u5728\u53D1\u751F\u9519\u8BEF\u65F6\u4F1A\u629B\u51FA\u8BE5\u5BF9\u8C61\u4EE5\u505C\u6B62\u7A0B\u5E8F\u3002\u5728 JavaScript \u4E2D\uFF0C\u53EF\u4EE5\u901A\u8FC7\u6784\u9020\u51FD\u6570\u6765\u521B\u5EFA\u4E00\u4E2A\u65B0\u7684\u901A\u7528\u9519\u8BEF\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> err <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&quot;Error&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u5F53\u7136\uFF0C\u4E5F\u53EF\u4EE5\u7701\u7565 new \u5173\u952E\u5B57\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> err <span class="token operator">=</span> <span class="token function">Error</span><span class="token punctuation">(</span><span class="token string">&quot;Error&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>Error \u5BF9\u8C61\u6709\u4E09\u4E2A\u5C5E\u6027\uFF1A <ul><li>message\uFF1A\u5E26\u6709\u9519\u8BEF\u6D88\u606F\u7684\u5B57\u7B26\u4E32\uFF1B</li><li>name: \u9519\u8BEF\u7684\u7C7B\u578B\uFF1B</li><li>stack\uFF1A\u51FD\u6570\u6267\u884C\u7684\u5806\u6808\u8DDF\u8E2A\u3002</li></ul></li></ul><p>\u4F8B\u5982\uFF0C\u521B\u5EFA\u4E00\u4E2A TypeError \u5BF9\u8C61\uFF0C\u8BE5\u6D88\u606F\u5C06\u643A\u5E26\u5B9E\u9645\u7684\u9519\u8BEF\u5B57\u7B26\u4E32\uFF0C\u5176 name \u5C06\u662F\u201CTypeError\u201D\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> wrongType <span class="token operator">=</span> <span class="token function">TypeError</span><span class="token punctuation">(</span><span class="token string">&quot;Expected number&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

wrongType<span class="token punctuation">.</span>message<span class="token punctuation">;</span> <span class="token comment">// &#39;Expected number&#39;</span>
wrongType<span class="token punctuation">.</span>name<span class="token punctuation">;</span>    <span class="token comment">// &#39;TypeError&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5806\u6808\u8DDF\u8E2A\u662F\u53D1\u751F\u5F02\u5E38\u6216\u8B66\u544A\u7B49\u4E8B\u4EF6\u65F6\u7A0B\u5E8F\u6240\u5904\u7684\u65B9\u6CD5\u8C03\u7528\u5217\u8868</p><p>\u5B83\u9996\u5148\u4F1A\u6253\u5370\u9519\u8BEF\u540D\u79F0\u548C\u6D88\u606F\uFF0C\u7136\u540E\u662F\u88AB\u8C03\u7528\u7684\u65B9\u6CD5\u5217\u8868\u3002\u6BCF\u4E2A\u65B9\u6CD5\u8C03\u7528\u90FD\u8BF4\u660E\u5176\u6E90\u4EE3\u7801\u7684\u4F4D\u7F6E\u548C\u8C03\u7528\u5B83\u7684\u884C\u3002\u53EF\u4EE5\u4F7F\u7528\u6B64\u6570\u636E\u6765\u6D4F\u89C8\u4EE3\u7801\u5E93\u5E76\u786E\u5B9A\u5BFC\u81F4\u9519\u8BEF\u7684\u4EE3\u7801\u6BB5\u3002\u6B64\u65B9\u6CD5\u5217\u8868\u4EE5\u5806\u53E0\u7684\u65B9\u5F0F\u6392\u5217\u3002\u5B83\u663E\u793A\u4E86\u5F02\u5E38\u9996\u5148\u88AB\u629B\u51FA\u7684\u4F4D\u7F6E\u4EE5\u53CA\u5B83\u5982\u4F55\u901A\u8FC7\u5806\u6808\u65B9\u6CD5\u8C03\u7528\u4F20\u64AD\u3002\u4E3A\u5F02\u5E38\u5B9E\u65BD\u6355\u83B7\u4E0D\u4F1A\u8BA9\u5B83\u901A\u8FC7\u5806\u6808\u5411\u4E0A\u4F20\u64AD\u5E76\u4F7F\u7A0B\u5E8F\u5D29\u6E83\u3002</p><ul><li>\u5BF9\u4E8E Error \u5BF9\u8C61\uFF0CFirefox \u8FD8\u5B9E\u73B0\u4E86\u4E00\u4E9B\u975E\u6807\u51C6\u5C5E\u6027\uFF1A <ul><li>columnNumber\uFF1A\u9519\u8BEF\u6240\u5728\u884C\u7684\u5217\u53F7\uFF1B</li><li>filename\uFF1A\u53D1\u751F\u9519\u8BEF\u7684\u6587\u4EF6</li><li>lineNumber\uFF1A\u53D1\u751F\u9519\u8BEF\u7684\u884C\u53F7</li></ul></li></ul><h2 id="\u9519\u8BEF\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u9519\u8BEF\u7C7B\u578B" aria-hidden="true">#</a> \u9519\u8BEF\u7C7B\u578B</h2><p>JavaScript \u4E2D\u6709\u4E00\u7CFB\u5217\u9884\u5B9A\u4E49\u7684\u9519\u8BEF\u7C7B\u578B\u3002\u53EA\u8981\u4F7F\u7528\u8005\u6CA1\u6709\u660E\u786E\u5904\u7406\u5E94\u7528\u7A0B\u5E8F\u4E2D\u7684\u9519\u8BEF\uFF0C\u5B83\u4EEC\u5C31\u4F1A\u7531 JavaScript \u8FD0\u884C\u65F6\u81EA\u52A8\u9009\u62E9\u548C\u5B9A\u4E49\u3002</p><ul><li>JavaScript\u4E2D\u7684\u9519\u8BEF\u7C7B\u578B\u5305\u62EC\uFF1A <ul><li>EvalError</li><li>InternalError</li><li>RangeError</li><li>ReferenceError</li><li>SyntaxError</li><li>TypeError</li><li>URIError</li></ul></li></ul><p>\u8FD9\u4E9B\u9519\u8BEF\u7C7B\u578B\u90FD\u662F\u5B9E\u9645\u7684\u6784\u9020\u51FD\u6570\uFF0C\u65E8\u5728\u8FD4\u56DE\u4E00\u4E2A\u65B0\u7684\u9519\u8BEF\u5BF9\u8C61\u3002\u6700\u5E38\u89C1\u7684\u5C31\u662F TypeError\u3002\u5927\u591A\u6570\u65F6\u5019\uFF0C\u5927\u90E8\u5206\u9519\u8BEF\u5C06\u76F4\u63A5\u6765\u81EA JavaScript \u5F15\u64CE\uFF0C\u4F8B\u5982 InternalError \u6216 SyntaxError\u3002</p><p>JavaScript \u63D0\u4F9B\u4E86 instanceof \u8FD0\u7B97\u7B26\u53EF\u4EE5\u7528\u4E8E\u533A\u5206\u5F02\u5E38\u7C7B\u578B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">try</span> <span class="token punctuation">{</span>
  <span class="token function">If</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token keyword">typeof</span> x <span class="token operator">!==</span> \u2018number\u2019</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
       <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">TypeError</span><span class="token punctuation">(</span>\u2018x \u5E94\u662F\u6570\u5B57\u2019<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
       <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RangeError</span><span class="token punctuation">(</span><span class="token string">&#39;x \u5E94\u5927\u4E8E 0&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
       <span class="token comment">// ...</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>err <span class="token keyword">instanceof</span> <span class="token class-name">TypeError</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5904\u7406 TypeError \u9519\u8BEF</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>err <span class="token keyword">instanceof</span> <span class="token class-name">RangeError</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5904\u7406 RangeError \u9519\u8BEF</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5904\u7406\u5176\u4ED6\u7C7B\u578B\u9519\u8BEF</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0B\u9762\u6765\u4E86\u89E3 JavaScript \u4E2D\u6700\u5E38\u89C1\u7684\u9519\u8BEF\u7C7B\u578B\uFF0C\u5E76\u4E86\u89E3\u5B83\u4EEC\u53D1\u751F\u7684\u65F6\u95F4\u548C\u539F\u56E0\u3002</p><h3 id="syntaxerror" tabindex="-1"><a class="header-anchor" href="#syntaxerror" aria-hidden="true">#</a> SyntaxError</h3><p>SyntaxError \u8868\u793A\u8BED\u6CD5\u9519\u8BEF\u3002\u8FD9\u4E9B\u9519\u8BEF\u662F\u6700\u5BB9\u6613\u4FEE\u590D\u7684\u9519\u8BEF\u4E4B\u4E00\uFF0C\u56E0\u4E3A\u5B83\u4EEC\u8868\u660E\u4EE3\u7801\u8BED\u6CD5\u4E2D\u5B58\u5728\u9519\u8BEF\u3002\u7531\u4E8E JavaScript \u662F\u4E00\u79CD\u89E3\u91CA\u800C\u975E\u7F16\u8BD1\u7684\u811A\u672C\u8BED\u8A00\uFF0C\u56E0\u6B64\u5F53\u5E94\u7528\u7A0B\u5E8F\u6267\u884C\u5305\u542B\u9519\u8BEF\u7684\u811A\u672C\u65F6\u4F1A\u629B\u51FA\u8FD9\u4E9B\u9519\u8BEF\u3002\u5728\u7F16\u8BD1\u8BED\u8A00\u7684\u60C5\u51B5\u4E0B\uFF0C\u6B64\u7C7B\u9519\u8BEF\u5728\u7F16\u8BD1\u671F\u95F4\u88AB\u8BC6\u522B\u3002\u56E0\u6B64\uFF0C\u5728\u4FEE\u590D\u8FD9\u4E9B\u95EE\u9898\u4E4B\u524D\uFF0C\u4E0D\u4F1A\u521B\u5EFA\u5E94\u7528\u7A0B\u5E8F\u4E8C\u8FDB\u5236\u6587\u4EF6\u3002</p><ul><li>SyntaxError \u53D1\u751F\u7684\u4E00\u4E9B\u5E38\u89C1\u539F\u56E0\u662F\uFF1A <ul><li>\u7F3A\u5C11\u5F15\u53F7</li><li>\u7F3A\u5C11\u53F3\u62EC\u53F7</li><li>\u5927\u62EC\u53F7\u6216\u5176\u4ED6\u5B57\u7B26\u5BF9\u9F50\u4E0D\u5F53</li></ul></li></ul><h3 id="typeerror" tabindex="-1"><a class="header-anchor" href="#typeerror" aria-hidden="true">#</a> TypeError</h3><p>TypeError \u662F JavaScript \u5E94\u7528\u7A0B\u5E8F\u4E2D\u6700\u5E38\u89C1\u7684\u9519\u8BEF\u4E4B\u4E00\uFF0C\u5F53\u67D0\u4E9B\u503C\u4E0D\u662F\u7279\u5B9A\u7684\u9884\u671F\u7C7B\u578B\u65F6\uFF0C\u5C31\u4F1A\u4EA7\u751F\u6B64\u9519\u8BEF\u3002</p><ul><li>TypeError \u53D1\u751F\u7684\u4E00\u4E9B\u5E38\u89C1\u539F\u56E0\u662F\uFF1A <ul><li>\u8C03\u7528\u4E0D\u662F\u65B9\u6CD5\u7684\u5BF9\u8C61\u3002</li><li>\u8BD5\u56FE\u8BBF\u95EE null \u6216\u672A\u5B9A\u4E49\u5BF9\u8C61\u7684\u5C5E\u6027</li><li>\u5C06\u5B57\u7B26\u4E32\u89C6\u4E3A\u6570\u5B57\uFF0C\u53CD\u4E4B\u4EA6\u7136</li></ul></li></ul><h3 id="referenceerror" tabindex="-1"><a class="header-anchor" href="#referenceerror" aria-hidden="true">#</a> ReferenceError</h3><p>ReferenceError \u8868\u793A\u5F15\u7528\u9519\u8BEF\u3002\u5F53\u4EE3\u7801\u4E2D\u7684\u53D8\u91CF\u5F15\u7528\u6709\u95EE\u9898\u65F6\uFF0C\u4F1A\u53D1\u751F ReferenceError\u3002\u53EF\u80FD\u5FD8\u8BB0\u5728\u4F7F\u7528\u53D8\u91CF\u4E4B\u524D\u4E3A\u5176\u5B9A\u4E49\u4E00\u4E2A\u503C\uFF0C\u6216\u8005\u53EF\u80FD\u8BD5\u56FE\u5728\u4EE3\u7801\u4E2D\u4F7F\u7528\u4E00\u4E2A\u4E0D\u53EF\u8BBF\u95EE\u7684\u53D8\u91CF\u3002\u5728\u4EFB\u4F55\u60C5\u51B5\u4E0B\uFF0C\u901A\u8FC7\u5806\u6808\u8DDF\u8E2A\u90FD\u53EF\u4EE5\u63D0\u4F9B\u5145\u8DB3\u7684\u4FE1\u606F\u6765\u67E5\u627E\u548C\u4FEE\u590D\u6709\u95EE\u9898\u7684\u53D8\u91CF\u5F15\u7528\u3002</p><ul><li>ReferenceErrors \u53D1\u751F\u7684\u4E00\u4E9B\u5E38\u89C1\u539F\u56E0\u5982\u4E0B\uFF1A <ul><li>\u5728\u53D8\u91CF\u540D\u4E2D\u8F93\u5165\u9519\u8BEF\u3002</li><li>\u8BD5\u56FE\u8BBF\u95EE\u5176\u4F5C\u7528\u57DF\u4E4B\u5916\u7684\u5757\u4F5C\u7528\u57DF\u53D8\u91CF\u3002</li><li>\u5728\u52A0\u8F7D\u4E4B\u524D\u4ECE\u5916\u90E8\u5E93\u5F15\u7528\u5168\u5C40\u53D8\u91CF\u3002</li></ul></li></ul><h3 id="rangeerror" tabindex="-1"><a class="header-anchor" href="#rangeerror" aria-hidden="true">#</a> RangeError</h3><p>RangeError \u8868\u793A\u8303\u56F4\u9519\u8BEF\u3002\u5F53\u53D8\u91CF\u8BBE\u7F6E\u7684\u503C\u8D85\u51FA\u5176\u5408\u6CD5\u503C\u8303\u56F4\u65F6\uFF0C\u5C06\u629B\u51FA RangeError\u3002\u5B83\u901A\u5E38\u53D1\u751F\u5728\u5C06\u503C\u4F5C\u4E3A\u53C2\u6570\u4F20\u9012\u7ED9\u51FD\u6570\u65F6\uFF0C\u5E76\u4E14\u7ED9\u5B9A\u503C\u4E0D\u5728\u51FD\u6570\u53C2\u6570\u7684\u8303\u56F4\u5185\u3002\u5F53\u4F7F\u7528\u8BB0\u5F55\u4E0D\u5B8C\u6574\u7684\u7B2C\u4E09\u65B9\u5E93\u65F6\uFF0C\u6709\u65F6\u4FEE\u590D\u8D77\u6765\u4F1A\u5F88\u68D8\u624B\uFF0C\u56E0\u4E3A\u9700\u8981\u77E5\u9053\u53C2\u6570\u7684\u53EF\u80FD\u503C\u8303\u56F4\u624D\u80FD\u4F20\u9012\u6B63\u786E\u7684\u503C\u3002</p><ul><li>RangeError \u53D1\u751F\u7684\u4E00\u4E9B\u5E38\u89C1\u573A\u666F\u5982\u4E0B\uFF1A <ul><li>\u8BD5\u56FE\u901A\u8FC7 Array \u6784\u9020\u51FD\u6570\u521B\u5EFA\u975E\u6CD5\u957F\u5EA6\u7684\u6570\u7EC4\u3002</li><li>\u5C06\u9519\u8BEF\u7684\u503C\u4F20\u9012\u7ED9\u6570\u5B57\u65B9\u6CD5\uFF0C\u4F8B\u5982 toExponential()\u3001toPrecision()\u3001toFixed() \u7B49\u3002</li><li>\u5C06\u975E\u6CD5\u503C\u4F20\u9012\u7ED9\u5B57\u7B26\u4E32\u51FD\u6570\uFF0C\u4F8B\u5982 normalize()\u3002</li></ul></li></ul><h3 id="urierror" tabindex="-1"><a class="header-anchor" href="#urierror" aria-hidden="true">#</a> URIError</h3><p>URIError \u8868\u793A URI\u9519\u8BEF\u3002\u5F53 URI \u7684\u7F16\u7801\u548C\u89E3\u7801\u51FA\u73B0\u95EE\u9898\u65F6\uFF0C\u4F1A\u629B\u51FA URIError\u3002JavaScript \u4E2D\u7684 URI \u64CD\u4F5C\u51FD\u6570\u5305\u62EC\uFF1AdecodeURI\u3001decodeURIComponent \u7B49\u3002\u5982\u679C\u4F7F\u7528\u4E86\u9519\u8BEF\u7684\u53C2\u6570\uFF08\u65E0\u6548\u5B57\u7B26\uFF09\uFF0C\u5C31\u4F1A\u629B\u51FA URIError\u3002</p><h3 id="evalerror" tabindex="-1"><a class="header-anchor" href="#evalerror" aria-hidden="true">#</a> EvalError</h3><p>EvalError \u8868\u793A Eval \u9519\u8BEF\u3002\u5F53 eval() \u51FD\u6570\u8C03\u7528\u53D1\u751F\u9519\u8BEF\u65F6\uFF0C\u4F1A\u629B\u51FA EvalError\u3002\u4E0D\u8FC7\uFF0C\u5F53\u524D\u7684 JavaScript \u5F15\u64CE\u6216 ECMAScript \u89C4\u8303\u4E0D\u518D\u629B\u51FA\u6B64\u9519\u8BEF\u3002\u4F46\u662F\uFF0C\u4E3A\u4E86\u5411\u540E\u517C\u5BB9\uFF0C\u5B83\u4ECD\u7136\u662F\u5B58\u5728\u7684\u3002</p><p>\u5982\u679C\u4F7F\u7528\u7684\u662F\u65E7\u7248\u672C\u7684 JavaScript\uFF0C\u53EF\u80FD\u4F1A\u9047\u5230\u6B64\u9519\u8BEF\u3002\u5728\u4EFB\u4F55\u60C5\u51B5\u4E0B\uFF0C\u6700\u597D\u8C03\u67E5\u5728eval()\u51FD\u6570\u8C03\u7528\u4E2D\u6267\u884C\u7684\u4EE3\u7801\u662F\u5426\u6709\u4EFB\u4F55\u5F02\u5E38\u3002</p><h3 id="internalerror" tabindex="-1"><a class="header-anchor" href="#internalerror" aria-hidden="true">#</a> InternalError</h3><p>InternalError \u8868\u793A\u5185\u90E8\u9519\u8BEF\u3002\u5728 JavaScript \u8FD0\u884C\u65F6\u5F15\u64CE\u53D1\u751F\u5F02\u5E38\u65F6\u4F7F\u7528\u3002\u5B83\u8868\u793A\u4EE3\u7801\u53EF\u80FD\u5B58\u5728\u95EE\u9898\u4E5F\u53EF\u80FD\u4E0D\u5B58\u5728\u95EE\u9898\u3002</p><ul><li>InternalError \u901A\u5E38\u53EA\u53D1\u751F\u5728\u4E24\u79CD\u60C5\u51B5\u4E0B\uFF1A <ul><li>\u5F53 JavaScript \u8FD0\u884C\u65F6\u7684\u8865\u4E01\u6216\u66F4\u65B0\u5E26\u6709\u5F15\u53D1\u5F02\u5E38\u7684\u9519\u8BEF\u65F6\uFF08\u8FD9\u79CD\u60C5\u51B5\u5F88\u5C11\u53D1\u751F\uFF09\uFF1B</li><li>\u5F53\u4EE3\u7801\u5305\u542B\u5BF9\u4E8E JavaScript \u5F15\u64CE\u800C\u8A00\u592A\u5927\u7684\u5B9E\u4F53\u65F6\uFF08\u4F8B\u5982\uFF0C\u6570\u7EC4\u521D\u59CB\u503C\u8BBE\u5B9A\u9879\u592A\u5927\u3001\u9012\u5F52\u592A\u591A\uFF09\u3002</li></ul></li></ul><p>\u89E3\u51B3\u6B64\u9519\u8BEF\u6700\u5408\u9002\u7684\u65B9\u6CD5\u5C31\u662F\u901A\u8FC7\u9519\u8BEF\u6D88\u606F\u786E\u5B9A\u539F\u56E0\uFF0C\u5E76\u5728\u53EF\u80FD\u7684\u60C5\u51B5\u4E0B\u91CD\u6784\u5E94\u7528\u903B\u8F91\uFF0C\u4EE5\u6D88\u9664 JavaScript \u5F15\u64CE\u4E0A\u5DE5\u4F5C\u8D1F\u8F7D\u7684\u7A81\u7136\u6FC0\u589E\u3002</p><p>\u6CE8\u610F\uFF1A \u73B0\u4EE3 JavaScript \u4E2D\u4E0D\u4F1A\u629B\u51FA EvalError \u548C InternalError\u3002</p><h3 id="\u521B\u5EFA\u81EA\u5B9A\u4E49\u9519\u8BEF\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u521B\u5EFA\u81EA\u5B9A\u4E49\u9519\u8BEF\u7C7B\u578B" aria-hidden="true">#</a> \u521B\u5EFA\u81EA\u5B9A\u4E49\u9519\u8BEF\u7C7B\u578B</h3><p>\u867D\u7136 JavaScript \u63D0\u4F9B\u4E86\u8DB3\u591F\u7684\u9519\u8BEF\u7C7B\u578B\u7C7B\u5217\u8868\u6765\u6DB5\u76D6\u5927\u591A\u6570\u60C5\u51B5\uFF0C\u4F46\u5982\u679C\u8FD9\u4E9B\u9519\u8BEF\u7C7B\u578B\u4E0D\u80FD\u6EE1\u8DB3\u8981\u6C42\uFF0C\u8FD8\u53EF\u4EE5\u521B\u5EFA\u65B0\u7684\u9519\u8BEF\u7C7B\u578B\u3002\u8FD9\u79CD\u7075\u6D3B\u6027\u7684\u57FA\u7840\u5728\u4E8E JavaScript \u5141\u8BB8\u4F7F\u7528 throw \u547D\u4EE4\u629B\u51FA\u4EFB\u4F55\u5185\u5BB9\u3002</p><p>\u53EF\u4EE5\u901A\u8FC7\u6269\u5C55 Error \u7C7B\u4EE5\u521B\u5EFA\u81EA\u5B9A\u4E49\u9519\u8BEF\u7C7B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">ValidationError</span> <span class="token keyword">extends</span> <span class="token class-name">Error</span> <span class="token punctuation">{</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">message</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&quot;ValidationError&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53EF\u4EE5\u901A\u8FC7\u4EE5\u4E0B\u65B9\u5F0F\u4F7F\u7528\u5B83\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">throw</span> <span class="token function">ValidationError</span><span class="token punctuation">(</span><span class="token string">&quot;\u672A\u627E\u5230\u8BE5\u5C5E\u6027: name&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u53EF\u4EE5\u4F7F\u7528 instanceof \u5173\u952E\u5B57\u8BC6\u522B\u5B83\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token function">validateForm</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// \u629B\u51FA ValidationError \u7684\u4EE3\u7801</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>e <span class="token keyword">instanceof</span> <span class="token class-name">ValidationError</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token punctuation">}</span>
    <span class="token keyword">else</span> <span class="token punctuation">{</span>

    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u629B\u51FA\u9519\u8BEF" tabindex="-1"><a class="header-anchor" href="#\u629B\u51FA\u9519\u8BEF" aria-hidden="true">#</a> \u629B\u51FA\u9519\u8BEF</h2><p>\u5F88\u591A\u4EBA\u8BA4\u4E3A\u9519\u8BEF\u548C\u5F02\u5E38\u662F\u4E00\u56DE\u4E8B\u3002\u5B9E\u9645\u4E0A\uFF0CError \u5BF9\u8C61\u53EA\u6709\u5728\u88AB\u629B\u51FA\u65F6\u624D\u4F1A\u6210\u4E3A\u5F02\u5E38\u3002</p><p>\u5728 JavaScript \u4E2D\u629B\u51FA\u5F02\u5E38\uFF0C\u53EF\u4EE5\u4F7F\u7528 throw \u6765\u629B\u51FA Error \u5BF9\u8C61\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">throw</span> <span class="token function">TypeError</span><span class="token punctuation">(</span><span class="token string">&quot;Expected number&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u6216\u8005\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">TypeError</span><span class="token punctuation">(</span><span class="token string">&quot;Expected number&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u6765\u770B\u4E00\u4E2A\u7B80\u5355\u7684\u4F8B\u5B50\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">toUppercase</span><span class="token punctuation">(</span><span class="token parameter">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> string <span class="token operator">!==</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token function">TypeError</span><span class="token punctuation">(</span><span class="token string">&quot;Expected string&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> string<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u8FD9\u91CC\uFF0C\u6211\u4EEC\u68C0\u67E5\u51FD\u6570\u53C2\u6570\u662F\u5426\u4E3A\u5B57\u7B26\u4E32\u3002\u5982\u679C\u4E0D\u662F\uFF0C\u5C31\u629B\u51FA\u5F02\u5E38\u3002</p><p>\u4ECE\u6280\u672F\u4E0A\u8BB2\uFF0C\u6211\u4EEC\u53EF\u4EE5\u5728 JavaScript \u4E2D\u629B\u51FA\u4EFB\u4F55\u4E1C\u897F\uFF0C\u800C\u4E0D\u4EC5\u4EC5\u662F Error \u5BF9\u8C61\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">throw</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">throw</span> <span class="token number">33</span><span class="token punctuation">;</span>
<span class="token keyword">throw</span> <span class="token string">&quot;Error!&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">throw</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F46\u662F\uFF0C\u6700\u597D\u907F\u514D\u8FD9\u6837\u505A\uFF1A<strong>\u8981\u629B\u51FA\u6B63\u786E\u7684 Error \u5BF9\u8C61\uFF0C\u800C\u4E0D\u662F\u539F\u8BED</strong>\u3002</p><h2 id="\u629B\u51FA\u5F02\u5E38\u65F6\u4F1A\u53D1\u751F\u4EC0\u4E48" tabindex="-1"><a class="header-anchor" href="#\u629B\u51FA\u5F02\u5E38\u65F6\u4F1A\u53D1\u751F\u4EC0\u4E48" aria-hidden="true">#</a> \u629B\u51FA\u5F02\u5E38\u65F6\u4F1A\u53D1\u751F\u4EC0\u4E48\uFF1F</h2><p>\u5F02\u5E38\u4E00\u65E6\u629B\u51FA\uFF0C\u5C31\u4F1A\u5728\u7A0B\u5E8F\u5806\u6808\u4E2D\u5192\u6CE1\uFF0C\u9664\u975E\u5728\u67D0\u4E2A\u5730\u65B9\u88AB\u6355\u83B7\u3002</p><p>\u6765\u770B\u4E0B\u9762\u7684\u4F8B\u5B50\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">toUppercase</span><span class="token punctuation">(</span><span class="token parameter">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> string <span class="token operator">!==</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token function">TypeError</span><span class="token punctuation">(</span><span class="token string">&quot;Expected string&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> string<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">toUppercase</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u6D4F\u89C8\u5668\u6216 Node.js \u4E2D\u8FD0\u884C\u6B64\u4EE3\u7801\uFF0C\u7A0B\u5E8F\u5C06\u505C\u6B62\u5E76\u629B\u51FA\u9519\u8BEF</p><p>\u8FD9\u91CC\u8FD8\u663E\u793A\u4E86\u53D1\u751F\u9519\u8BEF\u7684\u786E\u5207\u884C\u3002\u8FD9\u4E2A\u9519\u8BEF\u5C31\u662F\u4E00\u4E2A\u5806\u6808\u8DDF\u8E2A\uFF0C\u6709\u52A9\u4E8E\u8DDF\u8E2A\u4EE3\u7801\u4E2D\u7684\u95EE\u9898\u3002\u5806\u6808\u8DDF\u8E2A\u4ECE\u4E0B\u5230\u4E0A\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>at toUppercase (&lt;anonymous&gt;:3:11)
at &lt;anonymous&gt;:9:1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>toUppercase \u51FD\u6570\u5728\u7B2C 9 \u884C\u8C03\u7528\uFF0C\u5728\u7B2C 3 \u884C\u629B\u51FA\u9519\u8BEF\u3002\u9664\u4E86\u5728\u6D4F\u89C8\u5668\u7684\u63A7\u5236\u53F0\u4E2D\u67E5\u770B\u6B64\u5806\u6808\u8DDF\u8E2A\u4E4B\u5916\uFF0C\u8FD8\u53EF\u4EE5\u5728 Error \u5BF9\u8C61\u7684 stack \u5C5E\u6027\u4E0A\u8BBF\u95EE\u5B83\u3002</p><p>\u4ECB\u7ECD\u5B8C\u8FD9\u4E9B\u5173\u4E8E\u9519\u8BEF\u7684\u57FA\u7840\u77E5\u8BC6\u4E4B\u540E\uFF0C\u4E0B\u9762\u6765\u770B\u770B\u540C\u6B65\u548C\u5F02\u6B65 JavaScript \u4EE3\u7801\u4E2D\u7684\u9519\u8BEF\u548C\u5F02\u5E38\u5904\u7406\u3002</p><h2 id="\u540C\u6B65\u9519\u8BEF\u5904\u7406" tabindex="-1"><a class="header-anchor" href="#\u540C\u6B65\u9519\u8BEF\u5904\u7406" aria-hidden="true">#</a> \u540C\u6B65\u9519\u8BEF\u5904\u7406</h2><h3 id="\u5E38\u89C4\u51FD\u6570\u7684\u9519\u8BEF\u5904\u7406" tabindex="-1"><a class="header-anchor" href="#\u5E38\u89C4\u51FD\u6570\u7684\u9519\u8BEF\u5904\u7406" aria-hidden="true">#</a> \u5E38\u89C4\u51FD\u6570\u7684\u9519\u8BEF\u5904\u7406</h3><p>\u540C\u6B65\u4EE3\u7801\u4F1A\u6309\u7167\u4EE3\u7801\u7F16\u5199\u987A\u5E8F\u6267\u884C\u3002\u8BA9\u6211\u4EEC\u518D\u770B\u770B\u524D\u9762\u7684\u4F8B\u5B50\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">toUppercase</span><span class="token punctuation">(</span><span class="token parameter">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> string <span class="token operator">!==</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token function">TypeError</span><span class="token punctuation">(</span><span class="token string">&quot;Expected string&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> string<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">toUppercase</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u8FD9\u91CC\uFF0C\u5F15\u64CE\u8C03\u7528\u5E76\u6267\u884C toUppercase\uFF0C\u8FD9\u4E00\u5207\u90FD\u662F\u540C\u6B65\u53D1\u751F\u7684\u3002 \u8981\u6355\u83B7\u7531\u6B64\u7C7B\u540C\u6B65\u51FD\u6570\u5F15\u53D1\u7684\u5F02\u5E38\uFF0C\u53EF\u4EE5\u4F7F\u7528 try/catch/finally\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">try</span> <span class="token punctuation">{</span>
  <span class="token function">toUppercase</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>error<span class="token punctuation">.</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u901A\u5E38\uFF0Ctry \u4F1A\u5904\u7406\u6B63\u5E38\u7684\u8DEF\u5F84\uFF0C\u6216\u8005\u53EF\u80FD\u8FDB\u884C\u7684\u51FD\u6570\u8C03\u7528\u3002catch \u5C31\u4F1A\u6355\u83B7\u5B9E\u9645\u7684\u5F02\u5E38\uFF0C\u5B83\u63A5\u6536 Error \u5BF9\u8C61\u3002\u800C\u4E0D\u7BA1\u51FD\u6570\u7684\u7ED3\u679C\u5982\u4F55\uFF0Cfinally \u8BED\u53E5\u90FD\u4F1A\u8FD0\u884C\uFF1A\u65E0\u8BBA\u5B83\u5931\u8D25\u8FD8\u662F\u6210\u529F\uFF0Cfinally \u4E2D\u7684\u4EE3\u7801\u90FD\u4F1A\u8FD0\u884C\u3002</p><h3 id="\u751F\u6210\u5668\u51FD\u6570\u7684\u9519\u8BEF\u5904\u7406" tabindex="-1"><a class="header-anchor" href="#\u751F\u6210\u5668\u51FD\u6570\u7684\u9519\u8BEF\u5904\u7406" aria-hidden="true">#</a> \u751F\u6210\u5668\u51FD\u6570\u7684\u9519\u8BEF\u5904\u7406</h3><p>JavaScript \u4E2D\u7684\u751F\u6210\u5668\u51FD\u6570\u662F\u4E00\u79CD\u7279\u6B8A\u7C7B\u578B\u7684\u51FD\u6570\u3002\u5B83\u53EF\u4EE5\u968F\u610F\u6682\u505C\u548C\u6062\u590D\uFF0C\u9664\u4E86\u5728\u5176\u5185\u90E8\u8303\u56F4\u548C\u6D88\u8D39\u8005\u4E4B\u95F4\u63D0\u4F9B\u53CC\u5411\u901A\u4FE1\u901A\u9053\u3002\u4E3A\u4E86\u521B\u5EFA\u4E00\u4E2A\u751F\u6210\u5668\u51FD\u6570\uFF0C\u9700\u8981\u5728 function \u5173\u952E\u5B57\u540E\u9762\u52A0\u4E0A\u4E00\u4E2A *\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">generate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token comment">//</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53EA\u8981\u8FDB\u5165\u51FD\u6570\uFF0C\u5C31\u53EF\u4EE5\u4F7F\u7528 yield \u6765\u8FD4\u56DE\u503C\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">generate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">yield</span> <span class="token number">33</span><span class="token punctuation">;</span>
  <span class="token keyword">yield</span> <span class="token number">99</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u751F\u6210\u5668\u51FD\u6570\u7684\u8FD4\u56DE\u503C\u662F\u4E00\u4E2A\u8FED\u4EE3\u5668\u5BF9\u8C61\u3002\u8981\u4ECE\u751F\u6210\u5668\u4E2D\u63D0\u53D6\u503C\uFF0C\u53EF\u4EE5\u4F7F\u7528\u4E24\u79CD\u65B9\u6CD5\uFF1A <ul><li>\u5728\u8FED\u4EE3\u5668\u5BF9\u8C61\u4E0A\u8C03\u7528 next()</li><li>\u4F7F\u7528 for...of \u8FDB\u884C\u8FED\u4EE3</li></ul></li></ul><p>\u4EE5\u4E0A\u9762\u7684\u4EE3\u7801\u4E3A\u4F8B\uFF0C\u8981\u4ECE\u751F\u6210\u5668\u4E2D\u83B7\u53D6\u503C\uFF0C\u53EF\u4EE5\u8FD9\u6837\u505A\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">generate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">yield</span> <span class="token number">33</span><span class="token punctuation">;</span>
  <span class="token keyword">yield</span> <span class="token number">99</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> go <span class="token operator">=</span> <span class="token function">generate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5F53\u6211\u4EEC\u8C03\u7528\u751F\u6210\u5668\u51FD\u6570\u65F6\uFF0C\u8FD9\u91CC\u7684 go \u5C31\u662F\u751F\u6210\u7684\u8FED\u4EE3\u5668\u5BF9\u8C61\u3002\u63A5\u4E0B\u6765\uFF0C\u5C31\u53EF\u4EE5\u8C03\u7528 go.next() \u6765\u7EE7\u7EED\u6267\u884C\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">generate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">yield</span> <span class="token number">33</span><span class="token punctuation">;</span>
  <span class="token keyword">yield</span> <span class="token number">99</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> go <span class="token operator">=</span> <span class="token function">generate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> firstStep <span class="token operator">=</span> go<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token punctuation">;</span> <span class="token comment">// 33</span>
<span class="token keyword">const</span> secondStep <span class="token operator">=</span> go<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token punctuation">;</span> <span class="token comment">// 99</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u751F\u6210\u5668\u4E5F\u53EF\u4EE5\u63A5\u53D7\u6765\u81EA\u8C03\u7528\u8005\u7684\u503C\u548C\u5F02\u5E38\u3002\u9664\u4E86 next()\uFF0C\u4ECE\u751F\u6210\u5668\u8FD4\u56DE\u7684\u8FED\u4EE3\u5668\u5BF9\u8C61\u8FD8\u6709\u4E00\u4E2A throw() \u65B9\u6CD5\u3002\u4F7F\u7528\u8FD9\u79CD\u65B9\u6CD5\uFF0C\u5C31\u53EF\u4EE5\u901A\u8FC7\u5411\u751F\u6210\u5668\u4E2D\u6CE8\u5165\u5F02\u5E38\u6765\u505C\u6B62\u7A0B\u5E8F\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">generate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">yield</span> <span class="token number">33</span><span class="token punctuation">;</span>
  <span class="token keyword">yield</span> <span class="token number">99</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> go <span class="token operator">=</span> <span class="token function">generate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> firstStep <span class="token operator">=</span> go<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token punctuation">;</span> <span class="token comment">// 33</span>

go<span class="token punctuation">.</span><span class="token function">throw</span><span class="token punctuation">(</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token string">&quot;Tired of iterating!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> secondStep <span class="token operator">=</span> go<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token punctuation">;</span> <span class="token comment">// never reached</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8981\u6355\u83B7\u6B64\u7C7B\u9519\u8BEF\uFF0C\u53EF\u4EE5\u4F7F\u7528 try/catch \u5C06\u4EE3\u7801\u5305\u88C5\u5728\u751F\u6210\u5668\u4E2D\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">generate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token keyword">yield</span> <span class="token number">33</span><span class="token punctuation">;</span>
    <span class="token keyword">yield</span> <span class="token number">99</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>error<span class="token punctuation">.</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u751F\u6210\u5668\u51FD\u6570\u4E5F\u53EF\u4EE5\u5411\u5916\u90E8\u629B\u51FA\u5F02\u5E38\u3002 \u6355\u83B7\u8FD9\u4E9B\u5F02\u5E38\u7684\u673A\u5236\u4E0E\u6355\u83B7\u540C\u6B65\u5F02\u5E38\u7684\u673A\u5236\u76F8\u540C\uFF1Atry/catch/finally\u3002</p><p>\u4E0B\u9762\u662F\u4F7F\u7528 for...of \u4ECE\u5916\u90E8\u4F7F\u7528\u7684\u751F\u6210\u5668\u51FD\u6570\u7684\u793A\u4F8B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">generate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">yield</span> <span class="token number">33</span><span class="token punctuation">;</span>
  <span class="token keyword">yield</span> <span class="token number">99</span><span class="token punctuation">;</span>
  <span class="token keyword">throw</span> <span class="token function">Error</span><span class="token punctuation">(</span><span class="token string">&quot;Tired of iterating!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">try</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> value <span class="token keyword">of</span> <span class="token function">generate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>error<span class="token punctuation">.</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u91CC\uFF0Ctry \u5757\u4E2D\u5305\u542B\u6B63\u5E38\u7684\u8FED\u4EE3\u3002\u5982\u679C\u53D1\u751F\u4EFB\u4F55\u5F02\u5E38\uFF0C\u5C31\u4F1A\u7528 catch \u6355\u83B7\u5B83\u3002</p><h2 id="\u5F02\u6B65\u9519\u8BEF\u5904\u7406" tabindex="-1"><a class="header-anchor" href="#\u5F02\u6B65\u9519\u8BEF\u5904\u7406" aria-hidden="true">#</a> \u5F02\u6B65\u9519\u8BEF\u5904\u7406</h2><p>\u6D4F\u89C8\u5668\u4E2D\u7684\u5F02\u6B65\u5305\u62EC\u5B9A\u65F6\u5668\u3001\u4E8B\u4EF6\u3001Promise \u7B49\u3002\u5F02\u6B65\u4E16\u754C\u4E2D\u7684\u9519\u8BEF\u5904\u7406\u4E0E\u540C\u6B65\u4E16\u754C\u4E2D\u7684\u5904\u7406\u4E0D\u540C\u3002\u4E0B\u9762\u6765\u770B\u4E00\u4E9B\u4F8B\u5B50\u3002</p><h3 id="\u5B9A\u65F6\u5668\u7684\u9519\u8BEF\u5904\u7406" tabindex="-1"><a class="header-anchor" href="#\u5B9A\u65F6\u5668\u7684\u9519\u8BEF\u5904\u7406" aria-hidden="true">#</a> \u5B9A\u65F6\u5668\u7684\u9519\u8BEF\u5904\u7406</h3><p>\u4E0A\u9762\u6211\u4EEC\u4ECB\u7ECD\u4E86\u5982\u4F55\u4F7F\u7528 try/catch/finally \u6765\u5904\u7406\u9519\u8BEF\uFF0C\u90A3\u5F02\u6B65\u4E2D\u53EF\u4EE5\u4F7F\u7528\u8FD9\u4E9B\u6765\u5904\u7406\u9519\u8BEF\u5417\uFF1F\u5148\u6765\u770B\u4E00\u4E2A\u4F8B\u5B50\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">failAfterOneSecond</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token function">Error</span><span class="token punctuation">(</span><span class="token string">&quot;Wrong!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6B64\u51FD\u6570\u5728\u5927\u7EA6 1 \u79D2\u540E\u4F1A\u629B\u51FA\u9519\u8BEF\u3002\u90A3\u5904\u7406\u6B64\u5F02\u5E38\u7684\u6B63\u786E\u65B9\u6CD5\u662F\u4EC0\u4E48\uFF1F\u4EE5\u4E0B\u4EE3\u7801\u662F\u65E0\u6548\u7684\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">failAfterOneSecond</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token function">Error</span><span class="token punctuation">(</span><span class="token string">&quot;Wrong!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">try</span> <span class="token punctuation">{</span>
  <span class="token function">failAfterOneSecond</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>error<span class="token punctuation">.</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6211\u4EEC\u77E5\u9053\uFF0Ctry/catch\u662F\u540C\u6B65\u7684\uFF0C\u6240\u4EE5\u6CA1\u529E\u6CD5\u8FD9\u6837\u6765\u5904\u7406\u5F02\u6B65\u4E2D\u7684\u9519\u8BEF\u3002\u5F53\u4F20\u9012\u7ED9 setTimeout\u7684\u56DE\u8C03\u8FD0\u884C\u65F6\uFF0Ctry/catch \u65E9\u5DF2\u6267\u884C\u5B8C\u6BD5\u3002\u7A0B\u5E8F\u5C06\u4F1A\u5D29\u6E83\uFF0C\u56E0\u4E3A\u672A\u80FD\u6355\u83B7\u5F02\u5E38\u3002\u5B83\u4EEC\u662F\u5728\u4E24\u6761\u8DEF\u5F84\u4E0A\u6267\u884C\u7684\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>A: --&gt; try/catch
B: --&gt; setTimeout --&gt; callback --&gt; throw
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u4E8B\u4EF6\u7684\u9519\u8BEF\u5904\u7406" tabindex="-1"><a class="header-anchor" href="#\u4E8B\u4EF6\u7684\u9519\u8BEF\u5904\u7406" aria-hidden="true">#</a> \u4E8B\u4EF6\u7684\u9519\u8BEF\u5904\u7406</h3><p>\u6211\u4EEC\u53EF\u4EE5\u76D1\u542C\u9875\u9762\u4E2D\u4EFB\u4F55 HTML \u5143\u7D20\u7684\u4E8B\u4EF6\uFF0CDOM \u4E8B\u4EF6\u7684\u9519\u8BEF\u5904\u7406\u673A\u5236\u9075\u5FAA\u4E0E\u4EFB\u4F55\u5F02\u6B65 Web API \u76F8\u540C\u7684\u65B9\u6848\u3002</p><p>\u6765\u770B\u4E0B\u9762\u7684\u4F8B\u5B50\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> button <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&quot;button&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

button<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;click&quot;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">throw</span> <span class="token function">Error</span><span class="token punctuation">(</span><span class="token string">&quot;error&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u91CC\uFF0C\u5728\u5355\u51FB\u6309\u94AE\u540E\u7ACB\u5373\u629B\u51FA\u4E86\u5F02\u5E38\uFF0C\u6211\u4EEC\u8BE5\u5982\u4F55\u6355\u83B7\u8FD9\u4E2A\u5F02\u5E38\u5462\uFF1F\u8FD9\u6837\u5199\u662F\u4E0D\u8D77\u4F5C\u7528\u7684\uFF0C\u4E5F\u4E0D\u4F1A\u963B\u6B62\u7A0B\u5E8F\u5D29\u6E83\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> button <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&quot;button&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">try</span> <span class="token punctuation">{</span>
  button<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;click&quot;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token function">Error</span><span class="token punctuation">(</span><span class="token string">&quot;error&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>error<span class="token punctuation">.</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0E\u524D\u9762\u7684 setTimeout \u4F8B\u5B50\u4E00\u6837\uFF0C\u4EFB\u4F55\u4F20\u9012\u7ED9 addEventListener \u7684\u56DE\u8C03\u90FD\u662F\u5F02\u6B65\u6267\u884C\u7684\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Track A: --&gt; try/catch
Track B: --&gt; addEventListener --&gt; callback --&gt; throw
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u4E0D\u60F3\u8BA9\u7A0B\u5E8F\u5D29\u6E83\uFF0C\u4E3A\u4E86\u6B63\u786E\u5904\u7406\u9519\u8BEF\uFF0C\u5C31\u5FC5\u987B\u5C06 try/catch \u653E\u5230 addEventListener \u7684\u56DE\u8C03\u4E2D\u3002\u4E0D\u8FC7\u8FD9\u6837\u505A\u5E76\u4E0D\u662F\u6700\u4F73\u7684\u5904\u7406\u65B9\u5F0F\uFF0C\u4E0E setTimeout \u4E00\u6837\uFF0C\u5F02\u6B65\u4EE3\u7801\u8DEF\u5F84\u629B\u51FA\u7684\u5F02\u5E38\u65E0\u6CD5\u4ECE\u5916\u90E8\u6355\u83B7\uFF0C\u5E76\u4E14\u4F1A\u4F7F\u7A0B\u5E8F\u5D29\u6E83\u3002</p><p>\u4E0B\u9762\u4F1A\u4ECB\u7ECD Promises \u548C async/await \u662F\u5982\u4F55\u7B80\u5316\u5F02\u6B65\u4EE3\u7801\u7684\u9519\u8BEF\u5904\u7406\u7684\u3002</p><h3 id="onerror" tabindex="-1"><a class="header-anchor" href="#onerror" aria-hidden="true">#</a> onerror</h3><p>HTML \u5143\u7D20\u6709\u8BB8\u591A\u4E8B\u4EF6\u5904\u7406\u7A0B\u5E8F\uFF0C\u4F8B\u5982 onclick\u3001onmouseenter\u3001onchange \u7B49\u3002\u9664\u6B64\u4E4B\u5916\uFF0C\u8FD8\u6709 onerror\uFF0C\u6BCF\u5F53 <code>&lt;img&gt;</code> \u6807\u7B7E\u6216 <code>&lt;script&gt;</code> \u7B49 HTML \u5143\u7D20\u547D\u4E2D\u4E0D\u5B58\u5728\u7684\u8D44\u6E90\u65F6\uFF0Conerror \u4E8B\u4EF6\u5904\u7406\u7A0B\u5E8F\u5C31\u4F1A\u89E6\u53D1\u3002</p><p>\u6765\u770B\u4E0B\u9762\u7684\u4F8B\u5B50\uFF1A</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>nowhere-to-be-found.png<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5F53\u8BBF\u95EE\u7684\u8D44\u6E90\u7F3A\u5931\u65F6\uFF0C\u6D4F\u89C8\u5668\u7684\u63A7\u5236\u53F0\u5C31\u4F1A\u62A5\u9519\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>GET http://localhost:5000/nowhere-to-be-found.png
[HTTP/1.1 404 Not Found 3ms]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728 JavaScript \u4E2D\uFF0C\u53EF\u4EE5\u4F7F\u7528\u9002\u5F53\u7684\u4E8B\u4EF6\u5904\u7406\u7A0B\u5E8F\u201C\u6355\u83B7\u201D\u6B64\u9519\u8BEF\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> image <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&quot;img&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

image<span class="token punctuation">.</span><span class="token function-variable function">onerror</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6216\u8005\u4F7F\u7528 addEventListener \u6765\u76D1\u542C error \u4E8B\u4EF6\uFF0C\u5F53\u53D1\u751F\u9519\u8BEF\u65F6\u8FDB\u884C\u5904\u7406\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> image <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&quot;img&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

image<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;error&quot;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6B64\u6A21\u5F0F\u5BF9\u4E8E\u52A0\u8F7D\u5907\u7528\u8D44\u6E90\u4EE5\u4EE3\u66FF\u4E22\u5931\u7684\u56FE\u50CF\u6216\u811A\u672C\u5F88\u6709\u7528\u3002\u4E0D\u8FC7\u9700\u8981\u8BB0\u4F4F\uFF1Aonerror \u4E0E throw \u6216 try/catch \u662F\u65E0\u5173\u7684\u3002</p><h3 id="promise-\u7684\u9519\u8BEF\u5904\u7406" tabindex="-1"><a class="header-anchor" href="#promise-\u7684\u9519\u8BEF\u5904\u7406" aria-hidden="true">#</a> Promise \u7684\u9519\u8BEF\u5904\u7406</h3><p>\u4E0B\u9762\u6765\u901A\u8FC7\u6700\u4E0A\u9762\u7684 toUppercase \u4F8B\u5B50\u770B\u770B Promise \u662F\u5982\u4F55\u5904\u7406\u9519\u8BEF\u7684\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">toUppercase</span><span class="token punctuation">(</span><span class="token parameter">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> string <span class="token operator">!==</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token function">TypeError</span><span class="token punctuation">(</span><span class="token string">&quot;Expected string&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> string<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">toUppercase</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5BF9\u4E0A\u9762\u7684\u4EE3\u7801\u8FDB\u884C\u4FEE\u6539\uFF0C\u4E0D\u8FD4\u56DE\u7B80\u5355\u7684\u5B57\u7B26\u4E32\u6216\u5F02\u5E38\uFF0C\u800C\u662F\u5206\u522B\u4F7F\u7528 Promise.reject \u548C Promise.resolve \u6765\u5904\u7406\u9519\u8BEF\u548C\u6210\u529F\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">toUppercase</span><span class="token punctuation">(</span><span class="token parameter">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> string <span class="token operator">!==</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span><span class="token function">TypeError</span><span class="token punctuation">(</span><span class="token string">&quot;Expected string&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">const</span> result <span class="token operator">=</span> string<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4ECE\u6280\u672F\u4E0A\u8BB2\uFF0C\u8FD9\u6BB5\u4EE3\u7801\u4E2D\u6CA1\u6709\u4EFB\u4F55\u5F02\u6B65\u7684\u5185\u5BB9\uFF0C\u4F46\u5B83\u53EF\u4EE5\u5F88\u597D\u5730\u8BF4\u660E Promise \u7684\u9519\u8BEF\u5904\u7406\u673A\u5236\u3002</p><p>\u73B0\u5728\u6211\u4EEC\u5C31\u53EF\u4EE5\u5728 then \u4E2D\u4F7F\u7528\u7ED3\u679C\uFF0C\u5E76\u4F7F\u7528 catch \u6765\u5904\u7406\u88AB\u62D2\u7EDD\u7684 Promise\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">toUppercase</span><span class="token punctuation">(</span><span class="token number">99</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">result</span> <span class="token operator">=&gt;</span> result<span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">error</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>error<span class="token punctuation">.</span>message<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728 Promise \u4E2D\uFF0Ccatch \u662F\u7528\u6765\u5904\u7406\u9519\u8BEF\u7684\u3002\u9664\u4E86 catch \u8FD8\u6709 finally\uFF0C\u7C7B\u4F3C\u4E8E try/catch \u4E2D\u7684finally\u3002\u4E0D\u7BA1 Promise \u7ED3\u679C\u5982\u4F55\uFF0Cfinally \u90FD\u4F1A\u6267\u884C\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">toUppercase</span><span class="token punctuation">(</span><span class="token number">99</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">result</span> <span class="token operator">=&gt;</span> result<span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">error</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>error<span class="token punctuation">.</span>message<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Finally&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u9700\u8981\u8BB0\u4F4F\uFF0C\u4EFB\u4F55\u4F20\u9012\u7ED9 then/catch/finally \u7684\u56DE\u8C03\u90FD\u662F\u7531\u5FAE\u4EFB\u52A1\u961F\u5217\u5F02\u6B65\u5904\u7406\u7684\u3002 \u5B83\u4EEC\u662F\u5FAE\u4EFB\u52A1\uFF0C\u4F18\u5148\u4E8E\u4E8B\u4EF6\u548C\u8BA1\u65F6\u5668\u7B49\u5B8F\u4EFB\u52A1\u3002</p><h3 id="promise-error-throw" tabindex="-1"><a class="header-anchor" href="#promise-error-throw" aria-hidden="true">#</a> Promise, error, throw</h3><p>\u4F5C\u4E3A\u62D2\u7EDD Promise \u65F6\u7684\u6700\u4F73\u5B9E\u8DF5\uFF0C\u53EF\u4EE5\u4F20\u5165 error \u5BF9\u8C61\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span><span class="token function">TypeError</span><span class="token punctuation">(</span><span class="token string">&quot;Expected string&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u8FD9\u6837\uFF0C\u5728\u6574\u4E2A\u4EE3\u7801\u5E93\u4E2D\u4FDD\u6301\u9519\u8BEF\u5904\u7406\u7684\u4E00\u81F4\u6027\u3002 \u5176\u4ED6\u56E2\u961F\u6210\u5458\u603B\u662F\u53EF\u4EE5\u8BBF\u95EE error.message\uFF0C\u66F4\u91CD\u8981\u7684\u662F\u53EF\u4EE5\u68C0\u67E5\u5806\u6808\u8DDF\u8E2A\u3002</p><p>\u9664\u4E86 Promise.reject \u4E4B\u5916\uFF0C\u8FD8\u53EF\u4EE5\u901A\u8FC7\u629B\u51FA\u5F02\u5E38\u6765\u9000\u51FA Promise \u6267\u884C\u94FE\u3002\u6765\u770B\u4E0B\u9762\u7684\u4F8B\u5B50\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;A string&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">value</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> value <span class="token operator">===</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token function">TypeError</span><span class="token punctuation">(</span><span class="token string">&quot;Expected number!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u91CC\u4F7F\u7528 \u5B57\u7B26\u4E32\u6765 resolve \u4E00\u4E2A Promise\uFF0C\u7136\u540E\u6267\u884C\u94FE\u7ACB\u5373\u4F7F\u7528 throw \u65AD\u5F00\u3002\u4E3A\u4E86\u505C\u6B62\u5F02\u5E38\u7684\u4F20\u64AD\uFF0C\u53EF\u4EE5\u4F7F\u7528 catch \u6765\u6355\u83B7\u9519\u8BEF\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;A string&quot;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">value</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> value <span class="token operator">===</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> <span class="token function">TypeError</span><span class="token punctuation">(</span><span class="token string">&quot;Expected number!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">reason</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>reason<span class="token punctuation">.</span>message<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u79CD\u6A21\u5F0F\u5728 fetch \u4E2D\u5F88\u5E38\u89C1\uFF0C\u53EF\u4EE5\u901A\u8FC7\u68C0\u67E5 response \u5BF9\u8C61\u6765\u67E5\u627E\u9519\u8BEF\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">&quot;https://example-dev/api/&quot;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">response</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>response<span class="token punctuation">.</span>ok<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> <span class="token function">Error</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>statusText<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> response<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">json</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>json<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u91CC\u7684\u5F02\u5E38\u53EF\u4EE5\u4F7F\u7528 catch \u6765\u62E6\u622A\u3002 \u5982\u679C\u5931\u8D25\u4E86\uFF0C\u5E76\u4E14\u6CA1\u6709\u62E6\u622A\u5B83\uFF0C\u5F02\u5E38\u5C31\u4F1A\u5728\u5806\u6808\u4E2D\u5411\u4E0A\u5192\u6CE1\u3002\u8FD9\u672C\u8EAB\u5E76\u6CA1\u6709\u4EC0\u4E48\u95EE\u9898\uFF0C\u4F46\u4E0D\u540C\u7684\u73AF\u5883\u5BF9\u672A\u6355\u83B7\u7684\u62D2\u7EDD\u6709\u4E0D\u540C\u7684\u53CD\u5E94\u3002</p><p>\u4F8B\u5982\uFF0CNode.js \u4F1A\u8BA9\u4EFB\u4F55\u672A\u5904\u7406 Promise \u62D2\u7EDD\u7684\u7A0B\u5E8F\u5D29\u6E83\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>DeprecationWarning: Unhandled promise rejections are deprecated. In the future, promise rejections that are not handled will terminate the Node.js process with a non-zero exit code.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u6240\u4EE5\uFF0C\u6700\u597D\u53BB\u6355\u83B7\u9519\u8BEF\u3002</p><h3 id="\u4F7F\u7528-promise-\u5904\u7406\u5B9A\u65F6\u5668\u9519\u8BEF" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528-promise-\u5904\u7406\u5B9A\u65F6\u5668\u9519\u8BEF" aria-hidden="true">#</a> \u4F7F\u7528 Promise \u5904\u7406\u5B9A\u65F6\u5668\u9519\u8BEF</h3><p>\u5BF9\u4E8E\u8BA1\u65F6\u5668\u6216\u4E8B\u4EF6\uFF0C\u4E0D\u80FD\u6355\u83B7\u56DE\u8C03\u629B\u51FA\u7684\u5F02\u5E38\u3002\u4E0A\u9762\u6709\u4E00\u4E2A\u4F8B\u5B50\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">failAfterOneSecond</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token function">Error</span><span class="token punctuation">(</span><span class="token string">&quot;Error&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u4E0D\u751F\u6548</span>
<span class="token keyword">try</span> <span class="token punctuation">{</span>
  <span class="token function">failAfterOneSecond</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>error<span class="token punctuation">.</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6211\u4EEC\u53EF\u4EE5\u4F7F\u7528 Promise \u6765\u5305\u88C5\u8BA1\u65F6\u5668\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">failAfterOneSecond</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">_<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">reject</span><span class="token punctuation">(</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token string">&quot;Error&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u91CC\u901A\u8FC7 reject \u6355\u83B7\u4E86\u4E00\u4E2A Promise \u62D2\u7EDD\uFF0C\u5B83\u5E26\u6709\u4E00\u4E2A error \u5BF9\u8C61\u3002\u6B64\u65F6\u5C31\u53EF\u4EE5\u7528 catch \u6765\u5904\u7406\u5F02\u5E38\u4E86\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">failAfterOneSecond</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">reason</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>reason<span class="token punctuation">.</span>message<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u8FD9\u91CC\u4F7F\u7528 value \u4F5C\u4E3A Promise \u7684\u8FD4\u56DE\u503C\uFF0C\u4F7F\u7528 reason \u4F5C\u4E3A\u62D2\u7EDD\u7684\u8FD4\u56DE\u5BF9\u8C61\u3002</p><h3 id="promise-all-\u7684\u9519\u8BEF\u5904\u7406" tabindex="-1"><a class="header-anchor" href="#promise-all-\u7684\u9519\u8BEF\u5904\u7406" aria-hidden="true">#</a> Promise.all \u7684\u9519\u8BEF\u5904\u7406</h3><p>Promise.all \u65B9\u6CD5\u63A5\u53D7\u4E00\u4E2A Promise \u6570\u7EC4\uFF0C\u5E76\u8FD4\u56DE\u6240\u6709\u89E3\u6790 Promise \u7684\u7ED3\u679C\u6570\u7EC4\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> promise1 <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;one&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> promise2 <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;two&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span>promise1<span class="token punctuation">,</span> promise2<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">results</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>results<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u7ED3\u679C\uFF1A [&#39;one&#39;, &#39;two&#39;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u8FD9\u4E9B Promise \u4E2D\u7684\u4EFB\u4F55\u4E00\u4E2A\u88AB\u62D2\u7EDD\uFF0CPromise.all \u5C06\u62D2\u7EDD\u5E76\u8FD4\u56DE\u7B2C\u4E00\u4E2A\u88AB\u62D2\u7EDD\u7684 Promise \u7684\u9519\u8BEF\u3002</p><p>\u4E3A\u4E86\u5728 Promise.all \u4E2D\u5904\u7406\u8FD9\u4E9B\u60C5\u51B5\uFF0C\u53EF\u4EE5\u4F7F\u7528 catch\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> promise1 <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;good&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> promise2 <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token string">&quot;Bad&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> promise3 <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token string">&quot;Bad+&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span>promise1<span class="token punctuation">,</span> promise2<span class="token punctuation">,</span> promise3<span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">results</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>results<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">error</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>error<span class="token punctuation">.</span>message<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u60F3\u8981\u8FD0\u884C\u4E00\u4E2A\u51FD\u6570\u800C\u4E0D\u8003\u8651 Promise.all \u7684\u7ED3\u679C\uFF0C\u53EF\u4EE5\u4F7F\u7528 finally\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span>promise1<span class="token punctuation">,</span> promise2<span class="token punctuation">,</span> promise3<span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">results</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>results<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">error</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>error<span class="token punctuation">.</span>message<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Finally&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="promise-any-\u7684\u9519\u8BEF\u5904\u7406" tabindex="-1"><a class="header-anchor" href="#promise-any-\u7684\u9519\u8BEF\u5904\u7406" aria-hidden="true">#</a> Promise.any \u7684\u9519\u8BEF\u5904\u7406</h3><p>Promise.any \u548C Promise.all \u6070\u6070\u76F8\u53CD\u3002Promise.all \u5982\u679C\u67D0\u4E00\u4E2A\u5931\u8D25\uFF0C\u5C31\u4F1A\u629B\u51FA\u7B2C\u4E00\u4E2A\u5931\u8D25\u7684\u9519\u8BEF\u3002\u800C Promise.any \u603B\u662F\u8FD4\u56DE\u7B2C\u4E00\u4E2A\u6210\u529F\u7684 Promise\uFF0C\u65E0\u8BBA\u662F\u5426\u53D1\u751F\u4EFB\u4F55\u62D2\u7EDD\u3002</p><p>\u76F8\u53CD\uFF0C\u5982\u679C\u4F20\u9012\u7ED9 Promise.any \u7684\u6240\u6709 Promise \u90FD\u88AB\u62D2\u7EDD\uFF0C\u90A3\u4EA7\u751F\u7684\u9519\u8BEF\u5C31\u662F AggregateError\u3002 \u6765\u770B\u4E0B\u9762\u7684\u4F8B\u5B50\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> promise1 <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token string">&quot;Error&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> promise2 <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token string">&quot;Error+&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

Promise<span class="token punctuation">.</span><span class="token function">any</span><span class="token punctuation">(</span><span class="token punctuation">[</span>promise1<span class="token punctuation">,</span> promise2<span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">result</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">error</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Finally&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u91CC\u7528 catch \u5904\u7406\u9519\u8BEF\u3002AggregateError \u5BF9\u8C61\u5177\u6709\u4E0E\u57FA\u672C\u9519\u8BEF\u76F8\u540C\u7684\u5C5E\u6027\uFF0C\u5916\u52A0\u4E00\u4E2A errors \u5C5E\u6027\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> promise1 <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token string">&quot;Error&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> promise2 <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token string">&quot;Error+&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

Promise<span class="token punctuation">.</span><span class="token function">any</span><span class="token punctuation">(</span><span class="token punctuation">[</span>promise1<span class="token punctuation">,</span> promise2<span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">result</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">error</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>error<span class="token punctuation">.</span>errors<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Finally&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="promise-race-\u7684\u9519\u8BEF\u5904\u7406" tabindex="-1"><a class="header-anchor" href="#promise-race-\u7684\u9519\u8BEF\u5904\u7406" aria-hidden="true">#</a> Promise.race \u7684\u9519\u8BEF\u5904\u7406</h3><p>Promise.race \u63A5\u53D7\u4E00\u4E2A Promise \u6570\u7EC4\uFF0C\u5E76\u8FD4\u56DE\u7B2C\u4E00\u4E2A\u6210\u529F\u7684 Promise \u7684\u7ED3\u679C\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> promise1 <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;one&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> promise2 <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;two&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

Promise<span class="token punctuation">.</span><span class="token function">race</span><span class="token punctuation">(</span><span class="token punctuation">[</span>promise1<span class="token punctuation">,</span> promise2<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">result</span> <span class="token operator">=&gt;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u7ED3\u679C\uFF1Aone</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u90A3\u5982\u679C\u6709\u88AB\u62D2\u7EDD\u7684 Promise\uFF0C\u4F46\u5B83\u4E0D\u662F\u4F20\u5165\u6570\u7EC4\u4E2D\u7684\u7B2C\u4E00\u4E2A\u5462\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> promise1 <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;one&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> rejection <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token string">&quot;Bad&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> promise2 <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;two&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

Promise<span class="token punctuation">.</span><span class="token function">race</span><span class="token punctuation">(</span><span class="token punctuation">[</span>promise1<span class="token punctuation">,</span> rejection<span class="token punctuation">,</span> promise2<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">result</span> <span class="token operator">=&gt;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u7ED3\u679C\uFF1Aone</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u6837\u7ED3\u679C\u8FD8\u662F one\uFF0C\u4E0D\u4F1A\u5F71\u54CD\u6B63\u5E38\u7684\u6267\u884C\u3002</p><p>\u5982\u679C\u88AB\u62D2\u7EDD\u7684 Promise \u662F\u6570\u7EC4\u7684\u7B2C\u4E00\u4E2A\u5143\u7D20\uFF0C\u5219 Promise.race \u62D2\u7EDD\uFF0C\u5C31\u5FC5\u987B\u8981\u5FC5\u987B\u6355\u83B7\u62D2\u7EDD\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> promise1 <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;one&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> rejection <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token string">&quot;Bad&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> promise2 <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;two&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

Promise<span class="token punctuation">.</span><span class="token function">race</span><span class="token punctuation">(</span><span class="token punctuation">[</span>rejection<span class="token punctuation">,</span> promise1<span class="token punctuation">,</span> promise2<span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">result</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">error</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>error<span class="token punctuation">.</span>message<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Bad</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="promise-allsettled-\u7684\u9519\u8BEF\u5904\u7406" tabindex="-1"><a class="header-anchor" href="#promise-allsettled-\u7684\u9519\u8BEF\u5904\u7406" aria-hidden="true">#</a> Promise.allSettled \u7684\u9519\u8BEF\u5904\u7406</h3><p>Promise.allSettled \u662F ECMAScript 2020 \u65B0\u589E\u7684 API\u3002\u5B83\u548C Promise.all \u7C7B\u4F3C\uFF0C\u4E0D\u8FC7\u4E0D\u4F1A\u88AB\u77ED\u8DEF\uFF0C\u4E5F\u5C31\u662F\u8BF4\u5F53Promise\u5168\u90E8\u5904\u7406\u5B8C\u6210\u540E\uFF0C\u53EF\u4EE5\u62FF\u5230\u6BCF\u4E2A Promise \u7684\u72B6\u6001, \u800C\u4E0D\u7BA1\u5176\u662F\u5426\u5904\u7406\u6210\u529F\u3002</p><p>\u6765\u770B\u4E0B\u9762\u7684\u4F8B\u5B50\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> promise1 <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;Good!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> promise2 <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token string">&quot;Bad!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

Promise<span class="token punctuation">.</span><span class="token function">allSettled</span><span class="token punctuation">(</span><span class="token punctuation">[</span>promise1<span class="token punctuation">,</span> promise2<span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">results</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>results<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">error</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Finally&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u91CC\u5411 Promise.allSettled \u4F20\u9012\u4E86\u4E00\u4E2A\u5305\u542B\u4E24\u4E2A Promise \u7684\u6570\u7EC4\uFF1A\u4E00\u4E2A\u5DF2\u89E3\u51B3\uFF0C\u53E6\u4E00\u4E2A\u5DF2\u62D2\u7EDD\u3002</p><h3 id="async-await-\u7684\u9519\u8BEF\u5904\u7406" tabindex="-1"><a class="header-anchor" href="#async-await-\u7684\u9519\u8BEF\u5904\u7406" aria-hidden="true">#</a> async/await \u7684\u9519\u8BEF\u5904\u7406</h3><p>JavaScript \u4E2D\u7684 async/await \u8868\u793A\u5F02\u6B65\u51FD\u6570\uFF0C\u7528\u540C\u6B65\u7684\u65B9\u5F0F\u53BB\u7F16\u5199\u5F02\u6B65\uFF0C\u53EF\u8BFB\u6027\u66F4\u597D\u3002</p><p>\u4E0B\u9762\u6765\u6539\u7F16\u4E0A\u9762\u7684\u540C\u6B65\u51FD\u6570 toUppercase\uFF0C\u901A\u8FC7\u5C06 async \u653E\u5728 function \u5173\u952E\u5B57\u4E4B\u524D\u5C06\u5176\u8F6C\u6362\u4E3A\u5F02\u6B65\u51FD\u6570\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">toUppercase</span><span class="token punctuation">(</span><span class="token parameter">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> string <span class="token operator">!==</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token function">TypeError</span><span class="token punctuation">(</span><span class="token string">&quot;Expected string&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> string<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53EA\u9700\u5728 function \u524D\u52A0\u4E0A async \u524D\u7F00\uFF0C\u5C31\u53EF\u4EE5\u8BA9\u51FD\u6570\u8FD4\u56DE\u4E00\u4E2A Promise\u3002\u8FD9\u610F\u5473\u7740\u6211\u4EEC\u53EF\u4EE5\u5728\u51FD\u6570\u8C03\u7528\u4E4B\u540E\u94FE\u5F0F\u8C03\u7528 then\u3001catch \u548C finally\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">toUppercase</span><span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">result</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">error</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>error<span class="token punctuation">.</span>message<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Always runs!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5F53\u4ECE async \u51FD\u6570\u4E2D\u629B\u51FA\u5F02\u5E38\u65F6\uFF0C\u5F02\u5E38\u4F1A\u6210\u4E3A\u5E95\u5C42 Promise \u88AB\u62D2\u7EDD\u7684\u539F\u56E0\u3002\u4EFB\u4F55\u9519\u8BEF\u90FD\u53EF\u4EE5\u4ECE\u5916\u90E8\u7528 catch \u62E6\u622A\u3002</p><p>\u9664\u6B64\u4E4B\u5916\uFF0C\u8FD8\u53EF\u4EE5\u4F7F\u7528 try/catch/finally \u6765\u5904\u7406\u9519\u8BEF\uFF0C\u5C31\u50CF\u5728\u540C\u6B65\u51FD\u6570\u4E2D\u4E00\u6837\u3002</p><p>\u4F8B\u5982\uFF0C\u4ECE\u53E6\u4E00\u4E2A\u51FD\u6570 consumer \u4E2D\u8C03\u7528 toUppercase\uFF0C\u5B83\u65B9\u4FBF\u5730\u7528 try/catch/finally \u5305\u88C5\u4E86\u51FD\u6570\u8C03\u7528\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">toUppercase</span><span class="token punctuation">(</span><span class="token parameter">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> string <span class="token operator">!==</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token function">TypeError</span><span class="token punctuation">(</span><span class="token string">&quot;Expected string&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> string<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">consumer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token keyword">await</span> <span class="token function">toUppercase</span><span class="token punctuation">(</span><span class="token number">98</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>error<span class="token punctuation">.</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Finally&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token function">consumer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5F02\u6B65\u751F\u6210\u5668\u7684\u9519\u8BEF\u5904\u7406" tabindex="-1"><a class="header-anchor" href="#\u5F02\u6B65\u751F\u6210\u5668\u7684\u9519\u8BEF\u5904\u7406" aria-hidden="true">#</a> \u5F02\u6B65\u751F\u6210\u5668\u7684\u9519\u8BEF\u5904\u7406</h3><p>JavaScript \u4E2D\u7684\u5F02\u6B65\u751F\u6210\u5668\u662F\u80FD\u591F\u751F\u6210 Promise \u800C\u4E0D\u662F\u7B80\u5355\u503C\u7684\u751F\u6210\u5668\u51FD\u6570\u3002\u5B83\u5C06\u751F\u6210\u5668\u51FD\u6570\u4E0E\u5F02\u6B65\u76F8\u7ED3\u5408\uFF0C\u7ED3\u679C\u662F\u4E00\u4E2A\u751F\u6210\u5668\u51FD\u6570\uFF0C\u5176\u8FED\u4EE3\u5668\u5BF9\u8C61\u5411\u6D88\u8D39\u8005\u516C\u5F00\u4E00\u4E2A Promise\u3002</p><p>\u8981\u521B\u5EFA\u4E00\u4E2A\u5F02\u6B65\u751F\u6210\u5668\uFF0C\u9700\u8981\u58F0\u660E\u4E00\u4E2A\u5E26\u6709\u661F\u53F7 * \u7684\u751F\u6210\u5668\u51FD\u6570\uFF0C\u524D\u7F00\u4E3A async\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">asyncGenerator</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">yield</span> <span class="token number">33</span><span class="token punctuation">;</span>
  <span class="token keyword">yield</span> <span class="token number">99</span><span class="token punctuation">;</span>
  <span class="token keyword">throw</span> <span class="token function">Error</span><span class="token punctuation">(</span><span class="token string">&quot;Bad!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Promise.reject</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u56E0\u4E3A\u5F02\u6B65\u751F\u6210\u5668\u662F\u57FA\u4E8E Promise\uFF0C\u6240\u4EE5\u540C\u6837\u9002\u7528 Promise \u7684\u9519\u8BEF\u5904\u7406\u89C4\u5219\uFF0C\u5728\u5F02\u6B65\u751F\u6210\u5668\u4E2D\uFF0Cthrow \u4F1A\u5BFC\u81F4 Promise \u62D2\u7EDD\uFF0C\u53EF\u4EE5\u7528 catch \u62E6\u622A\u5B83\u3002</p><p>\u8981\u60F3\u4ECE\u5F02\u6B65\u751F\u6210\u5668\u5904\u7406 Promise\uFF0C\u53EF\u4EE5\u4F7F\u7528 then\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> go <span class="token operator">=</span> <span class="token function">asyncGenerator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

go<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">value</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
go<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">value</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
go<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">reason</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>reason<span class="token punctuation">.</span>message<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E5F\u4F7F\u7528\u5F02\u6B65\u8FED\u4EE3 for await...of\u3002 \u8981\u4F7F\u7528\u5F02\u6B65\u8FED\u4EE3\uFF0C\u9700\u8981\u7528 async \u51FD\u6570\u5305\u88C5 consumer\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">asyncGenerator</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">yield</span> <span class="token number">33</span><span class="token punctuation">;</span>
  <span class="token keyword">yield</span> <span class="token number">99</span><span class="token punctuation">;</span>
  <span class="token keyword">throw</span> <span class="token function">Error</span><span class="token punctuation">(</span><span class="token string">&quot;Bad&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Promise.reject</span>
<span class="token punctuation">}</span>

<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">consumer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token keyword">await</span> <span class="token punctuation">(</span><span class="token keyword">const</span> value <span class="token keyword">of</span> <span class="token function">asyncGenerator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token function">consumer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0E async/await \u4E00\u6837\uFF0C\u53EF\u4EE5\u4F7F\u7528 try/catch \u6765\u5904\u7406\u4EFB\u4F55\u5F02\u5E38\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">asyncGenerator</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">yield</span> <span class="token number">33</span><span class="token punctuation">;</span>
  <span class="token keyword">yield</span> <span class="token number">99</span><span class="token punctuation">;</span>
  <span class="token keyword">throw</span> <span class="token function">Error</span><span class="token punctuation">(</span><span class="token string">&quot;Bad&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Promise.reject</span>
<span class="token punctuation">}</span>

<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">consumer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token keyword">await</span> <span class="token punctuation">(</span><span class="token keyword">const</span> value <span class="token keyword">of</span> <span class="token function">asyncGenerator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>error<span class="token punctuation">.</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token function">consumer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4ECE\u5F02\u6B65\u751F\u6210\u5668\u51FD\u6570\u8FD4\u56DE\u7684\u8FED\u4EE3\u5668\u5BF9\u8C61\u4E5F\u6709\u4E00\u4E2A throw() \u65B9\u6CD5\u3002\u5728\u8FD9\u91CC\u5BF9\u8FED\u4EE3\u5668\u5BF9\u8C61\u8C03\u7528 throw() \u4E0D\u4F1A\u629B\u51FA\u5F02\u5E38\uFF0C\u800C\u662F Promise \u62D2\u7EDD\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">asyncGenerator</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">yield</span> <span class="token number">33</span><span class="token punctuation">;</span>
  <span class="token keyword">yield</span> <span class="token number">99</span><span class="token punctuation">;</span>
  <span class="token keyword">yield</span> <span class="token number">11</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> go <span class="token operator">=</span> <span class="token function">asyncGenerator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

go<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">value</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
go<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">value</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

go<span class="token punctuation">.</span><span class="token function">throw</span><span class="token punctuation">(</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token string">&quot;Reject!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

go<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">value</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53EF\u4EE5\u901A\u8FC7\u4EE5\u4E0B\u65B9\u5F0F\u6765\u6355\u83B7\u9519\u8BEF\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>go<span class="token punctuation">.</span><span class="token function">throw</span><span class="token punctuation">(</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token string">&quot;Let&#39;s reject!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">reason</span> <span class="token operator">=&gt;</span>
  console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>reason<span class="token punctuation">.</span>message<span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6211\u4EEC\u77E5\u9053\uFF0C\u8FED\u4EE3\u5668\u5BF9\u8C61\u7684 throw() \u662F\u5728\u751F\u6210\u5668\u5185\u90E8\u53D1\u9001\u5F02\u5E38\u7684\u3002\u6240\u4EE5\u8FD8\u53EF\u4EE5\u4F7F\u7528\u4EE5\u4E0B\u65B9\u5F0F\u6765\u5904\u7406\u9519\u8BEF\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">asyncGenerator</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token keyword">yield</span> <span class="token number">33</span><span class="token punctuation">;</span>
    <span class="token keyword">yield</span> <span class="token number">99</span><span class="token punctuation">;</span>
    <span class="token keyword">yield</span> <span class="token number">11</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>error<span class="token punctuation">.</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> go <span class="token operator">=</span> <span class="token function">asyncGenerator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

go<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">value</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
go<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">value</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

go<span class="token punctuation">.</span><span class="token function">throw</span><span class="token punctuation">(</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token string">&quot;Reject!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

go<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">value</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="node-js-\u9519\u8BEF\u5904\u7406" tabindex="-1"><a class="header-anchor" href="#node-js-\u9519\u8BEF\u5904\u7406" aria-hidden="true">#</a> Node.js \u9519\u8BEF\u5904\u7406</h2><h3 id="\u540C\u6B65\u9519\u8BEF\u5904\u7406-1" tabindex="-1"><a class="header-anchor" href="#\u540C\u6B65\u9519\u8BEF\u5904\u7406-1" aria-hidden="true">#</a> \u540C\u6B65\u9519\u8BEF\u5904\u7406</h3><p>Node.js \u4E2D\u7684\u540C\u6B65\u9519\u8BEF\u5904\u7406\u4E0E JavaScript \u662F\u4E00\u6837\u7684\uFF0C\u53EF\u4EE5\u4F7F\u7528 try/catch/finally\u3002</p><h3 id="\u5F02\u6B65\u9519\u8BEF\u5904\u7406-\u56DE\u8C03\u6A21\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u5F02\u6B65\u9519\u8BEF\u5904\u7406-\u56DE\u8C03\u6A21\u5F0F" aria-hidden="true">#</a> \u5F02\u6B65\u9519\u8BEF\u5904\u7406\uFF1A\u56DE\u8C03\u6A21\u5F0F</h3><ul><li>\u5BF9\u4E8E\u5F02\u6B65\u4EE3\u7801\uFF0CNode.js \u5F3A\u70C8\u4F9D\u8D56\u4E24\u4E2A\u672F\u8BED\uFF1A <ul><li>\u4E8B\u4EF6\u53D1\u5C04\u5668</li><li>\u56DE\u8C03\u6A21\u5F0F</li></ul></li></ul><p>\u5728\u56DE\u8C03\u6A21\u5F0F\u4E2D\uFF0C\u5F02\u6B65 Node.js API \u63A5\u53D7\u4E00\u4E2A\u51FD\u6570\uFF0C\u8BE5\u51FD\u6570\u901A\u8FC7\u4E8B\u4EF6\u5FAA\u73AF\u5904\u7406\u5E76\u5728\u8C03\u7528\u5806\u6808\u4E3A\u7A7A\u65F6\u7ACB\u5373\u6267\u884C\u3002</p><p>\u6765\u770B\u4E0B\u9762\u7684\u4F8B\u5B50\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> readFile <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;fs&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">readDataset</span><span class="token punctuation">(</span><span class="token parameter">path</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">readFile</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">encoding</span><span class="token operator">:</span> <span class="token string">&quot;utf8&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">error<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// data\u64CD\u4F5C</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u91CC\u53EF\u4EE5\u770B\u5230\u56DE\u8C03\u4E2D\u9519\u8BEF\u5904\u7406\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">error<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// data\u64CD\u4F5C</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u5982\u679C\u4F7F\u7528 fs.readFile \u8BFB\u53D6\u7ED9\u5B9A\u8DEF\u5F84\u65F6\u51FA\u73B0\u4EFB\u4F55\u9519\u8BEF\uFF0C\u6211\u4EEC\u90FD\u4F1A\u5F97\u5230\u4E00\u4E2A error \u5BF9\u8C61\u3002\u8FD9\u65F6\u6211\u4EEC\u53EF\u4EE5\uFF1A <ul><li>\u5355\u5730\u8BB0\u5F55\u9519\u8BEF\u5BF9\u8C61\u3002</li><li>\u629B\u51FA\u5F02\u5E38\u3002</li><li>\u5C06\u9519\u8BEF\u4F20\u9012\u7ED9\u53E6\u4E00\u4E2A\u56DE\u8C03\u3002</li></ul></li></ul><p>\u8981\u60F3\u629B\u51FA\u5F02\u5E38\uFF0C\u53EF\u4EE5\u8FD9\u6837\u505A\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> readFile <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;fs&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">readDataset</span><span class="token punctuation">(</span><span class="token parameter">path</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">readFile</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">encoding</span><span class="token operator">:</span> <span class="token string">&quot;utf8&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">error<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token keyword">throw</span> <span class="token function">Error</span><span class="token punctuation">(</span>error<span class="token punctuation">.</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// data\u64CD\u4F5C</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F46\u662F\uFF0C\u4E0E DOM \u4E2D\u7684\u4E8B\u4EF6\u548C\u8BA1\u65F6\u5668\u4E00\u6837\uFF0C\u8FD9\u4E2A\u5F02\u5E38\u4F1A\u4F7F\u7A0B\u5E8F\u5D29\u6E83\u3002 \u4F7F\u7528 try/catch \u505C\u6B62\u5B83\u7684\u5C1D\u8BD5\u5C06\u4E0D\u8D77\u4F5C\u7528\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> readFile <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;fs&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">readDataset</span><span class="token punctuation">(</span><span class="token parameter">path</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">readFile</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">encoding</span><span class="token operator">:</span> <span class="token string">&quot;utf8&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">error<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token keyword">throw</span> <span class="token function">Error</span><span class="token punctuation">(</span>error<span class="token punctuation">.</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// data\u64CD\u4F5C</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">try</span> <span class="token punctuation">{</span>
  <span class="token function">readDataset</span><span class="token punctuation">(</span><span class="token string">&quot;not-here.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>error<span class="token punctuation">.</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u4E0D\u60F3\u8BA9\u7A0B\u5E8F\u5D29\u6E83\uFF0C\u53EF\u4EE5\u5C06\u9519\u8BEF\u4F20\u9012\u7ED9\u53E6\u4E00\u4E2A\u56DE\u8C03\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> readFile <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;fs&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">readDataset</span><span class="token punctuation">(</span><span class="token parameter">path</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">readFile</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">encoding</span><span class="token operator">:</span> <span class="token string">&quot;utf8&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">error<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token function">errorHandler</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// data\u64CD\u4F5C</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u91CC\u7684 errorHandler \u662F\u4E00\u4E2A\u7B80\u5355\u7684\u9519\u8BEF\u5904\u7406\u51FD\u6570\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">errorHandler</span><span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>error<span class="token punctuation">.</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// \u5904\u7406\u9519\u8BEF\uFF1A\u5199\u5165\u65E5\u5FD7\u3001\u53D1\u9001\u5230\u5916\u90E8logger</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5F02\u6B65\u9519\u8BEF\u5904\u7406-\u4E8B\u4EF6\u53D1\u5C04\u5668" tabindex="-1"><a class="header-anchor" href="#\u5F02\u6B65\u9519\u8BEF\u5904\u7406-\u4E8B\u4EF6\u53D1\u5C04\u5668" aria-hidden="true">#</a> \u5F02\u6B65\u9519\u8BEF\u5904\u7406\uFF1A\u4E8B\u4EF6\u53D1\u5C04\u5668</h3><p>Node.js \u4E2D\u7684\u5927\u90E8\u5206\u5DE5\u4F5C\u90FD\u662F\u57FA\u4E8E\u4E8B\u4EF6\u7684\u3002\u5927\u591A\u6570\u65F6\u5019\uFF0C\u6211\u4EEC\u4F1A\u4E0E\u53D1\u5C04\u5668\u5BF9\u8C61\u548C\u4E00\u4E9B\u4FA6\u542C\u6D88\u606F\u7684\u89C2\u5BDF\u8005\u8FDB\u884C\u4EA4\u4E92\u3002</p><p>Node.js \u4E2D\u7684\u4EFB\u4F55\u4E8B\u4EF6\u9A71\u52A8\u6A21\u5757\uFF08\u4F8B\u5982 net\uFF09\u90FD\u6269\u5C55\u4E86\u4E00\u4E2A\u540D\u4E3A EventEmitter \u7684\u6839\u7C7B\u3002EventEmitter \u6709\u4E24\u4E2A\u57FA\u672C\u65B9\u6CD5\uFF1Aon \u548C emit\u3002</p><p>\u4E0B\u9762\u6765\u770B\u4E00\u4E2A\u7B80\u5355\u7684 HTTP \u670D\u52A1\u5668\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> net <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;net&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> server <span class="token operator">=</span> net<span class="token punctuation">.</span><span class="token function">createServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">8081</span><span class="token punctuation">,</span> <span class="token string">&quot;127.0.0.1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

server<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;listening&quot;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Server listening!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

server<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;connection&quot;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">socket</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Client connected!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  socket<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token string">&quot;Hello client!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u91CC\u6211\u4EEC\u76D1\u542C\u4E86\u4E24\u4E2A\u4E8B\u4EF6\uFF1Alistening \u548C connection\u3002\u9664\u4E86\u8FD9\u4E9B\u4E8B\u4EF6\u4E4B\u5916\uFF0C\u4E8B\u4EF6\u53D1\u5C04\u5668\u8FD8\u516C\u5F00\u4E00\u4E2A\u9519\u8BEF\u4E8B\u4EF6\uFF0C\u5728\u51FA\u73B0\u9519\u8BEF\u65F6\u89E6\u53D1\u3002</p><p>\u5982\u679C\u8FD9\u6BB5\u4EE3\u7801\u76D1\u542C\u7684\u7AEF\u53E3\u662F 80\uFF0C\u5C31\u4F1A\u5F97\u5230\u4E00\u4E2A\u5F02\u5E38\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> net <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;net&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> server <span class="token operator">=</span> net<span class="token punctuation">.</span><span class="token function">createServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">80</span><span class="token punctuation">,</span> <span class="token string">&quot;127.0.0.1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

server<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;listening&quot;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Server listening!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

server<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;connection&quot;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">socket</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Client connected!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  socket<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token string">&quot;Hello client!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C\u5982\u4E0B\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>events.js:291
      throw er;
      ^

Error: listen EACCES: permission denied 127.0.0.1:80
Emitted &#39;error&#39; event on Server instance at: ...
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E3A\u4E86\u6355\u83B7\u5B83\uFF0C\u53EF\u4EE5\u4E3A error \u6CE8\u518C\u4E00\u4E2A\u4E8B\u4EF6\u5904\u7406\u51FD\u6570\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>server<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;error&quot;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>error<span class="token punctuation">.</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u6837\u5C31\u4F1A\u8F93\u51FA\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>listen EACCES: permission denied 127.0.0.1:80
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="\u9519\u8BEF\u5904\u7406\u6700\u4F73\u5B9E\u8DF5" tabindex="-1"><a class="header-anchor" href="#\u9519\u8BEF\u5904\u7406\u6700\u4F73\u5B9E\u8DF5" aria-hidden="true">#</a> \u9519\u8BEF\u5904\u7406\u6700\u4F73\u5B9E\u8DF5</h2><h3 id="\u4E0D\u8981\u8FC7\u5EA6\u5904\u7406\u9519\u8BEF" tabindex="-1"><a class="header-anchor" href="#\u4E0D\u8981\u8FC7\u5EA6\u5904\u7406\u9519\u8BEF" aria-hidden="true">#</a> \u4E0D\u8981\u8FC7\u5EA6\u5904\u7406\u9519\u8BEF</h3><p>\u9519\u5904\u7406\u7684\u7B2C\u4E00\u4E2A\u6700\u4F73\u5B9E\u8DF5\u5C31\u662F<strong>\u4E0D\u8981\u8FC7\u5EA6\u4F7F\u7528\u201C\u9519\u8BEF\u5904\u7406\u201D</strong>\u3002\u901A\u5E38\uFF0C\u6211\u4EEC\u4F1A\u5728\u5916\u5C42\u5904\u7406\u9519\u8BEF\uFF0C\u4ECE\u5185\u5C42\u629B\u51FA\u9519\u8BEF\uFF0C\u8FD9\u6837\u4E00\u65E6\u51FA\u73B0\u9519\u8BEF\uFF0C\u5C31\u53EF\u4EE5\u66F4\u597D\u5730\u7406\u89E3\u662F\u4EC0\u4E48\u539F\u56E0\u5BFC\u81F4\u7684\u3002</p><p>\u7136\u800C\uFF0C\u5F00\u53D1\u4EBA\u5458\u5E38\u72AF\u7684\u9519\u8BEF\u4E4B\u4E00\u662F\u8FC7\u5EA6\u4F7F\u7528\u9519\u8BEF\u5904\u7406\u3002\u6709\u65F6\u8FD9\u6837\u505A\u662F\u4E3A\u4E86\u8BA9\u4EE3\u7801\u5728\u4E0D\u540C\u7684\u6587\u4EF6\u548C\u65B9\u6CD5\u4E2D\u770B\u8D77\u6765\u4FDD\u6301\u4E00\u81F4\u3002\u4F46\u662F\uFF0C\u4E0D\u5E78\u7684\u662F\uFF0C\u8FD9\u4E9B\u4F1A\u5BF9\u5E94\u7528\u7A0B\u5E8F\u548C\u9519\u8BEF\u68C0\u6D4B\u9020\u6210\u4E0D\u5229\u5F71\u54CD\u3002</p><p>\u56E0\u6B64\uFF0C\u53EA\u5173\u6CE8\u4EE3\u7801\u4E2D\u53EF\u80FD\u5BFC\u81F4\u9519\u8BEF\u7684\u5730\u65B9\uFF0C\u9519\u8BEF\u5904\u7406\u5C06\u6709\u52A9\u4E8E\u63D0\u9AD8\u4EE3\u7801\u5065\u58EE\u6027\u5E76\u589E\u52A0\u68C0\u6D4B\u5230\u9519\u8BEF\u7684\u673A\u4F1A\u3002</p><h3 id="\u907F\u514D\u6D4F\u89C8\u5668\u7279\u5B9A\u7684\u975E\u6807\u51C6\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u907F\u514D\u6D4F\u89C8\u5668\u7279\u5B9A\u7684\u975E\u6807\u51C6\u65B9\u6CD5" aria-hidden="true">#</a> \u907F\u514D\u6D4F\u89C8\u5668\u7279\u5B9A\u7684\u975E\u6807\u51C6\u65B9\u6CD5</h3><p>\u5C3D\u7BA1\u8BB8\u591A\u6D4F\u89C8\u5668\u90FD\u9075\u5FAA\u4E00\u4E2A\u901A\u7528\u6807\u51C6\uFF0C\u4F46\u67D0\u4E9B\u7279\u5B9A\u4E8E\u6D4F\u89C8\u5668\u7684 JavaScript \u5B9E\u73B0\u5728\u5176\u4ED6\u6D4F\u89C8\u5668\u4E0A\u5374\u5931\u8D25\u4E86\u3002\u4F8B\u5982\uFF0C\u4EE5\u4E0B\u8BED\u6CD5\u4EC5\u9002\u7528\u4E8E Firefox\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">catch</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>filename <span class="token operator">+</span> <span class="token string">&#39;: &#39;</span> <span class="token operator">+</span> e<span class="token punctuation">.</span>lineNumber<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u56E0\u6B64\uFF0C\u5728\u5904\u7406\u9519\u8BEF\u65F6\uFF0C\u5C3D\u53EF\u80FD\u4F7F\u7528\u8DE8\u6D4F\u89C8\u5668\u53CB\u597D\u7684 JavaScript \u4EE3\u7801\u3002</p><h3 id="\u8FDC\u7A0B\u9519\u8BEF\u8BB0\u5F55" tabindex="-1"><a class="header-anchor" href="#\u8FDC\u7A0B\u9519\u8BEF\u8BB0\u5F55" aria-hidden="true">#</a> \u8FDC\u7A0B\u9519\u8BEF\u8BB0\u5F55</h3><p>\u5F53\u53D1\u751F\u9519\u8BEF\u65F6\uFF0C\u6211\u4EEC\u5E94\u8BE5\u5F97\u5230\u901A\u77E5\u4EE5\u4E86\u89E3\u51FA\u4E86\u4EC0\u4E48\u95EE\u9898\u3002\u8FD9\u5C31\u662F\u9519\u8BEF\u65E5\u5FD7\u7684\u7528\u6B66\u4E4B\u5730\u3002JavaScript \u4EE3\u7801\u662F\u5728\u7528\u6237\u7684\u6D4F\u89C8\u5668\u4E2D\u6267\u884C\u7684\u3002\u56E0\u6B64\uFF0C\u9700\u8981\u4E00\u79CD\u673A\u5236\u6765\u8DDF\u8E2A\u5BA2\u6237\u7AEF\u6D4F\u89C8\u5668\u4E2D\u7684\u8FD9\u4E9B\u9519\u8BEF\uFF0C\u5E76\u5C06\u5B83\u4EEC\u53D1\u9001\u5230\u670D\u52A1\u5668\u8FDB\u884C\u5206\u6790\u3002</p><ul><li>\u53EF\u4EE5\u5C1D\u8BD5\u4F7F\u7528\u4EE5\u4E0B\u5DE5\u5177\u6765\u76D1\u63A7\u5E76\u4E0A\u62A5\u9519\u8BEF\uFF1A <ul><li>Sentry\uFF08https://sentry.io/\uFF09\uFF1A \u4E13\u6CE8\u4E8E\u5F02\u5E38\uFF08\u5E94\u7528\u5D29\u6E83\uFF09\u800C\u4E0D\u662F\u4FE1\u606F\u9519\u8BEF\u3002\u5B83\u63D0\u4F9B\u4E86\u5E94\u7528\u4E2D\u9519\u8BEF\u7684\u5B8C\u6574\u6982\u8FF0\uFF0C\u5305\u62EC\u53D7\u5F71\u54CD\u7684\u7528\u6237\u6570\u91CF\u3001\u8C03\u7528\u5806\u6808\u3001\u53D7\u5F71\u54CD\u7684\u6D4F\u89C8\u5668\u4EE5\u53CA\u5BFC\u81F4\u9519\u8BEF\u7684\u63D0\u4EA4\u7B49\u8BE6\u7EC6\u4FE1\u606F\u3002</li><li>Rollbar\uFF08https://rollbar.com/\uFF09\uFF1A \u7528\u4E8E\u524D\u7AEF\u3001\u540E\u7AEF\u548C\u79FB\u52A8\u5E94\u7528\u7684\u65E0\u4EE3\u7406\u9519\u8BEF\u76D1\u63A7\u5DE5\u5177\u3002\u5B83\u63D0\u4F9B\u4EBA\u5DE5\u667A\u80FD\u8F85\u52A9\u7684\u5DE5\u4F5C\u6D41\u7A0B\uFF0C\u4F7F\u5F00\u53D1\u4EBA\u5458\u80FD\u591F\u5728\u9519\u8BEF\u5F71\u54CD\u7528\u6237\u4E4B\u524D\u7ACB\u5373\u91C7\u53D6\u884C\u52A8\u3002\u5B83\u4F1A\u663E\u793A\u53D7\u9519\u8BEF\u5F71\u54CD\u7684\u5BA2\u6237\u6570\u91CF\u3001\u53D7\u5F71\u54CD\u7684\u5E73\u53F0\u6216\u6D4F\u89C8\u5668\u7684\u7C7B\u578B\u4EE5\u53CA\u4E4B\u524D\u662F\u5426\u53D1\u751F\u8FC7\u7C7B\u4F3C\u9519\u8BEF\u6216\u662F\u5426\u5DF2\u7ECF\u5B58\u5728\u89E3\u51B3\u65B9\u6848\u7B49\u6570\u636E\u3002</li></ul></li></ul><h3 id="\u9519\u8BEF\u5904\u7406\u4E2D\u95F4\u4EF6-node-js" tabindex="-1"><a class="header-anchor" href="#\u9519\u8BEF\u5904\u7406\u4E2D\u95F4\u4EF6-node-js" aria-hidden="true">#</a> \u9519\u8BEF\u5904\u7406\u4E2D\u95F4\u4EF6\uFF08Node.js\uFF09</h3><p>Node.js \u73AF\u5883\u652F\u6301\u4F7F\u7528\u4E2D\u95F4\u4EF6\u5411\u670D\u52A1\u7AEF\u5E94\u7528\u4E2D\u6DFB\u52A0\u529F\u80FD\u3002\u56E0\u6B64\u53EF\u4EE5\u521B\u5EFA\u4E00\u4E2A\u9519\u8BEF\u5904\u7406\u4E2D\u95F4\u4EF6\u3002\u4F7F\u7528\u4E2D\u95F4\u4EF6\u7684\u6700\u5927\u597D\u5904\u662F\u6240\u6709\u9519\u8BEF\u90FD\u5728\u4E00\u4E2A\u5730\u65B9\u96C6\u4E2D\u5904\u7406\u3002\u53EF\u4EE5\u9009\u62E9\u542F\u7528/\u7981\u7528\u6B64\u8BBE\u7F6E\u4EE5\u8F7B\u677E\u8FDB\u884C\u6D4B\u8BD5\u3002</p><p>\u4EE5\u4E0B\u662F\u521B\u5EFA\u57FA\u672C\u4E2D\u95F4\u4EF6\u7684\u65B9\u6CD5\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">logError</span> <span class="token operator">=</span> <span class="token parameter">err</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;ERROR: &quot;</span> <span class="token operator">+</span> <span class="token function">String</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token function-variable function">errorLoggerMiddleware</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> req<span class="token punctuation">,</span> res<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">logError</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
    <span class="token function">next</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token function-variable function">returnErrorMiddleware</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> req<span class="token punctuation">,</span> res<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    res<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span>err<span class="token punctuation">.</span>statusCode <span class="token operator">||</span> <span class="token number">500</span><span class="token punctuation">)</span>
       <span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>err<span class="token punctuation">.</span>message<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
    logError<span class="token punctuation">,</span>
    errorLoggerMiddleware<span class="token punctuation">,</span>
    returnErrorMiddleware
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53EF\u4EE5\u50CF\u4E0B\u9762\u8FD9\u6837\u5728\u5E94\u7528\u4E2D\u4F7F\u7528\u6B64\u4E2D\u95F4\u4EF6\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> errorLoggerMiddleware<span class="token punctuation">,</span> returnErrorMiddleware <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./errorMiddleware&#39;</span><span class="token punctuation">)</span>

app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>errorLoggerMiddleware<span class="token punctuation">)</span>

app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>returnErrorMiddleware<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u73B0\u5728\u53EF\u4EE5\u5728\u4E2D\u95F4\u4EF6\u5185\u5B9A\u4E49\u81EA\u5B9A\u4E49\u903B\u8F91\u4EE5\u9002\u5F53\u5730\u5904\u7406\u9519\u8BEF\u3002\u800C\u65E0\u9700\u518D\u62C5\u5FC3\u5728\u6574\u4E2A\u4EE3\u7801\u5E93\u4E2D\u5B9E\u73B0\u5355\u72EC\u7684\u9519\u8BEF\u5904\u7406\u7ED3\u6784\u3002</p><h3 id="\u6355\u83B7\u6240\u6709\u672A\u6355\u83B7\u7684\u5F02\u5E38-node-js" tabindex="-1"><a class="header-anchor" href="#\u6355\u83B7\u6240\u6709\u672A\u6355\u83B7\u7684\u5F02\u5E38-node-js" aria-hidden="true">#</a> \u6355\u83B7\u6240\u6709\u672A\u6355\u83B7\u7684\u5F02\u5E38\uFF08Node.js\uFF09</h3><p>\u6211\u4EEC\u53EF\u80FD\u6C38\u8FDC\u65E0\u6CD5\u6DB5\u76D6\u5E94\u7528\u4E2D\u53EF\u80FD\u53D1\u751F\u7684\u6240\u6709\u9519\u8BEF\u3002\u56E0\u6B64\uFF0C\u5FC5\u987B\u5B9E\u65BD\u56DE\u9000\u7B56\u7565\u4EE5\u6355\u83B7\u5E94\u7528\u4E2D\u6240\u6709\u672A\u6355\u83B7\u7684\u5F02\u5E38\u3002</p><p>\u53EF\u4EE5\u8FD9\u6837\u505A\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>process<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;uncaughtException&#39;</span><span class="token punctuation">,</span> <span class="token parameter">error</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;ERROR: &quot;</span> <span class="token operator">+</span> <span class="token function">String</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token comment">// \u5176\u4ED6\u5904\u7406\u673A\u5236</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD8\u53EF\u4EE5\u786E\u5B9A\u53D1\u751F\u7684\u9519\u8BEF\u662F\u6807\u51C6\u9519\u8BEF\u8FD8\u662F\u81EA\u5B9A\u4E49\u64CD\u4F5C\u9519\u8BEF\u3002\u6839\u636E\u7ED3\u679C\uFF0C\u53EF\u4EE5\u9000\u51FA\u8FDB\u7A0B\u5E76\u91CD\u65B0\u542F\u52A8\u5B83\u4EE5\u907F\u514D\u610F\u5916\u884C\u4E3A\u3002</p><h3 id="\u6355\u83B7\u6240\u6709\u672A\u5904\u7406\u7684-promise-\u62D2\u7EDD-node-js" tabindex="-1"><a class="header-anchor" href="#\u6355\u83B7\u6240\u6709\u672A\u5904\u7406\u7684-promise-\u62D2\u7EDD-node-js" aria-hidden="true">#</a> \u6355\u83B7\u6240\u6709\u672A\u5904\u7406\u7684 Promise \u62D2\u7EDD\uFF08Node.js\uFF09</h3><p>\u4E0E\u5F02\u5E38\u4E0D\u540C\u7684\u662F\uFF0Cpromise \u62D2\u7EDD\u4E0D\u4F1A\u629B\u51FA\u9519\u8BEF\u3002\u56E0\u6B64\uFF0C\u4E00\u4E2A\u88AB\u62D2\u7EDD\u7684 promise \u53EF\u80FD\u53EA\u662F\u4E00\u4E2A\u8B66\u544A\uFF0C\u8FD9\u8BA9\u5E94\u7528\u6709\u53EF\u80FD\u9047\u5230\u610F\u5916\u884C\u4E3A\u3002\u56E0\u6B64\uFF0C\u5B9E\u73B0\u5904\u7406 promise \u62D2\u7EDD\u7684\u56DE\u9000\u673A\u5236\u81F3\u5173\u91CD\u8981\u3002</p><p>\u53EF\u4EE5\u8FD9\u6837\u505A\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">promiseRejectionCallback</span> <span class="token operator">=</span> <span class="token parameter">error</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;PROMISE REJECTED: &quot;</span> <span class="token operator">+</span> <span class="token function">String</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

process<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;unhandledRejection&#39;</span><span class="token punctuation">,</span> callback<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,273),o=[e];function c(i,u){return s(),a("div",null,o)}const r=n(p,[["render",c],["__file","21.html.vue"]]);export{r as default};
