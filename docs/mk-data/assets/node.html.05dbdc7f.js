import{_ as n,o as s,c as a,a as p}from"./app.296c1869.js";const e={},t=p(`<h1 id="nodejs" tabindex="-1"><a class="header-anchor" href="#nodejs" aria-hidden="true">#</a> Nodejs</h1><h2 id="mondodb" tabindex="-1"><a class="header-anchor" href="#mondodb" aria-hidden="true">#</a> mondodb</h2><ul><li>\u5B89\u88C5</li></ul><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">yarn</span> <span class="token function">add</span> mogodb
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>\u793A\u4F8B</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> MongoDB <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;mongodb&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> MongoClient <span class="token operator">=</span> MongoDB<span class="token punctuation">.</span>MongoClient
<span class="token keyword">const</span> ObjectID <span class="token operator">=</span> MongoDB<span class="token punctuation">.</span>ObjectID

<span class="token comment">// \u5B9A\u4E49\u94FE\u63A5\u6570\u636E\u5E93\u5730\u5740</span>
<span class="token keyword">const</span> url <span class="token operator">=</span> <span class="token string">&#39;mongodb://localhost:27017&#39;</span>
<span class="token keyword">const</span> dbName <span class="token operator">=</span> <span class="token string">&#39;mktest&#39;</span>
<span class="token keyword">const</span> id <span class="token operator">=</span> <span class="token string">&#39;5df7495bfce5440e879ecc72&#39;</span>
<span class="token keyword">const</span> objectID <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ObjectID</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span> <span class="token comment">// mongodb\u91CC\u9762\u67E5\u8BE2 _id \u628A\u5B57\u7B26\u4E32\u8F6C\u6362\u6210\u5BF9\u8C61</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> objectID<span class="token punctuation">)</span>

<span class="token comment">// \u94FE\u63A5\u6570\u636E\u5E93</span>
MongoClient<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">useUnifiedTopology</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> client</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u6570\u636E\u5E93\u8FDE\u63A5\u5931\u8D25&#39;</span><span class="token punctuation">)</span>
        client<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">const</span> db <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">db</span><span class="token punctuation">(</span>dbName<span class="token punctuation">)</span> <span class="token comment">// \u83B7\u53D6db\u5BF9\u8C61</span>
    <span class="token comment">// \u67E5\u8BE2</span>
    <span class="token comment">// db.collection(&#39;order&#39;).find().toArray((err, docs) =&gt; {</span>
    <span class="token comment">//     if (err) {</span>
    <span class="token comment">//         console.log(&#39;\u83B7\u53D6\u6570\u9519\u8BEF&#39;)</span>
    <span class="token comment">//         client.close()</span>
    <span class="token comment">//         return</span>
    <span class="token comment">//     }</span>

    <span class="token comment">//     console.log(docs)</span>
    <span class="token comment">//     client.close()</span>
    <span class="token comment">// })</span>
    <span class="token comment">// \u63D2\u5165</span>
    <span class="token comment">// const json = {name: &#39;mankeung&#39;, age: 16, sex: &#39;\u7537&#39;}</span>
    <span class="token comment">// db.collection(&#39;user&#39;).insertOne(json, (err, result) =&gt; {</span>
    <span class="token comment">//     if (err) {</span>
    <span class="token comment">//         console.log(&#39;\u65B0\u589E\u5931\u8D25&#39;)</span>
    <span class="token comment">//         return</span>
    <span class="token comment">//     }</span>
    <span class="token comment">//     console.log(result)</span>
    <span class="token comment">//     client.close()</span>
    <span class="token comment">// })</span>
    <span class="token comment">// \u4FEE\u6539</span>
    <span class="token comment">// const json1 = {name: &#39;mankeung&#39;}</span>
    <span class="token comment">// const json2 = {age: 28}</span>
    <span class="token comment">// db.collection(&#39;user&#39;).updateOne(json1, {</span>
    <span class="token comment">//     $set: json2</span>
    <span class="token comment">// }, (err, result) =&gt; {</span>
    <span class="token comment">//     if (err) {</span>
    <span class="token comment">//         console.log(&#39;\u4FEE\u6539\u9519\u8BEF&#39;)</span>
    <span class="token comment">//         return</span>
    <span class="token comment">//     }</span>
    <span class="token comment">//     console.log(result)</span>
    <span class="token comment">//     client.close()</span>
    <span class="token comment">// })</span>

    <span class="token comment">// \u5220\u9664</span>
    <span class="token comment">// const json = {name: &#39;mankeung&#39;}</span>
    <span class="token comment">// db.collection(&#39;user&#39;).remove(json, (err, result) =&gt; {</span>
    <span class="token comment">//     if (err) {</span>
    <span class="token comment">//         console.log(&#39;\u5220\u9664\u5931\u8D25&#39;)</span>
    <span class="token comment">//         return</span>
    <span class="token comment">//     }</span>
    <span class="token comment">//     console.log(result)</span>
    <span class="token comment">//     client.close()</span>
    <span class="token comment">// })</span>

    db<span class="token punctuation">.</span><span class="token function">collection</span><span class="token punctuation">(</span><span class="token string">&quot;order&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">aggregate</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">{</span>
            <span class="token literal-property property">$lookup</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token literal-property property">from</span><span class="token operator">:</span> <span class="token string">&quot;order_item&quot;</span><span class="token punctuation">,</span>
                <span class="token literal-property property">localField</span><span class="token operator">:</span> <span class="token string">&quot;order_id&quot;</span><span class="token punctuation">,</span>
                <span class="token literal-property property">foreignField</span><span class="token operator">:</span> <span class="token string">&quot;order_id&quot;</span><span class="token punctuation">,</span>
                <span class="token keyword">as</span><span class="token operator">:</span> <span class="token string">&quot;items&quot;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span>
            <span class="token literal-property property">$match</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token string-property property">&quot;all_price&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                    <span class="token literal-property property">$gte</span><span class="token operator">:</span> <span class="token number">90</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

    <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">_err<span class="token punctuation">,</span> docs</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>docs<span class="token punctuation">)</span>
        client<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="mongoose" tabindex="-1"><a class="header-anchor" href="#mongoose" aria-hidden="true">#</a> mongoose</h2><ul><li>\u5B89\u88C5</li></ul><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">yarn</span> <span class="token function">add</span> mongoose
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>\u5F15\u5165mongoose</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> mongoose <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;mongoose&#39;</span><span class="token punctuation">)</span>
mongoose<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token string">&#39;mongodb://localhost/test&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// \u5982\u679C\u6709\u8D26\u6237\u5BC6\u7801\u9700\u8981\u91C7\u7528\u4E0B\u9762\u7684\u8FDE\u63A5\u65B9\u5F0F\uFF1A</span>
mongoose<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token string">&#39;mongodb://eggadmin:123456@localhost:27017/eggcms&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5B9A\u4E49schema" tabindex="-1"><a class="header-anchor" href="#\u5B9A\u4E49schema" aria-hidden="true">#</a> \u5B9A\u4E49Schema</h3><p>\u6570\u636E\u5E93\u4E2D\u7684 Schema\uFF0C \u4E3A\u6570\u636E\u5E93\u5BF9\u8C61\u7684\u96C6\u5408\u3002 schema \u662F mongoose \u91CC\u4F1A\u7528\u5230\u7684\u4E00\u79CD\u6570\u636E\u6A21\u5F0F\uFF0C\u53EF\u4EE5\u7406\u89E3\u4E3A\u8868\u7ED3\u6784\u7684\u5B9A\u4E49\uFF1B\u6BCF\u4E2A schema \u4F1A\u6620\u5C04\u5230 mongodb \u4E2D\u7684\u4E00\u4E2A collection\uFF0C\u5B83\u4E0D\u5177\u5907\u64CD\u4F5C\u6570\u636E\u5E93\u7684\u80FD\u529B</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> UserSchema<span class="token operator">=</span>mongoose<span class="token punctuation">.</span><span class="token function">Schema</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
<span class="token literal-property property">name</span><span class="token operator">:</span> String<span class="token punctuation">,</span>
<span class="token literal-property property">age</span><span class="token operator">:</span> Number<span class="token punctuation">,</span>
<span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">&#39;number&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u521B\u5EFA\u6570\u636E\u6A21\u578B" tabindex="-1"><a class="header-anchor" href="#\u521B\u5EFA\u6570\u636E\u6A21\u578B" aria-hidden="true">#</a> \u521B\u5EFA\u6570\u636E\u6A21\u578B</h3><p>\u5B9A\u4E49\u597D\u4E86 Schema\uFF0C\u63A5\u4E0B\u5C31\u662F\u751F\u6210 Model\u3002model \u662F\u7531 schema \u751F\u6210\u7684\u6A21\u578B\uFF0C\u53EF\u4EE5\u5BF9\u6570\u636E\u5E93\u7684\u64CD\u4F5C\u3002</p><blockquote><p>\u6CE8\u610F\uFF1Amongoose.model \u91CC\u9762\u53EF\u4EE5\u4F20\u5165\u4E24\u4E2A\u53C2\u6570\u4E5F\u53EF\u4EE5\u4F20\u5165\u4E09\u4E2A\u53C2\u6570</p></blockquote><p>mongoose.model\uFF08\u53C2\u6570 1:\u6A21\u578B\u540D\u79F0\uFF08\u9996\u5B57\u6BCD\u5927\u5199\uFF09\uFF0C\u53C2\u6570 2:Schema\uFF09 mongoose.model\uFF08\u53C2\u6570 1:\u6A21\u578B\u540D\u79F0\uFF08\u9996\u5B57\u6BCD\u5927\u5199\uFF09\uFF0C\u53C2\u6570 2:Schema\uFF0C\u53C2\u6570 3:\u6570\u636E\u5E93\u96C6\u5408\u540D\u79F0\uFF09</p><p>\u5982\u679C\u4F20\u51652\u4E2A\u53C2\u6570\u7684\u8BDD:\u8FD9\u4E2A\u6A21\u578B\u4F1A\u548C\u6A21\u578B\u540D\u79F0\u76F8\u540C\u7684\u590D\u6570\u7684\u6570\u636E\u5E93\u5EFA\u7ACB\u8FDE\u63A5\uFF1A\u5982\u901A\u8FC7\u4E0B\u9762\u65B9\u6CD5\u521B\u5EFA\u6A21\u578B\uFF0C\u90A3\u4E48\u8FD9\u4E2A\u6A21\u578B\u5C06\u4F1A\u64CD\u4F5C users \u8FD9\u4E2A\u96C6\u5408</p><p>\u5982\u679C\u4F20\u51653\u4E2A\u53C2\u6570\u7684\u8BDD:\u6A21\u578B\u9ED8\u8BA4\u64CD\u4F5C\u7B2C\u4E09\u4E2A\u53C2\u6570\u5B9A\u4E49\u7684\u96C6\u5408\u540D\u79F0</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> User<span class="token operator">=</span>mongoose<span class="token punctuation">.</span><span class="token function">model</span><span class="token punctuation">(</span><span class="token string">&#39;User&#39;</span><span class="token punctuation">,</span> UserSchema<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="\u67E5\u627E\u6570\u636E" tabindex="-1"><a class="header-anchor" href="#\u67E5\u627E\u6570\u636E" aria-hidden="true">#</a> \u67E5\u627E\u6570\u636E</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>User<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span>docs</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
        <span class="token keyword">return</span>
    <span class="token punctuation">}</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>docs<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u589E\u52A0\u6570\u636E" tabindex="-1"><a class="header-anchor" href="#\u589E\u52A0\u6570\u636E" aria-hidden="true">#</a> \u589E\u52A0\u6570\u636E</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> u <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token comment">//\u5B9E\u4F8B\u5316\u6A21\u578B \u4F20\u5165\u589E\u52A0\u7684\u6570\u636E</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;lisi2222333&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span>
    <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token boolean">true</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
u<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u4FEE\u6539\u6570\u636E" tabindex="-1"><a class="header-anchor" href="#\u4FEE\u6539\u6570\u636E" aria-hidden="true">#</a> \u4FEE\u6539\u6570\u636E</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>User<span class="token punctuation">.</span><span class="token function">updateOne</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;lisi2222&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;\u54C8\u54C8\u54C8&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
        <span class="token keyword">return</span>
    <span class="token punctuation">}</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u6210\u529F&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5220\u9664\u6570\u636E" tabindex="-1"><a class="header-anchor" href="#\u5220\u9664\u6570\u636E" aria-hidden="true">#</a> \u5220\u9664\u6570\u636E</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>User<span class="token punctuation">.</span><span class="token function">deleteOne</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">_id</span><span class="token operator">:</span> <span class="token string">&#39;5b72ada84e284f0acc8d318a&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
        <span class="token keyword">return</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// deleted at most one tank document</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u6210\u529F&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u4FDD\u5B58\u6210\u529F\u67E5\u627E" tabindex="-1"><a class="header-anchor" href="#\u4FDD\u5B58\u6210\u529F\u67E5\u627E" aria-hidden="true">#</a> \u4FDD\u5B58\u6210\u529F\u67E5\u627E</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> u <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;lisi2222333&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span>
    <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token comment">//\u7C7B\u578B\u8F6C\u6362</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
u<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> docs</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
        <span class="token keyword">return</span>
    <span class="token punctuation">}</span>
    <span class="token comment">//console.log(docs)</span>
    User<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> docs</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
            <span class="token keyword">return</span>
        <span class="token punctuation">}</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>docs<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="mongoose\u9884\u5B9A\u4E49\u6A21\u5F0F\u4FEE\u9970\u7B26" tabindex="-1"><a class="header-anchor" href="#mongoose\u9884\u5B9A\u4E49\u6A21\u5F0F\u4FEE\u9970\u7B26" aria-hidden="true">#</a> mongoose\u9884\u5B9A\u4E49\u6A21\u5F0F\u4FEE\u9970\u7B26</h3><p>lowercase\u3001uppercase \u3001trim mongoose \u63D0\u4F9B\u7684\u9884\u5B9A\u4E49\u6A21\u5F0F\u4FEE\u9970\u7B26\uFF0C\u53EF\u4EE5\u5BF9\u6211\u4EEC\u589E\u52A0\u7684\u6570\u636E\u8FDB\u884C\u4E00\u4E9B\u683C\u5F0F\u5316\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> UserSchema <span class="token operator">=</span> mongoose<span class="token punctuation">.</span><span class="token function">Schema</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">type</span><span class="token operator">:</span> String<span class="token punctuation">,</span>
        <span class="token literal-property property">trim</span><span class="token operator">:</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> Number<span class="token punctuation">,</span>
    <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">type</span><span class="token operator">:</span> Number<span class="token punctuation">,</span>
        <span class="token keyword">default</span><span class="token operator">:</span> <span class="token number">1</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="mongoose-getters\u4E0Esetters" tabindex="-1"><a class="header-anchor" href="#mongoose-getters\u4E0Esetters" aria-hidden="true">#</a> Mongoose Getters\u4E0ESetters</h3><p>\u9664\u4E86mongoose\u5185\u7F6E\u7684\u4FEE\u9970\u7B26\u4EE5\u5916\uFF0C\u6211\u4EEC\u8FD8\u53EF\u4EE5\u901A\u8FC7set\uFF08\u5EFA\u8BAE\u4F7F\u7528\uFF09\u4FEE\u9970\u7B26\u5728\u589E\u52A0\u6570\u636E\u7684\u65F6\u5019\u5BF9\u6570\u636E\u8FDB\u884C\u683C\u5F0F\u5316\u3002\u4E5F\u53EF\u4EE5\u901A\u8FC7 get\uFF08\u4E0D\u5EFA\u8BAE\u4F7F\u7528\uFF09\u5728 \u5B9E\u4F8B\u83B7\u53D6\u6570\u636E\u7684\u65F6\u5019\u5BF9\u6570\u636E\u8FDB\u884C\u683C\u5F0F\u5316\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> NewsSchema <span class="token operator">=</span> mongoose<span class="token punctuation">.</span><span class="token function">Schema</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">author</span><span class="token operator">:</span> String<span class="token punctuation">,</span>
    <span class="token literal-property property">pic</span><span class="token operator">:</span> String<span class="token punctuation">,</span>
    <span class="token literal-property property">redirect</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">type</span><span class="token operator">:</span> String<span class="token punctuation">,</span>
        <span class="token function">set</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>url<span class="token punctuation">)</span> <span class="token keyword">return</span> url<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>url<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;http://&#39;</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> url<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;https://&#39;</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                url <span class="token operator">=</span> <span class="token string">&#39;http://&#39;</span> <span class="token operator">+</span> url<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">return</span> url<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">content</span><span class="token operator">:</span> String<span class="token punctuation">,</span>
    <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">type</span><span class="token operator">:</span> Number<span class="token punctuation">,</span>
        <span class="token keyword">default</span><span class="token operator">:</span> <span class="token number">1</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> NewsSchema <span class="token operator">=</span> mongoose<span class="token punctuation">.</span><span class="token function">Schema</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">author</span><span class="token operator">:</span> String<span class="token punctuation">,</span>
    <span class="token literal-property property">pic</span><span class="token operator">:</span> String<span class="token punctuation">,</span>
    <span class="token literal-property property">redirect</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">type</span><span class="token operator">:</span> String<span class="token punctuation">,</span>
        <span class="token function">set</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>url<span class="token punctuation">)</span> <span class="token keyword">return</span> url<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>url<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;http://&#39;</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> url<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;https://&#39;</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                url <span class="token operator">=</span> <span class="token string">&#39;http://&#39;</span> <span class="token operator">+</span> url<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">return</span> url<span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token function-variable function">get</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">url</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>url<span class="token punctuation">)</span> <span class="token keyword">return</span> url<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>url<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;http://&#39;</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> url<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;https://&#39;</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                url <span class="token operator">=</span> <span class="token string">&#39;http://&#39;</span> <span class="token operator">+</span> url<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">return</span> url<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">content</span><span class="token operator">:</span> String<span class="token punctuation">,</span>
    <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">type</span><span class="token operator">:</span> Number<span class="token punctuation">,</span>
        <span class="token keyword">default</span><span class="token operator">:</span> <span class="token number">1</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="mongoose\u7D22\u5F15" tabindex="-1"><a class="header-anchor" href="#mongoose\u7D22\u5F15" aria-hidden="true">#</a> Mongoose\u7D22\u5F15</h3><p>\u7D22\u5F15\u662F\u5BF9\u6570\u636E\u5E93\u8868\u4E2D\u4E00\u5217\u6216\u591A\u5217\u7684\u503C\u8FDB\u884C\u6392\u5E8F\u7684\u4E00\u79CD\u7ED3\u6784\uFF0C\u53EF\u4EE5\u8BA9\u6211\u4EEC\u67E5\u8BE2\u6570\u636E\u5E93\u53D8\u5F97\u66F4 \u5FEB\u3002MongoDB \u7684\u7D22\u5F15\u51E0\u4E4E\u4E0E\u4F20\u7EDF\u7684\u5173\u7CFB\u578B\u6570\u636E\u5E93\u4E00\u6A21\u4E00\u6837\uFF0C\u8FD9\u5176\u4E2D\u4E5F\u5305\u62EC\u4E00\u4E9B\u57FA\u672C\u7684\u67E5\u8BE2 \u4F18\u5316\u6280\u5DE7\u3002</p><p>mongoose \u4E2D\u9664\u4E86\u4EE5\u524D\u521B\u5EFA\u7D22\u5F15\u7684\u65B9\u5F0F\uFF0C\u6211\u4EEC\u4E5F\u53EF\u4EE5\u5728\u5B9A\u4E49 Schema \u7684\u65F6\u5019\u6307\u5B9A\u521B\u5EFA\u7D22\u5F15\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> DeviceSchema <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">mongoose<span class="token punctuation">.</span>Schema</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">sn</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">type</span><span class="token operator">:</span> Number<span class="token punctuation">,</span>
        <span class="token comment">// \u552F\u4E00\u7D22\u5F15</span>
        <span class="token literal-property property">unique</span><span class="token operator">:</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">type</span><span class="token operator">:</span> String<span class="token punctuation">,</span>
        <span class="token comment">// \u666E\u901A\u7D22\u5F15</span>
        <span class="token literal-property property">index</span><span class="token operator">:</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="https-mongoosejs-com-docs-queries-html" tabindex="-1"><a class="header-anchor" href="#https-mongoosejs-com-docs-queries-html" aria-hidden="true">#</a> [https://mongoosejs.com/docs/queries.html</h3><ul><li>Model.deleteMany()</li><li>Model.deleteOne()</li><li>Model.find()</li><li>Model.findById()</li><li>Model.findByIdAndDelete()</li><li>Model.findByIdAndRemove()</li><li>Model.findByIdAndUpdate()</li><li>Model.findOne()</li><li>Model.findOneAndDelete()</li><li>Model.findOneAndRemove()</li><li>Model.findOneAndUpdate()</li><li>Model.replaceOne()</li><li>Model.updateMany()</li><li>Model.updateOne()</li></ul><h3 id="\u6269\u5C55mongoose-curd\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u6269\u5C55mongoose-curd\u65B9\u6CD5" aria-hidden="true">#</a> \u6269\u5C55Mongoose CURD\u65B9\u6CD5</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> mongoose <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./db.js&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> UserSchema <span class="token operator">=</span> mongoose<span class="token punctuation">.</span><span class="token function">Schema</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">type</span><span class="token operator">:</span> String
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> Number<span class="token punctuation">,</span>
    <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">type</span><span class="token operator">:</span> Number<span class="token punctuation">,</span>
        <span class="token keyword">default</span><span class="token operator">:</span> <span class="token number">1</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// \u9759\u6001\u65B9\u6CD5</span>
UserSchema<span class="token punctuation">.</span>statics<span class="token punctuation">.</span><span class="token function-variable function">findByUid</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">uid<span class="token punctuation">,</span> cb</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token string-property property">&quot;_id&quot;</span><span class="token operator">:</span> uid
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> docs</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">cb</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> docs<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u5B9E\u4F8B\u65B9\u6CD5</span>
UserSchema<span class="token punctuation">.</span>methods<span class="token punctuation">.</span><span class="token function-variable function">print</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u8FD9\u662F\u4E00\u4E2A\u5B9E\u4F8B\u65B9\u6CD5&#39;</span><span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> mongoose<span class="token punctuation">.</span><span class="token function">model</span><span class="token punctuation">(</span><span class="token string">&#39;User&#39;</span><span class="token punctuation">,</span> UserSchema<span class="token punctuation">,</span> <span class="token string">&#39;user&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="mongoose\u6821\u9A8C\u53C2\u6570" tabindex="-1"><a class="header-anchor" href="#mongoose\u6821\u9A8C\u53C2\u6570" aria-hidden="true">#</a> Mongoose\u6821\u9A8C\u53C2\u6570</h3><table><thead><tr><th>\u53C2\u6570</th><th>\u63CF\u8FF0</th></tr></thead><tbody><tr><td>required</td><td>\u8868\u793A\u8FD9\u4E2A\u6570\u636E\u5FC5\u987B\u4F20\u5165</td></tr><tr><td>max</td><td>\u7528\u4E8E Number \u7C7B\u578B\u6570\u636E\uFF0C\u6700\u5927\u503C</td></tr><tr><td>min</td><td>\u7528\u4E8E Number \u7C7B\u578B\u6570\u636E\uFF0C\u6700\u5C0F\u503C</td></tr><tr><td>enum</td><td>\u679A\u4E3E\u7C7B\u578B\uFF0C\u8981\u6C42\u6570\u636E\u5FC5\u987B\u6EE1\u8DB3\u679A\u4E3E\u503C enum: [&#39;0&#39;, &#39;1&#39;, &#39;2&#39;]</td></tr><tr><td>match</td><td>\u589E\u52A0\u7684\u6570\u636E\u5FC5\u987B\u7B26\u5408 match\uFF08\u6B63\u5219\uFF09\u7684\u89C4\u5219</td></tr><tr><td>maxlength</td><td>\u6700\u5927\u503C</td></tr><tr><td>minlength</td><td>\u6700\u5C0F\u503C</td></tr></tbody></table><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> UserSchema <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">mongoose<span class="token punctuation">.</span>Schema</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">type</span><span class="token operator">:</span> String<span class="token punctuation">,</span>
        <span class="token literal-property property">required</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">type</span><span class="token operator">:</span> Number<span class="token punctuation">,</span>
        <span class="token comment">// \u662F\u5426\u5FC5\u987B\u7684\u6821\u9A8C\u5668</span>
        <span class="token literal-property property">required</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        <span class="token comment">// \u6570\u5B57\u7C7B\u578B\u7684\u6700\u5927\u503C\u6821\u9A8C\u5668</span>
        <span class="token literal-property property">max</span><span class="token operator">:</span> <span class="token number">120</span><span class="token punctuation">,</span>
        <span class="token comment">// \u6570\u5B57\u7C7B\u578B\u7684\u6700\u5C0F\u503C\u6821\u9A8C\u5668</span>
        <span class="token literal-property property">min</span><span class="token operator">:</span> <span class="token number">0</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">type</span><span class="token operator">:</span> String<span class="token punctuation">,</span>
        <span class="token comment">// \u8BBE\u7F6E\u5B57\u7B26\u4E32\u7684\u53EF\u9009\u503C</span>
        <span class="token keyword">enum</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;0&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;2&#39;</span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">phone</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">type</span><span class="token operator">:</span> Number<span class="token punctuation">,</span>
        <span class="token literal-property property">match</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\\d{11}$</span><span class="token regex-delimiter">/</span></span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">desc</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">type</span><span class="token operator">:</span> String<span class="token punctuation">,</span>
        <span class="token literal-property property">maxlength</span><span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span>
        <span class="token literal-property property">minlength</span><span class="token operator">:</span> <span class="token number">10</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="mongoose\u81EA\u5B9A\u4E49\u7684\u9A8C\u8BC1\u5668" tabindex="-1"><a class="header-anchor" href="#mongoose\u81EA\u5B9A\u4E49\u7684\u9A8C\u8BC1\u5668" aria-hidden="true">#</a> Mongoose\u81EA\u5B9A\u4E49\u7684\u9A8C\u8BC1\u5668</h3><p>\u5728\u7F3A\u7701\u60C5\u51B5\u4E0B\u521B\u5EFA\u7684\u7D22\u5F15\u5747\u4E0D\u662F\u552F\u4E00\u7D22\u5F15\u3002\u4E0B\u9762\u7684\u793A\u4F8B\u5C06\u521B\u5EFA\u552F\u4E00\u7D22\u5F15\uFF0C\u5982\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> UserSchema <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">mongoose<span class="token punctuation">.</span>Schema</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">type</span><span class="token operator">:</span> String<span class="token punctuation">,</span>
        <span class="token literal-property property">required</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">type</span><span class="token operator">:</span> Number<span class="token punctuation">,</span>
        <span class="token comment">// \u662F\u5426\u5FC5\u987B\u7684\u6821\u9A8C\u5668</span>
        <span class="token literal-property property">required</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        <span class="token comment">// \u6570\u5B57\u7C7B\u578B\u7684\u6700\u5927\u503C\u6821\u9A8C\u5668</span>
        <span class="token literal-property property">max</span><span class="token operator">:</span> <span class="token number">120</span><span class="token punctuation">,</span>
        <span class="token comment">// \u6570\u5B57\u7C7B\u578B\u7684\u6700\u5C0F\u503C\u6821\u9A8C\u5668</span>
        <span class="token literal-property property">min</span><span class="token operator">:</span> <span class="token number">0</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">type</span><span class="token operator">:</span> String<span class="token punctuation">,</span>
        <span class="token comment">// \u8BBE\u7F6E\u5B57\u7B26\u4E32\u7684\u53EF\u9009\u503C</span>
        <span class="token keyword">enum</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;0&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;2&#39;</span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">phone</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">type</span><span class="token operator">:</span> Number<span class="token punctuation">,</span>
        <span class="token literal-property property">match</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\\d{11}$</span><span class="token regex-delimiter">/</span></span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">desc</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">type</span><span class="token operator">:</span> String<span class="token punctuation">,</span>
        <span class="token comment">// \u81EA\u5B9A\u4E49\u7684\u9A8C\u8BC1\u5668\uFF0C\u5982\u679C\u901A\u8FC7\u9A8C\u8BC1\u8FD4\u56DE true\uFF0C\u6CA1\u6709\u901A\u8FC7\u5219\u8FD4\u56DE false</span>
        <span class="token function-variable function">validate</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">desc</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> desc<span class="token punctuation">.</span>length <span class="token operator">&gt;=</span> <span class="token number">10</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="mongoose-populate-https-mongoosejs-com-docs-populate-html" tabindex="-1"><a class="header-anchor" href="#mongoose-populate-https-mongoosejs-com-docs-populate-html" aria-hidden="true">#</a> Mongoose (populate)[https://mongoosejs.com/docs/populate.html]</h3><ul><li>\u5173\u8054\u67E5\u8BE2</li></ul><ol><li>\u5B9A\u4E49ref</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> ArticleSchema <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Schema</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">type</span><span class="token operator">:</span> String<span class="token punctuation">,</span>
        <span class="token literal-property property">unique</span><span class="token operator">:</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">cid</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">type</span><span class="token operator">:</span> Schema<span class="token punctuation">.</span>Types<span class="token punctuation">.</span>ObjectId<span class="token punctuation">,</span>
        <span class="token literal-property property">ref</span><span class="token operator">:</span> <span class="token string">&#39;ArticleCate&#39;</span> <span class="token comment">//model \u7684\u540D\u79F0</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token comment">/*\u5206\u7C7B id*/</span>
    <span class="token literal-property property">author_id</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">type</span><span class="token operator">:</span> Schema<span class="token punctuation">.</span>Types<span class="token punctuation">.</span>ObjectId<span class="token punctuation">,</span>
        <span class="token literal-property property">ref</span><span class="token operator">:</span> <span class="token string">&#39;User&#39;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token comment">/*\u7528\u6237\u7684 id*/</span>
    <span class="token literal-property property">author_name</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">type</span><span class="token operator">:</span> String
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">descripton</span><span class="token operator">:</span> String<span class="token punctuation">,</span>
    <span class="token literal-property property">content</span><span class="token operator">:</span> String
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>\u5173\u8054\u67E5\u8BE2</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>ArticleModel<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">populate</span><span class="token punctuation">(</span><span class="token string">&#39;cid&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">populate</span><span class="token punctuation">(</span><span class="token string">&#39;author_id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> docs</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>docs<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,58),o=[t];function c(l,i){return s(),a("div",null,o)}const u=n(e,[["render",c],["__file","node.html.vue"]]);export{u as default};
