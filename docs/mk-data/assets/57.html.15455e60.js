import{_ as n,o as s,c as a,a as t}from"./app.d71537a2.js";const p={},e=t(`<h1 id="js\u6570\u5B57\u7CBE\u5EA6\u4E22\u5931\u7684\u4E00\u4E9B\u5178\u578B\u95EE\u9898" tabindex="-1"><a class="header-anchor" href="#js\u6570\u5B57\u7CBE\u5EA6\u4E22\u5931\u7684\u4E00\u4E9B\u5178\u578B\u95EE\u9898" aria-hidden="true">#</a> JS\u6570\u5B57\u7CBE\u5EA6\u4E22\u5931\u7684\u4E00\u4E9B\u5178\u578B\u95EE\u9898</h1><ul><li>\u4E24\u4E2A\u7B80\u5355\u7684\u6D6E\u70B9\u6570\u76F8\u52A0</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token number">0.1</span> <span class="token operator">+</span> <span class="token number">0.2</span> <span class="token operator">!=</span> <span class="token number">0.3</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
<span class="token comment">// 0.30000000000000004</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u5927\u6574\u6570\u8FD0\u7B97</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token number">9999999999999999</span> <span class="token operator">==</span> <span class="token number">10000000000000001</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>16 \u4F4D\u548C 17 \u4F4D\u6570\u7ADF\u7136\u76F8\u7B49\u3002</p><p>\u53C8\u5982</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> x <span class="token operator">=</span> <span class="token number">9007199254740992</span><span class="token punctuation">;</span>
x <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">==</span> x<span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>toFixed \u4E0D\u4F1A\u56DB\u820D\u4E94\u5165\uFF08Chrome\uFF09</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">(</span><span class="token number">1.335</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1.33</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="js-\u6570\u5B57\u4E22\u5931\u7CBE\u5EA6\u7684\u539F\u56E0" tabindex="-1"><a class="header-anchor" href="#js-\u6570\u5B57\u4E22\u5931\u7CBE\u5EA6\u7684\u539F\u56E0" aria-hidden="true">#</a> JS \u6570\u5B57\u4E22\u5931\u7CBE\u5EA6\u7684\u539F\u56E0</h2><p>\u8BA1\u7B97\u673A\u7684\u4E8C\u8FDB\u5236\u5B9E\u73B0\u548C\u4F4D\u6570\u9650\u5236\u6709\u4E9B\u6570\u65E0\u6CD5\u6709\u9650\u8868\u793A\u3002\u5C31\u50CF\u4E00\u4E9B\u65E0\u7406\u6570\u4E0D\u80FD\u6709\u9650\u8868\u793A\uFF0C\u5982 \u5706\u5468\u7387 3.1415926...\uFF0C1.3333... \u7B49\u3002JS \u9075\u5FAA IEEE 754 \u89C4\u8303\uFF0C\u91C7\u7528\u53CC\u7CBE\u5EA6\u5B58\u50A8\uFF08double precision\uFF09\uFF0C\u5360\u7528 64 bit\u3002\u5982\u56FE</p><ul><li>\u610F\u4E49 <ul><li>1 \u4F4D\u7528\u6765\u8868\u793A\u7B26\u53F7\u4F4D</li><li>11 \u4F4D\u7528\u6765\u8868\u793A\u6307\u6570</li><li>52 \u4F4D\u8868\u793A\u5C3E\u6570</li></ul></li></ul><p>\u6D6E\u70B9\u6570\uFF0C\u6BD4\u5982</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>0.1 &gt;&gt; 0.0001 1001 1001 1001\u2026\uFF081001\u65E0\u9650\u5FAA\u73AF\uFF09
0.2 &gt;&gt; 0.0011 0011 0011 0011\u2026\uFF080011\u65E0\u9650\u5FAA\u73AF\uFF09
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6B64\u65F6\u53EA\u80FD\u6A21\u4EFF\u5341\u8FDB\u5236\u8FDB\u884C\u56DB\u820D\u4E94\u5165\u4E86\uFF0C\u4F46\u662F\u4E8C\u8FDB\u5236\u53EA\u6709 0 \u548C 1 \u4E24\u4E2A\uFF0C\u4E8E\u662F\u53D8\u4E3A 0 \u820D 1 \u5165\u3002\u8FD9\u5373\u662F\u8BA1\u7B97\u673A\u4E2D\u90E8\u5206\u6D6E\u70B9\u6570\u8FD0\u7B97\u65F6\u51FA\u73B0\u8BEF\u5DEE\uFF0C\u4E22\u5931\u7CBE\u5EA6\u7684\u6839\u672C\u539F\u56E0\u3002</p><p>\u5927\u6574\u6570\u7684\u7CBE\u5EA6\u4E22\u5931\u548C\u6D6E\u70B9\u6570\u672C\u8D28\u4E0A\u662F\u4E00\u6837\u7684\uFF0C\u5C3E\u6570\u4F4D\u6700\u5927\u662F 52 \u4F4D\uFF0C\u56E0\u6B64 JS \u4E2D\u80FD\u7CBE\u51C6\u8868\u793A\u7684\u6700\u5927\u6574\u6570\u662F Math.pow(2, 53)\uFF0C\u5341\u8FDB\u5236\u5373 9007199254740992\u3002</p><p>\u5927\u4E8E 9007199254740992 \u7684\u53EF\u80FD\u4F1A\u4E22\u5931\u7CBE\u5EA6</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>9007199254740992     &gt;&gt; 10000000000000...000 // \u5171\u8BA1 53 \u4E2A 0
9007199254740992 + 1 &gt;&gt; 10000000000000...001 // \u4E2D\u95F4 52 \u4E2A 0
9007199254740992 + 2 &gt;&gt; 10000000000000...010 // \u4E2D\u95F4 51 \u4E2A 0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5B9E\u9645\u4E0A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>9007199254740992 + 1 // \u4E22\u5931
9007199254740992 + 2 // \u672A\u4E22\u5931
9007199254740992 + 3 // \u4E22\u5931
9007199254740992 + 4 // \u672A\u4E22\u5931
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4EE5\u4E0A\uFF0C\u53EF\u4EE5\u77E5\u9053\u770B\u4F3C\u6709\u7A77\u7684\u6570\u5B57, \u5728\u8BA1\u7B97\u673A\u7684\u4E8C\u8FDB\u5236\u8868\u793A\u91CC\u5374\u662F\u65E0\u7A77\u7684\uFF0C\u7531\u4E8E\u5B58\u50A8\u4F4D\u6570\u9650\u5236\u56E0\u6B64\u5B58\u5728\u201C\u820D\u53BB\u201D\uFF0C\u7CBE\u5EA6\u4E22\u5931\u5C31\u53D1\u751F\u4E86\u3002</p><h2 id="\u89E3\u51B3\u65B9\u6848" tabindex="-1"><a class="header-anchor" href="#\u89E3\u51B3\u65B9\u6848" aria-hidden="true">#</a> \u89E3\u51B3\u65B9\u6848</h2><p>\u5BF9\u4E8E\u6574\u6570\uFF0C\u524D\u7AEF\u51FA\u73B0\u95EE\u9898\u7684\u51E0\u7387\u53EF\u80FD\u6BD4\u8F83\u4F4E\uFF0C\u6BD5\u7ADF\u5F88\u5C11\u6709\u4E1A\u52A1\u9700\u8981\u9700\u8981\u7528\u5230\u8D85\u5927\u6574\u6570\uFF0C\u53EA\u8981\u8FD0\u7B97\u7ED3\u679C\u4E0D\u8D85\u8FC7 Math.pow(2, 53) \u5C31\u4E0D\u4F1A\u4E22\u5931\u7CBE\u5EA6\u3002</p><p>\u5BF9\u4E8E\u5C0F\u6570\uFF0C\u524D\u7AEF\u51FA\u73B0\u95EE\u9898\u7684\u51E0\u7387\u8FD8\u662F\u5F88\u591A\u7684\uFF0C\u5C24\u5176\u5728\u4E00\u4E9B\u7535\u5546\u7F51\u7AD9\u6D89\u53CA\u5230\u91D1\u989D\u7B49\u6570\u636E\u3002\u89E3\u51B3\u65B9\u5F0F\uFF1A\u628A\u5C0F\u6570\u653E\u5230\u4F4D\u6574\u6570\uFF08\u4E58\u500D\u6570\uFF09\uFF0C\u518D\u7F29\u5C0F\u56DE\u539F\u6765\u500D\u6570\uFF08\u9664\u500D\u6570\uFF09</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 0.1 + 0.2</span>
<span class="token punctuation">(</span><span class="token number">0.1</span> <span class="token operator">*</span> <span class="token number">10</span> <span class="token operator">+</span> <span class="token number">0.2</span> <span class="token operator">*</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">10</span> <span class="token operator">==</span> <span class="token number">0.3</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4EE5\u4E0B\u662F\u6211\u5199\u4E86\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u5BF9\u5C0F\u6570\u7684\u52A0\u51CF\u4E58\u9664\u8FD0\u7B97\u4E22\u5931\u7CBE\u5EA6\u505A\u4E86\u5C4F\u853D\u3002\u5F53\u7136\u8F6C\u6362\u540E\u7684\u6574\u6570\u4F9D\u7136\u4E0D\u80FD\u8D85\u8FC7 9007199254740992\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * floatObj \u5305\u542B\u52A0\u51CF\u4E58\u9664\u56DB\u4E2A\u65B9\u6CD5\uFF0C\u80FD\u786E\u4FDD\u6D6E\u70B9\u6570\u8FD0\u7B97\u4E0D\u4E22\u5931\u7CBE\u5EA6
 *
 * \u6211\u4EEC\u77E5\u9053\u8BA1\u7B97\u673A\u7F16\u7A0B\u8BED\u8A00\u91CC\u6D6E\u70B9\u6570\u8BA1\u7B97\u4F1A\u5B58\u5728\u7CBE\u5EA6\u4E22\u5931\u95EE\u9898\uFF08\u6216\u79F0\u820D\u5165\u8BEF\u5DEE\uFF09\uFF0C\u5176\u6839\u672C\u539F\u56E0\u662F\u4E8C\u8FDB\u5236\u548C\u5B9E\u73B0\u4F4D\u6570\u9650\u5236\u6709\u4E9B\u6570\u65E0\u6CD5\u6709\u9650\u8868\u793A
 * \u4EE5\u4E0B\u662F\u5341\u8FDB\u5236\u5C0F\u6570\u5BF9\u5E94\u7684\u4E8C\u8FDB\u5236\u8868\u793A
 *     0.1 &gt;&gt; 0.0001 1001 1001 1001\u2026\uFF081001\u65E0\u9650\u5FAA\u73AF\uFF09
 *     0.2 &gt;&gt; 0.0011 0011 0011 0011\u2026\uFF080011\u65E0\u9650\u5FAA\u73AF\uFF09
 * \u8BA1\u7B97\u673A\u91CC\u6BCF\u79CD\u6570\u636E\u7C7B\u578B\u7684\u5B58\u50A8\u662F\u4E00\u4E2A\u6709\u9650\u5BBD\u5EA6\uFF0C\u6BD4\u5982 JavaScript \u4F7F\u7528 64 \u4F4D\u5B58\u50A8\u6570\u5B57\u7C7B\u578B\uFF0C\u56E0\u6B64\u8D85\u51FA\u7684\u4F1A\u820D\u53BB\u3002\u820D\u53BB\u7684\u90E8\u5206\u5C31\u662F\u7CBE\u5EA6\u4E22\u5931\u7684\u90E8\u5206\u3002
 *
 * ** method **
 * add / subtract / multiply /divide
 *
 * ** explame **
 * 0.1 + 0.2 == 0.30000000000000004 \uFF08\u591A\u4E86 0.00000000000004\uFF09
 * 0.2 + 0.4 == 0.6000000000000001 \uFF08\u591A\u4E86 0.0000000000001\uFF09
 * 19.9 * 100 == 1989.9999999999998 \uFF08\u5C11\u4E86 0.0000000000002\uFF09
 *
 * floatObj.add(0.1, 0.2) &gt;&gt; 0.3
 * floatObj.multiply(19.9, 100) &gt;&gt; 1990
 *
 */</span>
<span class="token keyword">var</span> floatObj <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">/*
     * \u5224\u65ADobj\u662F\u5426\u4E3A\u4E00\u4E2A\u6574\u6570
     */</span>
    <span class="token keyword">function</span> <span class="token function">isInteger</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token operator">===</span> obj<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">/*
     * \u5C06\u4E00\u4E2A\u6D6E\u70B9\u6570\u8F6C\u6210\u6574\u6570\uFF0C\u8FD4\u56DE\u6574\u6570\u548C\u500D\u6570\u3002\u5982 3.14 &gt;&gt; 314\uFF0C\u500D\u6570\u662F 100
     * @param floatNum {number} \u5C0F\u6570
     * @return {object}
     *   {times:100, num: 314}
     */</span>
    <span class="token keyword">function</span> <span class="token function">toInteger</span><span class="token punctuation">(</span><span class="token parameter">floatNum</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> ret <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">times</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">num</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token keyword">var</span> isNegative <span class="token operator">=</span> floatNum <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isInteger</span><span class="token punctuation">(</span>floatNum<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            ret<span class="token punctuation">.</span>num <span class="token operator">=</span> floatNum<span class="token punctuation">;</span>
            <span class="token keyword">return</span> ret<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">var</span> strfi <span class="token operator">=</span> floatNum <span class="token operator">+</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">var</span> dotPos <span class="token operator">=</span> strfi<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&quot;.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">var</span> len <span class="token operator">=</span> strfi<span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span>dotPos <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>
        <span class="token keyword">var</span> times <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> len<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">var</span> intNum <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>floatNum<span class="token punctuation">)</span> <span class="token operator">*</span> times <span class="token operator">+</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        ret<span class="token punctuation">.</span>times <span class="token operator">=</span> times<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>isNegative<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            intNum <span class="token operator">=</span> <span class="token operator">-</span>intNum<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        ret<span class="token punctuation">.</span>num <span class="token operator">=</span> intNum<span class="token punctuation">;</span>
        <span class="token keyword">return</span> ret<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">/*
     * \u6838\u5FC3\u65B9\u6CD5\uFF0C\u5B9E\u73B0\u52A0\u51CF\u4E58\u9664\u8FD0\u7B97\uFF0C\u786E\u4FDD\u4E0D\u4E22\u5931\u7CBE\u5EA6
     * \u601D\u8DEF\uFF1A\u628A\u5C0F\u6570\u653E\u5927\u4E3A\u6574\u6570\uFF08\u4E58\uFF09\uFF0C\u8FDB\u884C\u7B97\u672F\u8FD0\u7B97\uFF0C\u518D\u7F29\u5C0F\u4E3A\u5C0F\u6570\uFF08\u9664\uFF09
     *
     * @param a {number} \u8FD0\u7B97\u65701
     * @param b {number} \u8FD0\u7B97\u65702
     * @param digits {number} \u7CBE\u5EA6\uFF0C\u4FDD\u7559\u7684\u5C0F\u6570\u70B9\u6570\uFF0C\u6BD4\u5982 2, \u5373\u4FDD\u7559\u4E3A\u4E24\u4F4D\u5C0F\u6570
     * @param op {string} \u8FD0\u7B97\u7C7B\u578B\uFF0C\u6709\u52A0\u51CF\u4E58\u9664\uFF08add/subtract/multiply/divide\uFF09
     *
     */</span>
    <span class="token keyword">function</span> <span class="token function">operation</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> digits<span class="token punctuation">,</span> op</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> o1 <span class="token operator">=</span> <span class="token function">toInteger</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">var</span> o2 <span class="token operator">=</span> <span class="token function">toInteger</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">var</span> n1 <span class="token operator">=</span> o1<span class="token punctuation">.</span>num<span class="token punctuation">;</span>
        <span class="token keyword">var</span> n2 <span class="token operator">=</span> o2<span class="token punctuation">.</span>num<span class="token punctuation">;</span>
        <span class="token keyword">var</span> t1 <span class="token operator">=</span> o1<span class="token punctuation">.</span>times<span class="token punctuation">;</span>
        <span class="token keyword">var</span> t2 <span class="token operator">=</span> o2<span class="token punctuation">.</span>times<span class="token punctuation">;</span>
        <span class="token keyword">var</span> max <span class="token operator">=</span> t1 <span class="token operator">&gt;</span> t2 <span class="token operator">?</span> t1 <span class="token operator">:</span> t2<span class="token punctuation">;</span>
        <span class="token keyword">var</span> result <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token keyword">switch</span> <span class="token punctuation">(</span>op<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">case</span> <span class="token string">&quot;add&quot;</span><span class="token operator">:</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>t1 <span class="token operator">===</span> t2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">// \u4E24\u4E2A\u5C0F\u6570\u4F4D\u6570\u76F8\u540C</span>
                    result <span class="token operator">=</span> n1 <span class="token operator">+</span> n2<span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>t1 <span class="token operator">&gt;</span> t2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">// o1 \u5C0F\u6570\u4F4D \u5927\u4E8E o2</span>
                    result <span class="token operator">=</span> n1 <span class="token operator">+</span> n2 <span class="token operator">*</span> <span class="token punctuation">(</span>t1 <span class="token operator">/</span> t2<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    <span class="token comment">// o1 \u5C0F\u6570\u4F4D \u5C0F\u4E8E o2</span>
                    result <span class="token operator">=</span> n1 <span class="token operator">*</span> <span class="token punctuation">(</span>t2 <span class="token operator">/</span> t1<span class="token punctuation">)</span> <span class="token operator">+</span> n2<span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">return</span> result <span class="token operator">/</span> max<span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token string">&quot;subtract&quot;</span><span class="token operator">:</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>t1 <span class="token operator">===</span> t2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    result <span class="token operator">=</span> n1 <span class="token operator">-</span> n2<span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>t1 <span class="token operator">&gt;</span> t2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    result <span class="token operator">=</span> n1 <span class="token operator">-</span> n2 <span class="token operator">*</span> <span class="token punctuation">(</span>t1 <span class="token operator">/</span> t2<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    result <span class="token operator">=</span> n1 <span class="token operator">*</span> <span class="token punctuation">(</span>t2 <span class="token operator">/</span> t1<span class="token punctuation">)</span> <span class="token operator">-</span> n2<span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">return</span> result <span class="token operator">/</span> max<span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token string">&quot;multiply&quot;</span><span class="token operator">:</span>
                result <span class="token operator">=</span> <span class="token punctuation">(</span>n1 <span class="token operator">*</span> n2<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token punctuation">(</span>t1 <span class="token operator">*</span> t2<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> result<span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token string">&quot;divide&quot;</span><span class="token operator">:</span>
                result <span class="token operator">=</span> <span class="token punctuation">(</span>n1 <span class="token operator">/</span> n2<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>t2 <span class="token operator">/</span> t1<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> result<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u52A0\u51CF\u4E58\u9664\u7684\u56DB\u4E2A\u63A5\u53E3</span>
    <span class="token keyword">function</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> digits</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">operation</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> digits<span class="token punctuation">,</span> <span class="token string">&quot;add&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">function</span> <span class="token function">subtract</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> digits</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">operation</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> digits<span class="token punctuation">,</span> <span class="token string">&quot;subtract&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">function</span> <span class="token function">multiply</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> digits</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">operation</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> digits<span class="token punctuation">,</span> <span class="token string">&quot;multiply&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">function</span> <span class="token function">divide</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> digits</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">operation</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> digits<span class="token punctuation">,</span> <span class="token string">&quot;divide&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// exports</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">add</span><span class="token operator">:</span> add<span class="token punctuation">,</span>
        <span class="token literal-property property">subtract</span><span class="token operator">:</span> subtract<span class="token punctuation">,</span>
        <span class="token literal-property property">multiply</span><span class="token operator">:</span> multiply<span class="token punctuation">,</span>
        <span class="token literal-property property">divide</span><span class="token operator">:</span> divide<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>toFixed \u7684\u4FEE\u590D\u5982\u4E0B</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// toFixed \u4FEE\u590D</span>
<span class="token keyword">function</span> <span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token parameter">num<span class="token punctuation">,</span> s</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> times <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> s<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> des <span class="token operator">=</span> num <span class="token operator">*</span> times <span class="token operator">+</span> <span class="token number">0.5</span><span class="token punctuation">;</span>
    des <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>des<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">/</span> times<span class="token punctuation">;</span>
    <span class="token keyword">return</span> des <span class="token operator">+</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,30),o=[e];function c(i,l){return s(),a("div",null,o)}const r=n(p,[["render",c],["__file","57.html.vue"]]);export{r as default};
