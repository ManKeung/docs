import{_ as p,r as e,o,c,b as s,d as n,e as i,a}from"./app.e505eaa1.js";const l={},u=a(`<h1 id="typescript\u53C8\u51FA\u65B0\u5173\u952E\u5B57\u4E86" tabindex="-1"><a class="header-anchor" href="#typescript\u53C8\u51FA\u65B0\u5173\u952E\u5B57\u4E86" aria-hidden="true">#</a> TypeScript\u53C8\u51FA\u65B0\u5173\u952E\u5B57\u4E86\uFF1F</h1><p>TypeScript 5.2\u5C06\u5F15\u5165\u4E00\u4E2A\u65B0\u7684\u5173\u952E\u5B57\uFF1Ausing\u3002\u5F53\u5B83\u79BB\u5F00\u4F5C\u7528\u57DF\u65F6\uFF0C\u4F60\u53EF\u4EE5\u7528Symbol.dispose\u51FD\u6570\u6765\u5904\u7F6E\u4EFB\u4F55\u4E1C\u897F\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token function-variable function">getResource</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>dispose<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Hooray!&#39;</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  using resource <span class="token operator">=</span> <span class="token function">getResource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token comment">// &#39;Hooray!&#39; logged to console</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),r={href:"https://github.com/tc39/proposal-explicit-resource-management",target:"_blank",rel:"noopener noreferrer"},d=a(`<p>using\u5C06\u5BF9\u7BA1\u7406\u6587\u4EF6\u53E5\u67C4\u3001\u6570\u636E\u5E93\u8FDE\u63A5\u7B49\u8D44\u6E90\u975E\u5E38\u6709\u7528\u3002</p><h2 id="symbol-dispose" tabindex="-1"><a class="header-anchor" href="#symbol-dispose" aria-hidden="true">#</a> Symbol.dispose</h2><p>Symbol.dispose\u662FJavaScript\u4E2D\u4E00\u4E2A\u65B0\u7684\u5168\u5C40symbol\u3002\u4EFB\u4F55\u5177\u6709\u5206\u914D\u7ED9Symbol.dispose\u51FD\u6570\u7684\u4E1C\u897F\u90FD\u5C06\u88AB\u89C6\u4E3A&quot;\u8D44\u6E90&quot;\uFF1A\u4E5F\u5C31\u662F\u5177\u6709\u7279\u5B9A\u751F\u547D\u5468\u671F\u7684\u5BF9\u8C61\u3002\u5E76\u4E14\u8BE5\u8D44\u6E90\u53EF\u4EE5\u4F7F\u7528using\u5173\u952E\u5B57\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> resource <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>dispose<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Hooray!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="await-using" tabindex="-1"><a class="header-anchor" href="#await-using" aria-hidden="true">#</a> await using</h1><p>\u4F60\u4E5F\u53EF\u4EE5\u4F7F\u7528Symbol.asyncDispose\u548Cawait\u6765\u5904\u7406\u90A3\u4E9B\u9700\u8981\u5F02\u6B65\u5904\u7F6E\u7684\u8D44\u6E90\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> <span class="token function-variable function">getResource</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>asyncDispose<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">await</span> <span class="token function">someAsyncFunc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">{</span>
  <span class="token keyword">await</span> using resource <span class="token operator">=</span> <span class="token function">getResource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u5C06\u5728\u7EE7\u7EED\u4E4B\u524D\u7B49\u5F85Symbol.asyncDispose\u51FD\u6570\u3002</p><p>\u8FD9\u5BF9\u6570\u636E\u5E93\u8FDE\u63A5\u7B49\u8D44\u6E90\u6765\u8BF4\u5F88\u6709\u7528\uFF0C\u4F60\u8981\u786E\u4FDD\u5728\u7A0B\u5E8F\u7EE7\u7EED\u524D\u5173\u95ED\u8FDE\u63A5\u3002</p><h2 id="\u4F7F\u7528\u6848\u4F8B" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528\u6848\u4F8B" aria-hidden="true">#</a> \u4F7F\u7528\u6848\u4F8B</h2><h3 id="\u6587\u4EF6\u53E5\u67C4" tabindex="-1"><a class="header-anchor" href="#\u6587\u4EF6\u53E5\u67C4" aria-hidden="true">#</a> \u6587\u4EF6\u53E5\u67C4</h3><p>\u901A\u8FC7\u8282\u70B9\u4E2D\u7684\u6587\u4EF6\u5904\u7406\u7A0B\u5E8F\u8BBF\u95EE\u6587\u4EF6\u7CFB\u7EDF\uFF0C\u4F7F\u7528using\u53EF\u80FD\u4F1A\u5BB9\u6613\u5F97\u591A\u3002</p><p>\u4E0D\u4F7F\u7528using\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> open <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;node:fs/promises&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> filehandle<span class="token punctuation">;</span>
<span class="token keyword">try</span> <span class="token punctuation">{</span>
  filehandle <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">open</span><span class="token punctuation">(</span><span class="token string">&quot;thefile.txt&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;r&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
  <span class="token keyword">await</span> filehandle<span class="token operator">?.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>\u4F7F\u7528using\uFF1A

<span class="token keyword">import</span> <span class="token punctuation">{</span> open <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;node:fs/promises&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">getFileHandle</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span>path<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> filehandle <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">open</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> <span class="token string">&quot;r&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    filehandle<span class="token punctuation">,</span>
    <span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>asyncDispose<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">await</span> filehandle<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">{</span>
  <span class="token keyword">await</span> using file <span class="token operator">=</span> <span class="token function">getFileHandle</span><span class="token punctuation">(</span><span class="token string">&quot;thefile.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// Do stuff with file.filehandle</span>
<span class="token punctuation">}</span> <span class="token comment">// Automatically disposed!</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6570\u636E\u5E93\u8FDE\u63A5" tabindex="-1"><a class="header-anchor" href="#\u6570\u636E\u5E93\u8FDE\u63A5" aria-hidden="true">#</a> \u6570\u636E\u5E93\u8FDE\u63A5</h3><p>\u7BA1\u7406\u6570\u636E\u5E93\u8FDE\u63A5\u662F\u5728C#\u4E2D\u4F7F\u7528using\u7684\u4E00\u4E2A\u5E38\u89C1\u7528\u4F8B\u3002</p><p>\u4E0D\u4F7F\u7528using\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> connection <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getDb</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">try</span> <span class="token punctuation">{</span>
  <span class="token comment">// Do stuff with connection</span>
<span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
  <span class="token keyword">await</span> connection<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F7F\u7528using\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> <span class="token function-variable function">getConnection</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> connection <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getDb</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    connection<span class="token punctuation">,</span>
    <span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>asyncDispose<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">await</span> connection<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">{</span>
  <span class="token keyword">await</span> using <span class="token punctuation">{</span> connection <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// Do stuff with connection</span>
<span class="token punctuation">}</span> <span class="token comment">// Automatically closed!</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u603B\u7ED3" tabindex="-1"><a class="header-anchor" href="#\u603B\u7ED3" aria-hidden="true">#</a> \u603B\u7ED3</h2><p>\u672C\u6587\u7B80\u8981\u4ECB\u7ECD\u4E86TypeScript5.2\u4E2D\u5F15\u5165\u7684\u65B0\u5173\u952E\u5B57using\uFF0C\u5B83\u7684\u51FA\u73B0\u53EF\u4EE5\u5F88\u597D\u7684\u548CSymbol.dispose\u642D\u914D\u4F7F\u7528\u3002\u6709\u4E86\u5B83\u6211\u4EEC\u4FBF\u4E0D\u9700\u8981\u5728try\u2026catch\u8BED\u53E5\u4E2D\u8FDB\u884C\u6570\u636E\u5E93\u7684\u5173\u95ED\uFF0C\u8FD9\u5BF9\u7BA1\u7406\u6587\u4EF6\u53E5\u67C4\u3001\u6570\u636E\u5E93\u8FDE\u63A5\u7B49\u8D44\u6E90\u65F6\u975E\u5E38\u6709\u7528\u3002</p>`,23);function k(v,m){const t=e("ExternalLinkIcon");return o(),c("div",null,[u,s("p",null,[n("\u8FD9\u662F\u57FA\u4E8E"),s("a",r,[n("TC39\u63D0\u8BAE"),i(t)]),n("\uFF0C\u8BE5\u63D0\u8BAE\u6700\u8FD1\u8FBE\u5230\u4E86\u7B2C\u4E09\u9636\u6BB5\uFF0C\u8868\u660E\u5B83\u5373\u5C06\u8FDB\u5165JavaScript\u3002")]),d])}const y=p(l,[["render",k],["__file","14.html.vue"]]);export{y as default};
