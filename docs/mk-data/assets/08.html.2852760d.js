import{_ as p,r as o,o as c,c as l,b as n,d as s,e as t,a as e}from"./app.211258b5.js";const i={},u=e('<h1 id="\u6709\u7528\u7684\u5185\u7F6E-node-js-apis-\u603B\u7ED3" tabindex="-1"><a class="header-anchor" href="#\u6709\u7528\u7684\u5185\u7F6E-node-js-apis-\u603B\u7ED3" aria-hidden="true">#</a> \u6709\u7528\u7684\u5185\u7F6E Node.js APIs \u603B\u7ED3</h1><h2 id="\u524D\u8A00" tabindex="-1"><a class="header-anchor" href="#\u524D\u8A00" aria-hidden="true">#</a> \u524D\u8A00</h2><p>\u5728\u6784\u5EFA\u4F60\u7684\u7B2C\u4E00\u4E2A Node.js \u5E94\u7528\u7A0B\u5E8F\u65F6\uFF0C\u4E86\u89E3 node \u5F00\u7BB1\u5373\u7528\u7684\u5B9E\u7528\u5DE5\u5177\u548C API \u662F\u5F88\u6709\u5E2E\u52A9\u7684\uFF0C\u53EF\u4EE5\u5E2E\u52A9\u89E3\u51B3\u5E38\u89C1\u7684\u7528\u4F8B\u548C\u5F00\u53D1\u9700\u6C42\u3002</p><h2 id="\u6709\u7528\u7684-node-js-apis" tabindex="-1"><a class="header-anchor" href="#\u6709\u7528\u7684-node-js-apis" aria-hidden="true">#</a> \u6709\u7528\u7684 Node.js APIs</h2><ul><li>\u300CProcess\u300D\uFF1A\u68C0\u7D22\u6709\u5173\u73AF\u5883\u53D8\u91CF\u3001\u53C2\u6570\u3001CPU \u4F7F\u7528\u60C5\u51B5\u548C\u62A5\u544A\u7684\u4FE1\u606F\u3002</li><li>\u300COS\u300D\uFF1A\u68C0\u7D22 Node \u6B63\u5728\u8FD0\u884C\u7684\u64CD\u4F5C\u7CFB\u7EDF\u548C\u7CFB\u7EDF\u76F8\u5173\u4FE1\u606F\u3002\u6BD4\u5982 CPU\u3001\u64CD\u4F5C\u7CFB\u7EDF\u7248\u672C\u3001\u4E3B\u76EE\u5F55\u7B49\u7B49\u3002</li><li>\u300CUtil\u300D\uFF1A\u6709\u7528\u548C\u5E38\u89C1\u65B9\u6CD5\u7684\u96C6\u5408\u3002\u7528\u4E8E\u5E2E\u52A9\u89E3\u7801\u6587\u672C\u3001\u7C7B\u578B\u68C0\u67E5\u548C\u5BF9\u6BD4\u5BF9\u8C61\u3002</li><li>\u300CURL\u300D\uFF1A\u8F7B\u677E\u521B\u5EFA\u548C\u89E3\u6790 URL\u3002</li><li>\u300CFile System API\u300D\uFF1A\u4E0E\u6587\u4EF6\u7CFB\u7EDF\u4EA4\u4E92\u3002\u7528\u4E8E\u521B\u5EFA\u3001\u8BFB\u53D6\u3001\u66F4\u65B0\u4EE5\u53CA\u5220\u9664\u6587\u4EF6\u3001\u76EE\u5F55\u548C\u6743\u9650\u3002</li><li>\u300CEvents\u300D\uFF1A\u7528\u4E8E\u89E6\u53D1\u548C\u8BA2\u9605 Node.js \u4E2D\u7684\u4E8B\u4EF6\u3002\u5176\u5DE5\u4F5C\u539F\u7406\u4E0E\u5BA2\u6237\u7AEF\u4E8B\u4EF6\u76D1\u542C\u5668\u7C7B\u4F3C\u3002</li><li>\u300CStreams\u300D\uFF1A\u7528\u4E8E\u5728\u66F4\u5C0F\u548C\u66F4\u5BB9\u6613\u7BA1\u7406\u7684\u5757\u4E2D\u5904\u7406\u5927\u91CF\u6570\u636E\uFF0C\u4EE5\u907F\u514D\u5185\u5B58\u95EE\u9898\u3002</li><li>\u300CWorker Threads\u300D\uFF1A\u7528\u6765\u5206\u79BB\u4E0D\u540C\u7EBF\u7A0B\u4E0A\u7684\u51FD\u6570\u6267\u884C\uFF0C\u4EE5\u907F\u514D\u74F6\u9888\u3002\u5BF9\u4E8E CPU \u5BC6\u96C6\u578B\u7684 JavaScript \u64CD\u4F5C\u5F88\u6709\u7528\u3002</li><li>\u300CChild Processes\u300D\uFF1A\u5141\u8BB8\u4F60\u8FD0\u884C\u5B50\u8FDB\u7A0B\uFF0C\u4F60\u53EF\u4EE5\u76D1\u63A7\u5E76\u5728\u5FC5\u8981\u65F6\u7EC8\u6B62\u5B50\u8FDB\u7A0B\u3002</li><li>\u300CClusters\u300D\uFF1A\u5141\u8BB8\u4F60\u8DE8\u6838 fork \u4EFB\u4F55\u6570\u91CF\u7684\u76F8\u540C\u8FDB\u7A0B\uFF0C\u4EE5\u66F4\u6709\u6548\u5730\u5904\u7406\u8D1F\u8F7D\u3002</li></ul><h2 id="process" tabindex="-1"><a class="header-anchor" href="#process" aria-hidden="true">#</a> Process</h2>',6),r={href:"https://nodejs.org/dist/latest/docs/api/process.html",target:"_blank",rel:"noopener noreferrer"},k=e(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> process <span class="token keyword">from</span> <span class="token string">&quot;process&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,1),d=e("<li>process.argv\uFF1A\u8FD4\u56DE\u4E00\u4E2A\u6570\u7EC4\u3002\u8BE5\u6570\u7EC4\u7684\u524D\u4E24\u4E2A\u5143\u7D20\u662F Node.js \u7684\u53EF\u6267\u884C\u8DEF\u5F84\u548C\u811A\u672C\u540D\u79F0\u3002\u7D22\u5F15\u4E3A 2 \u7684\u6570\u7EC4\u9879\u662F\u4F20\u9012\u7684\u7B2C\u4E00\u4E2A\u53C2\u6570\u3002</li><li>p<wbr>rocess.env\uFF1A\u8FD4\u56DE\u5305\u542B\u73AF\u5883\u540D\u79F0\u4E0E\u503C\u7684\u952E\u503C\u5BF9\u5BF9\u8C61\u3002\u6BD4\u5982 p<wbr>rocess.env.NODE_ENV\u3002</li><li>process.cwd()\uFF1A\u8FD4\u56DE\u5F53\u524D\u7684\u5DE5\u4F5C\u76EE\u5F55\u3002</li><li>process.platform\uFF1A\u8FD4\u56DE\u4E00\u4E2A\u8BC6\u522B\u64CD\u4F5C\u7CFB\u7EDF\u7684\u5B57\u7B26\u4E32\uFF1A&#39;aix&#39;\uFF0C&#39;darwin&#39; (macOS)\uFF0C&#39;freebsd&#39;\uFF0C&#39;linux&#39;\uFF0C&#39;openbsd&#39;\uFF0C&#39;sunos&#39;\uFF0C\u6216\u8005&#39;win32&#39; (Windows)\u3002</li><li>process.uptime()\uFF1A\u8FD4\u56DE Node.js \u8FDB\u7A0B\u5DF2\u8FD0\u884C\u7684\u79D2\u6570\u3002</li><li>process.cpuUsage()\uFF1A\u8FD4\u56DE\u5F53\u524D\u8FDB\u7A0B\u7684\u7528\u6237\u548C\u7CFB\u7EDF CPU \u65F6\u95F4\u7684\u4F7F\u7528\u60C5\u51B5--\u4F8B\u5982{ user: 12345, system: 9876 }\u3002\u5C06\u8BE5\u5BF9\u8C61\u4F20\u7ED9\u8BE5\u65B9\u6CD5\uFF0C\u4EE5\u83B7\u5F97\u4E00\u4E2A\u76F8\u5BF9\u7684\u8BFB\u6570\u3002</li><li>process.memoryUsage()\uFF1A\u8FD4\u56DE\u4E00\u4E2A\u4EE5\u5B57\u8282\u4E3A\u5355\u4F4D\u63CF\u8FF0\u5185\u5B58\u4F7F\u7528\u60C5\u51B5\u7684\u5BF9\u8C61\u3002</li><li>process.version\uFF1A\u8FD4\u56DE Node.js \u7248\u672C\u7684\u5B57\u7B26\u4E32\u3002\u6BD4\u5982 18.0.0\u3002</li>",8),m={href:"https://nodejs.org/dist/latest/docs/api/report.html",target:"_blank",rel:"noopener noreferrer"},v={href:"https://nodejs.org/dist/latest/docs/api/process.html#exit-codes",target:"_blank",rel:"noopener noreferrer"},g=n("h2",{id:"os",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#os","aria-hidden":"true"},"#"),s(" OS")],-1),b={href:"https://nodejs.org/dist/latest/docs/api/os.html",target:"_blank",rel:"noopener noreferrer"},h=n("ul",null,[n("li",null,"os.cpus()\uFF1A\u8FD4\u56DE\u4E00\u4E2A\u5305\u542B\u6BCF\u4E2A\u903B\u8F91 CPU \u6838\u4FE1\u606F\u7684\u5BF9\u8C61\u6570\u7EC4\u3002Clusters \u90E8\u5206\u5F15\u7528 os.cpus()\u6765 fork \u8FDB\u7A0B\u3002\u5728\u4E00\u4E2A 16 \u6838 CPU \u4E2D\uFF0C\u4F60\u4F1A\u6709 16 \u4E2A Node.js \u5E94\u7528\u7A0B\u5E8F\u7684\u5B9E\u4F8B\u5728\u8FD0\u884C\u4EE5\u63D0\u9AD8\u6027\u80FD\u3002"),n("li",null,"os.hostname()\uFF1A\u64CD\u4F5C\u7CFB\u7EDF\u4E3B\u673A\u540D\u3002"),n("li",null,"os.version()\uFF1A\u6807\u8BC6\u64CD\u4F5C\u7CFB\u7EDF\u5185\u6838\u7248\u672C\u7684\u5B57\u7B26\u4E32\u3002"),n("li",null,"os.homedir()\uFF1A\u7528\u6237\u4E3B\u76EE\u5F55\u7684\u5B8C\u6574\u8DEF\u5F84\u3002"),n("li",null,"os.tmpdir()\uFF1A\u64CD\u4F5C\u7CFB\u7EDF\u9ED8\u8BA4\u4E34\u65F6\u6587\u4EF6\u76EE\u5F55\u7684\u5B8C\u6574\u8DEF\u5F84\u3002"),n("li",null,"os.uptime()\uFF1A\u64CD\u4F5C\u7CFB\u7EDF\u5DF2\u8FD0\u884C\u7684\u79D2\u6570\u3002")],-1),f=n("h2",{id:"util",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#util","aria-hidden":"true"},"#"),s(" Util")],-1),w={href:"https://nodejs.org/dist/latest/docs/api/util.html",target:"_blank",rel:"noopener noreferrer"},y={href:"https://nodejs.org/dist/latest/docs/api/util.html#utilpromisifyoriginal",target:"_blank",rel:"noopener noreferrer"},j=n("li",null,"util.callbackify(function)\uFF1A\u63A5\u6536\u4E00\u4E2A\u8FD4\u56DE promise \u7684\u51FD\u6570\uFF0C\u5E76\u8FD4\u56DE\u4E00\u4E2A\u57FA\u4E8E\u56DE\u8C03\u7684\u51FD\u6570\u3002",-1),_=n("li",null,"util.isDeepStrictEqual(object1, object2)\uFF1A\u5F53\u4E24\u4E2A\u5BF9\u8C61\u4E25\u683C\u76F8\u7B49\uFF08\u6240\u6709\u5B50\u5C5E\u6027\u5FC5\u987B\u5339\u914D\uFF09\u65F6\u8FD4\u56DE true\u3002",-1),x={href:"https://en.wikipedia.org/wiki/Printf_format_string",target:"_blank",rel:"noopener noreferrer"},q=n("li",null,"util.inspect(object, options)\uFF1A\u8FD4\u56DE\u4E00\u4E2A\u5BF9\u8C61\u7684\u5B57\u7B26\u4E32\u8868\u793A\uFF0C\u7528\u4E8E\u8C03\u8BD5\u3002\u4E0E\u4F7F\u7528 console.dir(object, { depth: null, color: true });\u7C7B\u4F3C\u3002",-1),N=n("li",null,"util.stripVTControlCharacters(str)\uFF1A\u5265\u79BB\u5B57\u7B26\u4E32\u4E2D\u7684 ANSI \u8F6C\u4E49\u4EE3\u7801\u3002",-1),P=n("li",null,"util.types\uFF1A\u4E3A\u5E38\u7528\u7684 JavaScript \u548C Node.js \u503C\u63D0\u4F9B\u7C7B\u578B\u68C0\u67E5\u3002\u6BD4\u5982\uFF1A",-1),I=e(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> util <span class="token keyword">from</span> <span class="token string">&quot;util&quot;</span><span class="token punctuation">;</span>

util<span class="token punctuation">.</span>types<span class="token punctuation">.</span><span class="token function">isDate</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
util<span class="token punctuation">.</span>types<span class="token punctuation">.</span><span class="token function">isMap</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
util<span class="token punctuation">.</span>types<span class="token punctuation">.</span><span class="token function">isRegExp</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">abc</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
util<span class="token punctuation">.</span>types<span class="token punctuation">.</span><span class="token function">isAsyncFunction</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="url" tabindex="-1"><a class="header-anchor" href="#url" aria-hidden="true">#</a> URL</h2>`,2),S={href:"https://nodejs.org/dist/latest/docs/api/url.html",target:"_blank",rel:"noopener noreferrer"},R=e(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">{</span>
  <span class="token literal-property property">href</span><span class="token operator">:</span> <span class="token string">&#39;https://example.org:8000/path/?abc=123#target&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">origin</span><span class="token operator">:</span> <span class="token string">&#39;https://example.org:8000&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">protocol</span><span class="token operator">:</span> <span class="token string">&#39;https:&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">username</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">password</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">host</span><span class="token operator">:</span> <span class="token string">&#39;example.org:8000&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">hostname</span><span class="token operator">:</span> <span class="token string">&#39;example.org&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">port</span><span class="token operator">:</span> <span class="token string">&#39;8000&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">pathname</span><span class="token operator">:</span> <span class="token string">&#39;/path/&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">search</span><span class="token operator">:</span> <span class="token string">&#39;?abc=123&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">searchParams</span><span class="token operator">:</span> URLSearchParams <span class="token punctuation">{</span> <span class="token string">&#39;abc&#39;</span> <span class="token operator">=&gt;</span> <span class="token string">&#39;123&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">hash</span><span class="token operator">:</span> <span class="token string">&#39;#target&#39;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F60\u53EF\u4EE5\u67E5\u770B\u5E76\u66F4\u6539\u4EFB\u610F\u5C5E\u6027\u3002\u6BD4\u5982\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>myURL<span class="token punctuation">.</span>port <span class="token operator">=</span> <span class="token number">8001</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>myURL<span class="token punctuation">.</span>href<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// https://example.org:8001/path/?abc=123#target</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),U={href:"https://nodejs.org/dist/latest/docs/api/url.html#class-urlsearchparams",target:"_blank",rel:"noopener noreferrer"},C=e(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>myURL<span class="token punctuation">.</span>searchParams<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token string">&quot;abc&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
myURL<span class="token punctuation">.</span>searchParams<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;xyz&quot;</span><span class="token punctuation">,</span> <span class="token number">987</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>myURL<span class="token punctuation">.</span>search<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// ?xyz=987</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),E={href:"https://nodejs.org/dist/latest/docs/api/url.html#urlpathtofileurlpath",target:"_blank",rel:"noopener noreferrer"},O={href:"https://nodejs.org/dist/latest/docs/api/url.html#urlfileurltopathurl",target:"_blank",rel:"noopener noreferrer"},A={href:"https://nodejs.org/dist/latest/docs/api/dns.html",target:"_blank",rel:"noopener noreferrer"},F=n("code",null,"dns",-1),T=n("h2",{id:"file-system-api",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#file-system-api","aria-hidden":"true"},"#"),s(" File System API")],-1),D={href:"https://nodejs.org/dist/latest/docs/api/fs.html",target:"_blank",rel:"noopener noreferrer"},L=e(`<p>\u4F60\u5C06\u7ECF\u5E38\u628A fs \u548C path \u7ED3\u5408\u8D77\u6765\u4F7F\u7528\uFF0C\u4EE5\u89E3\u51B3\u4E0D\u540C\u64CD\u4F5C\u7CFB\u7EDF\u4E0A\u7684\u6587\u4EF6\u540D\u95EE\u9898\u3002</p><p>\u4E0B\u9762\u7684\u4F8B\u5B50\u6A21\u5757\u4F7F\u7528 stat \u548C access \u65B9\u6CD5\u8FD4\u56DE\u4E00\u4E2A\u6709\u5173\u6587\u4EF6\u7CFB\u7EDF\u5BF9\u8C61\u7684\u4FE1\u606F\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// fetch file information</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> constants <span class="token keyword">as</span> fsConstants <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;fs&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> access<span class="token punctuation">,</span> stat <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;fs/promises&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">getFileInfo</span><span class="token punctuation">(</span><span class="token parameter">file</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> fileInfo <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> info <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">stat</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>
        fileInfo<span class="token punctuation">.</span>isFile <span class="token operator">=</span> info<span class="token punctuation">.</span><span class="token function">isFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        fileInfo<span class="token punctuation">.</span>isDir <span class="token operator">=</span> info<span class="token punctuation">.</span><span class="token function">isDirectory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token keyword">new</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token keyword">await</span> <span class="token function">access</span><span class="token punctuation">(</span>file<span class="token punctuation">,</span> fsConstants<span class="token punctuation">.</span><span class="token constant">R_OK</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        fileInfo<span class="token punctuation">.</span>canRead <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token keyword">await</span> <span class="token function">access</span><span class="token punctuation">(</span>file<span class="token punctuation">,</span> fsConstants<span class="token punctuation">.</span><span class="token constant">W_OK</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        fileInfo<span class="token punctuation">.</span>canWrite <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

    <span class="token keyword">return</span> fileInfo<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5F53\u4F20\u9012\u4E00\u4E2A\u6587\u4EF6\u540D\u65F6\uFF0C\u8BE5\u51FD\u6570\u8FD4\u56DE\u4E00\u4E2A\u5305\u542B\u8BE5\u6587\u4EF6\u4FE1\u606F\u7684\u5BF9\u8C61\u3002\u6BD4\u5982\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">{</span>
  <span class="token literal-property property">isFile</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token literal-property property">isDir</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token literal-property property">canRead</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token literal-property property">canWrite</span><span class="token operator">:</span> <span class="token boolean">true</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>filecompress.js \u4E3B\u811A\u672C\u4F7F\u7528 path.resolve()\u5C06\u547D\u4EE4\u884C\u4E0A\u4F20\u9012\u7684\u8F93\u5165\u548C\u8F93\u51FA\u6587\u4EF6\u540D\u89E3\u6790\u4E3A\u7EDD\u5BF9\u6587\u4EF6\u8DEF\u5F84\uFF0C\u7136\u540E\u4F7F\u7528\u4E0A\u9762\u7684 getFileInfo()\u83B7\u53D6\u4FE1\u606F:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token hashbang comment">#!/usr/bin/env node</span>
<span class="token keyword">import</span> path <span class="token keyword">from</span> <span class="token string">&quot;path&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> readFile<span class="token punctuation">,</span> writeFile <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;fs/promises&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> getFileInfo <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./lib/fileinfo.js&quot;</span><span class="token punctuation">;</span>

<span class="token comment">// check files</span>
<span class="token keyword">let</span> input <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    output <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span>inputInfo<span class="token punctuation">,</span> outputInfo<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
        <span class="token function">getFileInfo</span><span class="token punctuation">(</span>input<span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token function">getFileInfo</span><span class="token punctuation">(</span>output<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    error <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u8FF0\u4EE3\u7801\u7528\u4E8E\u9A8C\u8BC1\u8DEF\u5F84\uFF0C\u5FC5\u8981\u65F6\u4EE5\u9519\u8BEF\u4FE1\u606F\u7EC8\u6B62\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// use input file name when output is a directory</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>outputInfo<span class="token punctuation">.</span>isDir <span class="token operator">&amp;&amp;</span> outputInfo<span class="token punctuation">.</span>canWrite <span class="token operator">&amp;&amp;</span> inputInfo<span class="token punctuation">.</span>isFile<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    output <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>output<span class="token punctuation">,</span> path<span class="token punctuation">.</span><span class="token function">basename</span><span class="token punctuation">(</span>input<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// check for errors</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>inputInfo<span class="token punctuation">.</span>isFile <span class="token operator">||</span> <span class="token operator">!</span>inputInfo<span class="token punctuation">.</span>canRead<span class="token punctuation">)</span>
    error<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">cannot read input file </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>input<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>input <span class="token operator">===</span> output<span class="token punctuation">)</span> error<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&quot;input and output files cannot be the same&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span>error<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Usage: ./filecompress.js [input file] [output file|dir]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;\\n  &quot;</span> <span class="token operator">+</span> error<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot;\\n  &quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    process<span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7136\u540E\u7528 readFile()\u5C06\u6574\u4E2A\u6587\u4EF6\u8BFB\u6210\u4E00\u4E2A\u540D\u4E3A content \u7684\u5B57\u7B26\u4E32\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// read file</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">processing </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>input<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> content<span class="token punctuation">;</span>

<span class="token keyword">try</span> <span class="token punctuation">{</span>
    content <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">readFile</span><span class="token punctuation">(</span>input<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">encoding</span><span class="token operator">:</span> <span class="token string">&quot;utf8&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
    process<span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> lengthOrig <span class="token operator">=</span> content<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">file size  </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>lengthOrig<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7136\u540E JavaScript \u6B63\u5219\u8868\u8FBE\u5F0F\u4F1A\u5220\u9664\u6CE8\u91CA\u548C\u7A7A\u683C\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// compress content</span>
content <span class="token operator">=</span> content
    <span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\n\\s+</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&quot;\\n&quot;</span><span class="token punctuation">)</span> <span class="token comment">// trim leading space from lines</span>
    <span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\/\\/.*?\\n</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span> <span class="token comment">// remove inline // comments</span>
    <span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\s+</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&quot; &quot;</span><span class="token punctuation">)</span> <span class="token comment">// remove whitespace</span>
    <span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\/\\*.*?\\*\\/</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span> <span class="token comment">// remove /* comments */</span>
    <span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">&lt;!--.*?--&gt;</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span> <span class="token comment">// remove &lt;!-- comments --&gt;</span>
    <span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\s*([&lt;&gt;(){}}[\\]])\\s*</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&quot;$1&quot;</span><span class="token punctuation">)</span> <span class="token comment">// remove space around brackets</span>
    <span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> lengthNew <span class="token operator">=</span> content<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4EA7\u751F\u7684\u5B57\u7B26\u4E32\u7528 writeFile()\u8F93\u51FA\u5230\u4E00\u4E2A\u6587\u4EF6\uFF0C\u5E76\u6709\u4E00\u4E2A\u72B6\u6001\u4FE1\u606F\u5C55\u793A\u4FDD\u5B58\u60C5\u51B5\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> lengthNew <span class="token operator">=</span> content<span class="token punctuation">.</span>length<span class="token punctuation">;</span>

<span class="token comment">// write file</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">outputting </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>output<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>
    <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">file size  </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>lengthNew<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> - saved </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>
        <span class="token punctuation">(</span><span class="token punctuation">(</span>lengthOrig <span class="token operator">-</span> lengthNew<span class="token punctuation">)</span> <span class="token operator">/</span> lengthOrig<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">100</span>
    <span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">%</span><span class="token template-punctuation string">\`</span></span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">try</span> <span class="token punctuation">{</span>
    content <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">writeFile</span><span class="token punctuation">(</span>output<span class="token punctuation">,</span> content<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
    process<span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F7F\u7528\u793A\u4F8B HTML \u6587\u4EF6\u8FD0\u884C\u9879\u76EE\u4EE3\u7801\uFF1A</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">node</span> filecompress.js ./test/example.html ./test/output.html
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="events" tabindex="-1"><a class="header-anchor" href="#events" aria-hidden="true">#</a> Events</h2><p>\u5F53\u53D1\u751F\u4E00\u4E9B\u4E8B\u60C5\u65F6\uFF0C\u4F60\u7ECF\u5E38\u9700\u8981\u6267\u884C\u591A\u4E2A\u51FD\u6570\u3002\u6BD4\u5982\u8BF4\uFF0C\u4E00\u4E2A\u7528\u6237\u6CE8\u518C\u4F60\u7684 app\uFF0C\u56E0\u6B64\u4EE3\u7801\u5FC5\u987B\u6DFB\u52A0\u65B0\u7528\u6237\u7684\u8BE6\u60C5\u5230\u6570\u636E\u5E93\u4E2D\uFF0C\u5F00\u542F\u4E00\u4E2A\u65B0\u767B\u5F55\u4F1A\u8BDD\uFF0C\u5E76\u53D1\u9001\u4E00\u4E2A\u6B22\u8FCE\u90AE\u4EF6\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// example pseudo code</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">userRegister</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> email<span class="token punctuation">,</span> password</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token keyword">await</span> <span class="token function">dbAddUser</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> email<span class="token punctuation">,</span> password<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">await</span> <span class="token keyword">new</span> <span class="token class-name">UserSession</span><span class="token punctuation">(</span>email<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">await</span> <span class="token function">emailRegister</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> email<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// handle error</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u4E00\u7CFB\u5217\u7684\u51FD\u6570\u8C03\u7528\u4E0E\u7528\u6237\u6CE8\u518C\u7D27\u5BC6\u76F8\u8FDE\u3002\u8FDB\u4E00\u6B65\u7684\u6D3B\u52A8\u4F1A\u5F15\u8D77\u8FDB\u4E00\u6B65\u7684\u51FD\u6570\u8C03\u7528\u3002\u6BD4\u5982\u8BF4\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// updated pseudo code</span>
<span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token keyword">await</span> <span class="token function">dbAddUser</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> email<span class="token punctuation">,</span> password<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">await</span> <span class="token keyword">new</span> <span class="token class-name">UserSession</span><span class="token punctuation">(</span>email<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">await</span> <span class="token function">emailRegister</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> email<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">await</span> <span class="token function">crmRegister</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> email<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// register on customer system</span>
    <span class="token keyword">await</span> <span class="token function">emailSales</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> email<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// alert sales team</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F60\u53EF\u4EE5\u5728\u8FD9\u4E2A\u5355\u4E00\u7684\u3001\u4E0D\u65AD\u589E\u957F\u7684\u4EE3\u7801\u5757\u4E2D\u7BA1\u7406\u51E0\u5341\u4E2A\u8C03\u7528\u3002</p>`,23),$={href:"https://nodejs.org/dist/latest/docs/api/events.html",target:"_blank",rel:"noopener noreferrer"},W=e(`<p>\u4EFB\u610F\u6570\u91CF\u7684\u4E8B\u4EF6\u5904\u7406\u51FD\u6570\u90FD\u53EF\u4EE5\u8BA2\u9605\u548C\u54CD\u5E94 newuser \u4E8B\u4EF6\uFF1B\u8FD9\u4E0D\u9700\u8981\u6539\u53D8 userRegister()\u51FD\u6570\u3002\u6BCF\u4E2A\u5904\u7406\u5668\u90FD\u662F\u72EC\u7ACB\u8FD0\u884C\u7684\uFF0C\u6240\u4EE5\u5B83\u4EEC\u53EF\u4EE5\u6309\u4EFB\u610F\u987A\u5E8F\u6267\u884C\u3002</p><h3 id="\u5BA2\u6237\u7AEF-javascript-\u4E2D\u7684\u4E8B\u4EF6" tabindex="-1"><a class="header-anchor" href="#\u5BA2\u6237\u7AEF-javascript-\u4E2D\u7684\u4E8B\u4EF6" aria-hidden="true">#</a> \u5BA2\u6237\u7AEF JavaScript \u4E2D\u7684\u4E8B\u4EF6</h3><p>\u4E8B\u4EF6\u548C\u5904\u7406\u51FD\u6570\u7ECF\u5E38\u5728\u5BA2\u6237\u7AEF JavaScript \u4E2D\u4F7F\u7528\u3002\u6BD4\u5982\u8BF4\uFF0C\u5F53\u7528\u6237\u70B9\u51FB\u4E00\u4E2A\u5143\u7D20\u65F6\u8FD0\u884C\u51FD\u6570\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// client-side JS click handler</span>
document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;myelement&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;click&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// output information about the event</span>
    console<span class="token punctuation">.</span><span class="token function">dir</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),J={href:"https://developer.mozilla.org/zh-CN/docs/Web/API/CustomEvent",target:"_blank",rel:"noopener noreferrer"},M=n("p",null,"\u53D1\u51FA\u4E8B\u4EF6\u7684\u5BF9\u8C61\u5FC5\u987B\u662F Node.js EventEmitter \u7C7B\u7684\u5B9E\u4F8B\u3002\u8FD9\u4E9B\u5BF9\u8C61\u6709\u4E00\u4E2A emit()\u65B9\u6CD5\u6765\u5F15\u53D1\u65B0\u7684\u4E8B\u4EF6\uFF0C\u8FD8\u6709\u4E00\u4E2A on()\u65B9\u6CD5\u6765\u9644\u52A0\u5904\u7406\u5668\u3002",-1),z={href:"https://github.com/spbooks/ultimatenode1/tree/main/ch12/event",target:"_blank",rel:"noopener noreferrer"},B=e(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// emits a &#39;tick&#39; event every interval</span>
<span class="token keyword">import</span> EventEmitter <span class="token keyword">from</span> <span class="token string">&quot;events&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> setInterval<span class="token punctuation">,</span> clearInterval <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;timers&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">class</span> <span class="token class-name">extends</span> EventEmitter <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5176 constructor \u5FC5\u987B\u8C03\u7528\u7236\u6784\u9020\u51FD\u6570\u3002\u7136\u540E\u4F20\u9012 delay \u53C2\u6570\u5230 start()\u65B9\u6CD5\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">delay</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span>delay<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>start()\u65B9\u6CD5\u68C0\u67E5 delay \u662F\u5426\u6709\u6548\uFF0C\u5982\u6709\u5FC5\u8981\u4F1A\u91CD\u7F6E\u5F53\u524D\u7684\u8BA1\u65F6\u5668\uFF0C\u5E76\u8BBE\u7F6E\u65B0\u7684 delay \u5C5E\u6027\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">start</span><span class="token punctuation">(</span><span class="token parameter">delay</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>delay <span class="token operator">||</span> delay <span class="token operator">==</span> <span class="token keyword">this</span><span class="token punctuation">.</span>delay<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>interval<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">clearInterval</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>interval<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">this</span><span class="token punctuation">.</span>delay <span class="token operator">=</span> delay<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7136\u540E\u5B83\u542F\u52A8\u4E00\u4E2A\u65B0\u7684\u95F4\u9694\u8BA1\u65F6\u5668\uFF0C\u8FD0\u884C\u4E8B\u4EF6\u540D\u79F0\u4E3A&quot;tick&quot;\u7684 emit()\u65B9\u6CD5\u3002\u8BE5\u4E8B\u4EF6\u7684\u8BA2\u9605\u8005\u4F1A\u6536\u5230\u4E00\u4E2A\u5305\u542B\u5EF6\u8FDF\u503C\u548C Node.js \u5E94\u7528\u7A0B\u5E8F\u542F\u52A8\u540E\u79D2\u6570\u7684\u5BF9\u8C61\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// start timer</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>interval <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// raise event</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&quot;tick&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">delay</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>delay<span class="token punctuation">,</span>
        <span class="token literal-property property">time</span><span class="token operator">:</span> performance<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>delay<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E3B event.js \u5165\u53E3\u811A\u672C\u5BFC\u5165\u4E86\u8BE5\u6A21\u5757\uFF0C\u5E76\u8BBE\u7F6E\u4E86\u4E00\u79D2\u949F\u7684 delay \u65F6\u6BB5\uFF081000 \u6BEB\u79D2\uFF09\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// create a ticker</span>
<span class="token keyword">import</span> Ticker <span class="token keyword">from</span> <span class="token string">&quot;./lib/ticker.js&quot;</span><span class="token punctuation">;</span>

<span class="token comment">// trigger a new event every second</span>
<span class="token keyword">const</span> ticker <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Ticker</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5B83\u9644\u52A0\u4E86\u6BCF\u6B21 tick \u4E8B\u4EF6\u53D1\u751F\u65F6\u89E6\u53D1\u7684\u5904\u7406\u51FD\u6570\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// add handler</span>
ticker<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;tick&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;handler 1 tick!&quot;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// add handler</span>
ticker<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;tick&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;handler 2 tick!&quot;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7B2C\u4E09\u4E2A\u5904\u7406\u5668\u4EC5\u4F7F\u7528 once()\u65B9\u6CD5\u5BF9\u7B2C\u4E00\u4E2A tick \u4E8B\u4EF6\u8FDB\u884C\u89E6\u53D1\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// add handler</span>
ticker<span class="token punctuation">.</span><span class="token function">once</span><span class="token punctuation">(</span><span class="token string">&quot;tick&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;handler 3 tick!&quot;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6700\u540E\uFF0C\u8F93\u51FA\u5F53\u524D\u76D1\u542C\u5668\u7684\u6570\u91CF\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// show number of listenersconsole.log(\`listeners: \${ // show number of listeners</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">listeners: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>ticker<span class="token punctuation">.</span><span class="token function">listenerCount</span><span class="token punctuation">(</span><span class="token string">&quot;tick&quot;</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F7F\u7528 node event.js \u8FD0\u884C\u4EE3\u7801\u3002</p><p>\u8F93\u51FA\u663E\u793A\u5904\u7406\u5668 3 \u89E6\u53D1\u4E86\u4E00\u6B21\uFF0C\u800C\u5904\u7406\u5668 1 \u548C 2 \u5728\u6BCF\u4E2A tick \u4E0A\u8FD0\u884C\uFF0C\u76F4\u5230\u5E94\u7528\u7A0B\u5E8F\u88AB\u7EC8\u6B62\u3002</p><h2 id="streams" tabindex="-1"><a class="header-anchor" href="#streams" aria-hidden="true">#</a> Streams</h2><p>\u4E0A\u9762\u7684\u6587\u4EF6\u7CFB\u7EDF\u793A\u4F8B\u4EE3\u7801\u5728\u8F93\u51FA\u6700\u5C0F\u5316\u7684\u7ED3\u679C\u4E4B\u524D\u5C06\u6574\u4E2A\u6587\u4EF6\u8BFB\u5165\u5185\u5B58\u3002\u5982\u679C\u6587\u4EF6\u5927\u4E8E\u53EF\u7528\u7684 RAM \u600E\u4E48\u529E\uFF1FNode.js \u5E94\u7528\u7A0B\u5E8F\u5C06\u4EE5&quot;\u5185\u5B58\u4E0D\u8DB3\uFF08out of memory\uFF09&quot;\u9519\u8BEF\u5931\u8D25\u3002</p><ul><li>\u89E3\u51B3\u65B9\u6848\u662F\u6D41\u3002\u8FD9\u5C06\u5728\u66F4\u5C0F\u3001\u66F4\u5BB9\u6613\u7BA1\u7406\u7684\u5757\u4E2D\u5904\u7406\u4F20\u5165\u7684\u6570\u636E\u3002\u6D41\u53EF\u4EE5\u505A\u5230\uFF1A <ul><li>\u53EF\u8BFB\uFF1A\u4ECE\u6587\u4EF6\u3001HTTP \u8BF7\u6C42\u3001TCP \u5957\u63A5\u5B57\u3001\u6807\u51C6\u8F93\u5165\u7B49\u8BFB\u53D6\u3002</li><li>\u53EF\u5199\uFF1A\u5199\u5165\u5230\u6587\u4EF6\u3001HTTP \u54CD\u5E94\u3001TCP \u5957\u63A5\u5B57\u3001\u6807\u51C6\u8F93\u51FA\u7B49\u3002</li><li>\u53CC\u5DE5\uFF1A\u65E2\u53EF\u8BFB\u53C8\u53EF\u5199\u7684\u6D41\u3002</li><li>\u8F6C\u6362\uFF1A\u8F6C\u6362\u6570\u636E\u7684\u53CC\u5DE5\u6D41\u3002</li></ul></li></ul>`,20),V={href:"https://nodejs.org/dist/latest/docs/api/buffer.html",target:"_blank",rel:"noopener noreferrer"},H={href:"https://github.com/spbooks/ultimatenode1/tree/main/ch12/filestream",target:"_blank",rel:"noopener noreferrer"},K=e(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> createReadStream<span class="token punctuation">,</span> createWriteStream <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;fs&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Transform <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;stream&quot;</span><span class="token punctuation">;</span>

<span class="token comment">// compression Transform</span>
<span class="token keyword">class</span> <span class="token class-name">Compress</span> <span class="token keyword">extends</span> <span class="token class-name">Transform</span> <span class="token punctuation">{</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">opts</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span>opts<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>chunks <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>lengthOrig <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>lengthNew <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token function">_transform</span><span class="token punctuation">(</span><span class="token parameter">chunk<span class="token punctuation">,</span> encoding<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> data <span class="token operator">=</span> chunk<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// buffer to string</span>
            content <span class="token operator">=</span> data
                <span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\n\\s+</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&quot;\\n&quot;</span><span class="token punctuation">)</span> <span class="token comment">// trim leading spaces</span>
                <span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\/\\/.*?\\n</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span> <span class="token comment">// remove // comments</span>
                <span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\s+</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&quot; &quot;</span><span class="token punctuation">)</span> <span class="token comment">// remove whitespace</span>
                <span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\/\\*.*?\\*\\/</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span> <span class="token comment">// remove /* comments */</span>
                <span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">&lt;!--.*?--&gt;</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span> <span class="token comment">// remove &lt;!-- comments --&gt;</span>
                <span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\s*([&lt;&gt;(){}}[\\]])\\s*</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&quot;$1&quot;</span><span class="token punctuation">)</span> <span class="token comment">// remove bracket spaces</span>
                <span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">this</span><span class="token punctuation">.</span>chunks<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>lengthOrig <span class="token operator">+=</span> data<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>lengthNew <span class="token operator">+=</span> content<span class="token punctuation">.</span>length<span class="token punctuation">;</span>

        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">callback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5F53\u4E00\u4E2A\u65B0\u7684\u6570\u636E\u5757\u51C6\u5907\u597D\u65F6\uFF0C_transform \u65B9\u6CD5\u88AB\u8C03\u7528\u3002\u5B83\u4EE5 Buffer \u5BF9\u8C61\u7684\u5F62\u5F0F\u88AB\u63A5\u6536\uFF0C\u5E76\u88AB\u8F6C\u6362\u4E3A\u5B57\u7B26\u4E32\uFF0C\u88AB\u6700\u5C0F\u5316\uFF0C\u5E76\u4F7F\u7528 push()\u65B9\u6CD5\u8F93\u51FA\u3002\u4E00\u65E6\u6570\u636E\u5757\u5904\u7406\u5B8C\u6210\uFF0C\u4E00\u4E2A callback()\u51FD\u6570\u5C31\u4F1A\u88AB\u8C03\u7528\u3002</p><p>\u5E94\u7528\u7A0B\u5E8F\u542F\u52A8\u4E86\u6587\u4EF6\u8BFB\u5199\u6D41\uFF0C\u5E76\u5B9E\u4F8B\u5316\u4E86\u4E00\u4E2A\u65B0\u7684 compress \u5BF9\u8C61\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// process streamconst  readStream = createReadStream(input),  wr// process stream</span>
<span class="token keyword">const</span> readStream <span class="token operator">=</span> <span class="token function">createReadStream</span><span class="token punctuation">(</span>input<span class="token punctuation">)</span><span class="token punctuation">,</span>
    writeStream <span class="token operator">=</span> <span class="token function">createWriteStream</span><span class="token punctuation">(</span>output<span class="token punctuation">)</span><span class="token punctuation">,</span>
    compress <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Compress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">processing </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>input<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F20\u5165\u7684\u6587\u4EF6\u8BFB\u53D6\u6D41\u5B9A\u4E49\u4E86.pipe()\u65B9\u6CD5\uFF0C\u8FD9\u4E9B\u65B9\u6CD5\u901A\u8FC7\u4E00\u7CFB\u5217\u53EF\u80FD\uFF08\u6216\u53EF\u80FD\u4E0D\uFF09\u6539\u53D8\u5185\u5BB9\u7684\u51FD\u6570\u5C06\u4F20\u5165\u7684\u6570\u636E\u8F93\u5165\u3002\u5728\u8F93\u51FA\u5230\u53EF\u5199\u6587\u4EF6\u4E4B\u524D\uFF0C\u6570\u636E\u901A\u8FC7 compress \u8F6C\u6362\u8FDB\u884C\u7BA1\u9053\u8F93\u9001\u3002\u4E00\u65E6\u6D41\u7ED3\u675F\uFF0C\u6700\u7EC8 on(&#39;finish&#39;)\u4E8B\u4EF6\u5904\u7406\u51FD\u6570\u5C31\u4F1A\u6267\u884C\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>readStream<span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>compress<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>writeStream<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;finish&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">file size  </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span> compress<span class="token punctuation">.</span>lengthOrig <span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">output     </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span> output <span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">chunks     readStream.pipe(compress).pipe(writeStream).on(&#39;finish&#39;, () =&gt; {

  console.log(</span><span class="token template-punctuation string">\`</span></span>file size  $<span class="token punctuation">{</span> compress<span class="token punctuation">.</span>lengthOrig <span class="token punctuation">}</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">);
  console.log(</span><span class="token template-punctuation string">\`</span></span>output     $<span class="token punctuation">{</span> output <span class="token punctuation">}</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">);
  console.log(</span><span class="token template-punctuation string">\`</span></span>chunks     $<span class="token punctuation">{</span> compress<span class="token punctuation">.</span>chunks <span class="token punctuation">}</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">);
  console.log(</span><span class="token template-punctuation string">\`</span></span>file size  $<span class="token punctuation">{</span> compress<span class="token punctuation">.</span>lengthNew <span class="token punctuation">}</span> <span class="token operator">-</span> saved $<span class="token punctuation">{</span> Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span><span class="token punctuation">(</span>compress<span class="token punctuation">.</span>lengthOrig <span class="token operator">-</span> compress<span class="token punctuation">.</span>lengthNew<span class="token punctuation">)</span> <span class="token operator">/</span> compress<span class="token punctuation">.</span>lengthOrig <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token operator">%</span>\`<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F7F\u7528\u4EFB\u610F\u5927\u5C0F\u7684 HTML \u6587\u4EF6\u7684\u4F8B\u5B50\u8FD0\u884C\u9879\u76EE\u4EE3\u7801\uFF1A</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">node</span> filestream.js ./test/example.html ./test/output.html
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u8FD9\u662F\u5BF9 Node.js \u6D41\u7684\u4E00\u4E2A\u5C0F\u4F8B\u5B50\u3002\u6D41\u5904\u7406\u662F\u4E00\u4E2A\u590D\u6742\u7684\u8BDD\u9898\uFF0C\u4F60\u53EF\u80FD\u4E0D\u7ECF\u5E38\u4F7F\u7528\u5B83\u4EEC\u3002\u5728\u67D0\u4E9B\u60C5\u51B5\u4E0B\uFF0C\u50CF Express \u8FD9\u6837\u7684\u6A21\u5757\u5728\u5F15\u64CE\u76D6\u4E0B\u4F7F\u7528\u6D41\uFF0C\u4F46\u5BF9\u4F60\u7684\u590D\u6742\u6027\u8FDB\u884C\u4E86\u62BD\u8C61\u3002</p><p>\u4F60\u8FD8\u5E94\u8BE5\u6CE8\u610F\u5230\u6570\u636E\u5206\u5757\u7684\u6311\u6218\u3002\u4E00\u4E2A\u5757\u53EF\u4EE5\u662F\u4EFB\u4F55\u5927\u5C0F\uFF0C\u5E76\u4EE5\u4E0D\u4FBF\u7684\u65B9\u5F0F\u5206\u5272\u4F20\u5165\u7684\u6570\u636E\u3002\u8003\u8651\u5BF9\u8FD9\u6BB5\u4EE3\u7801\u6700\u5C0F\u5316\uFF1A</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>module<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
    <span class="token comment">// example script</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;loaded&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E24\u4E2A\u6570\u636E\u5757\u53EF\u4EE5\u4F9D\u6B21\u5230\u8FBE\uFF1A</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>module<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
// example
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4EE5\u53CA\uFF1A</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;loaded&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u72EC\u7ACB\u5904\u7406\u6BCF\u4E2A\u5757\u7684\u7ED3\u679C\u662F\u4EE5\u4E0B\u65E0\u6548\u7684\u6700\u5C0F\u5316\u811A\u672C\uFF1A</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>module<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
    script console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;loaded&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u89E3\u51B3\u529E\u6CD5\u662F\u9884\u5148\u89E3\u6790\u6BCF\u4E2A\u5757\uFF0C\u5E76\u5C06\u5176\u5206\u5272\u6210\u53EF\u4EE5\u5904\u7406\u7684\u6574\u4E2A\u90E8\u5206\u3002\u5728\u67D0\u4E9B\u60C5\u51B5\u4E0B\uFF0C\u5757\uFF08\u6216\u5757\u7684\u4E00\u90E8\u5206\uFF09\u5C06\u88AB\u6DFB\u52A0\u5230\u4E0B\u4E00\u4E2A\u5757\u7684\u5F00\u59CB\u3002</p><ul><li>\u5C3D\u7BA1\u4F1A\u51FA\u73B0\u989D\u5916\u7684\u590D\u6742\u60C5\u51B5\uFF0C\u4F46\u662F\u6700\u597D\u5C06\u6700\u5C0F\u5316\u5E94\u7528\u4E8E\u6574\u884C\u3002\u56E0\u4E3A<code>&lt;!-- --&gt;</code>\u548C<code>/* */</code>\u6CE8\u91CA\u53EF\u4EE5\u8DE8\u8D8A\u4E0D\u6B62\u4E00\u884C\u3002\u4E0B\u9762\u662F\u6BCF\u4E2A\u4F20\u5165\u5757\u7684\u53EF\u80FD\u7B97\u6CD5\uFF1A - \u5C06\u5148\u524D\u5757\u4E2D\u4FDD\u5B58\u7684\u4EFB\u4F55\u6570\u636E\u8FFD\u52A0\u5230\u65B0\u5757\u7684\u5F00\u5934\u3002 - \u4ECE\u6570\u636E\u5757\u4E2D\u79FB\u9664\u4EFB\u610F\u6574\u4E2A<code>&lt;!-- \u5230 --&gt;</code> \u4EE5\u53CA <code>/* \u5230 */</code>\u90E8\u5206\u3002 \u5C06\u5269\u4F59\u5757\u5206\u4E3A\u4E24\u90E8\u5206\u3002\u5176\u4E2D part2 \u4EE5\u53D1\u73B0\u7684\u7B2C\u4E00\u4E2A<code>&lt;!--\u6216/*</code>\u5F00\u59CB\u3002\u5982\u679C\u4E24\u8005\u90FD\u5B58\u5728\uFF0C\u5219\u4ECE part2 \u4E2D\u5220\u9664\u9664\u8BE5\u7B26\u53F7\u4EE5\u5916\u7684\u5176\u4ED6\u5185\u5BB9\u3002\u5982\u679C\u4E24\u8005\u90FD\u6CA1\u6709\u627E\u5230\uFF0C\u5219\u5728\u6700\u540E\u4E00\u4E2A\u56DE\u8F66\u7B26\u5904\u8FDB\u884C\u5206\u5272\u3002\u5982\u679C\u6CA1\u6709\u627E\u5230\uFF0C\u5C06 part1 \u8BBE\u4E3A\u7A7A\u5B57\u7B26\u4E32\uFF0Cpart2 \u8BBE\u4E3A\u6574\u4E2A\u5757\u3002\u5982\u679C part2 \u53D8\u5F97\u975E\u5E38\u5927<code>--</code>\u4E5F\u8BB8\u8D85\u8FC7 100,000 \u4E2A\u5B57\u7B26\uFF0C\u56E0\u4E3A\u6CA1\u6709\u56DE\u8F66\u7B26<code>--</code>\u5C06 part2 \u8FFD\u52A0\u5230 part1\uFF0C\u5E76\u5C06 part2 \u8BBE\u4E3A\u7A7A\u5B57\u7B26\u4E32\u3002\u8FD9\u5C06\u786E\u4FDD\u88AB\u4FDD\u5B58\u7684\u90E8\u5206\u4E0D\u4F1A\u65E0\u9650\u5730\u589E\u957F\u3002 - \u7F29\u5C0F\u548C\u8F93\u51FA part1\u3002 - \u4FDD\u5B58 part2\uFF08\u5B83\u88AB\u6DFB\u52A0\u5230\u4E0B\u4E00\u4E2A\u5757\u7684\u5F00\u59CB\uFF09\u3002</li></ul><p>\u8BE5\u8FC7\u7A0B\u5BF9\u6BCF\u4E2A\u4F20\u5165\u7684\u6570\u636E\u5757\u90FD\u4F1A\u518D\u6B21\u8FD0\u884C\u3002</p><h2 id="worker-threads" tabindex="-1"><a class="header-anchor" href="#worker-threads" aria-hidden="true">#</a> Worker Threads</h2>`,21),G={href:"https://nodejs.org/api/worker_threads.html#worker-threads",target:"_blank",rel:"noopener noreferrer"},X=n("p",null,"\u5047\u8BBE\u4E00\u4E2A\u7528\u6237\u53EF\u4EE5\u5728\u4F60\u7684 Express \u5E94\u7528\u7A0B\u5E8F\u4E2D\u89E6\u53D1\u4E00\u4E2A\u590D\u6742\u7684\u3001\u5341\u79D2\u949F\u7684 JavaScript \u8BA1\u7B97\u3002\u8BE5\u8BA1\u7B97\u5C06\u6210\u4E3A\u4E00\u4E2A\u74F6\u9888\uFF0C\u4F7F\u6240\u6709\u7528\u6237\u7684\u5904\u7406\u7A0B\u5E8F\u505C\u6B62\u3002\u4F60\u7684\u5E94\u7528\u7A0B\u5E8F\u4E0D\u80FD\u5904\u7406\u4EFB\u4F55\u8BF7\u6C42\u6216\u8FD0\u884C\u5176\u4ED6\u529F\u80FD\uFF0C\u9664\u975E\u5B83\u8BA1\u7B97\u5B8C\u6210\u3002",-1),Q=n("h3",{id:"\u5F02\u6B65\u8BA1\u7B97",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u5F02\u6B65\u8BA1\u7B97","aria-hidden":"true"},"#"),s(" \u5F02\u6B65\u8BA1\u7B97")],-1),Y=n("p",null,"\u5904\u7406\u6765\u81EA\u6587\u4EF6\u6216\u6570\u636E\u5E93\u6570\u636E\u7684\u590D\u6742\u8BA1\u7B97\u53EF\u80FD\u95EE\u9898\u4E0D\u5927\uFF0C\u56E0\u4E3A\u6BCF\u4E2A\u9636\u6BB5\u5728\u7B49\u5F85\u6570\u636E\u5230\u8FBE\u65F6\u90FD\u662F\u5F02\u6B65\u8FD0\u884C\u3002\u6570\u636E\u5904\u7406\u53D1\u751F\u5728\u4E8B\u4EF6\u5FAA\u73AF\u7684\u4E0D\u540C\u8FED\u4EE3\u4E2D\u3002",-1),Z=n("p",null,"\u7136\u800C\uFF0C\u4EC5\u7528 JavaScript \u7F16\u5199\u7684\u957F\u8FD0\u884C\u8BA1\u7B97\uFF0C\u6BD4\u5982\u56FE\u50CF\u5904\u7406\u6216\u673A\u5668\u5B66\u4E60\u7B97\u6CD5\uFF0C\u5C06\u5360\u7528\u4E8B\u4EF6\u5FAA\u73AF\u7684\u5F53\u524D\u8FED\u4EE3\u3002",-1),nn=n("p",null,"\u4E00\u79CD\u89E3\u51B3\u65B9\u6848\u5C31\u662F worker \u7EBF\u7A0B\u3002\u8FD9\u7C7B\u4F3C\u4E8E\u6D4F\u89C8\u5668\u7684 web worker \u4EE5\u53CA\u5728\u72EC\u7ACB\u7EBF\u7A0B\u4E0A\u542F\u52A8 JavaScript \u8FDB\u7A0B\u3002\u4E3B\u7EBF\u7A0B\u548C worker \u7EBF\u7A0B\u53EF\u4EE5\u4EA4\u6362\u4FE1\u606F\u6765\u89E6\u53D1\u6216\u8005\u7EC8\u6B62\u7A0B\u5E8F\u3002",-1),sn=n("h3",{id:"workers-\u548C\u4E8B\u4EF6\u5FAA\u73AF",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#workers-\u548C\u4E8B\u4EF6\u5FAA\u73AF","aria-hidden":"true"},"#"),s(" Workers \u548C\u4E8B\u4EF6\u5FAA\u73AF")],-1),an=n("p",null,"Workers \u5BF9 CPU \u5BC6\u96C6\u578B JavaScript \u64CD\u4F5C\u5F88\u6709\u7528\uFF0C\u5C3D\u7BA1 Node.js \u7684\u4E3B\u4E8B\u4EF6\u5FAA\u73AF\u4ECD\u5E94\u7528\u4E8E\u5F02\u6B65 I/O \u6D3B\u52A8\u3002",-1),tn={href:"https://github.com/spbooks/ultimatenode1/tree/main/ch12/worker",target:"_blank",rel:"noopener noreferrer"},en=e(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// dice throwing</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">diceRun</span><span class="token punctuation">(</span><span class="token parameter">runs <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> dice <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">,</span> sides <span class="token operator">=</span> <span class="token number">6</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> stat <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

    <span class="token keyword">while</span> <span class="token punctuation">(</span>runs <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> d <span class="token operator">=</span> dice<span class="token punctuation">;</span> d <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">;</span> d<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            sum <span class="token operator">+=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> sides<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        stat<span class="token punctuation">[</span>sum<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>stat<span class="token punctuation">[</span>sum<span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>

        runs<span class="token operator">--</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> stat<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>index.js \u4E2D\u7684\u4EE3\u7801\u542F\u52A8\u4E00\u4E2A\u8FDB\u7A0B\uFF0C\u6BCF\u79D2\u949F\u8FD0\u884C\u4E00\u6B21\u5E76\u8F93\u51FA\u4E00\u6761\u4FE1\u606F\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// run process every second</span>
<span class="token keyword">const</span> timer <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;  another process&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8C03\u7528 diceRun()\u51FD\u6570\uFF0C\u5C06\u4E24\u4E2A\u9AB0\u5B50\u629B\u51FA 10 \u4EBF\u6B21\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> diceRun <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./lib/dice.js&quot;</span><span class="token punctuation">;</span>

<span class="token comment">// throw 2 dice 1 billion times</span>
<span class="token keyword">const</span> numberOfDice <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">,</span>
    runs <span class="token operator">=</span> <span class="token number">999_999_999</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> stat1 <span class="token operator">=</span> <span class="token function">diceRun</span><span class="token punctuation">(</span>runs<span class="token punctuation">,</span> numberOfDice<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u5C06\u6682\u505C\u8BA1\u65F6\u5668\uFF0C\u56E0\u4E3A Node.js \u4E8B\u4EF6\u5FAA\u73AF\u5728\u8BA1\u7B97\u5B8C\u6210\u4E4B\u524D\u4E0D\u80FD\u7EE7\u7EED\u4E0B\u4E00\u6B21\u8FED\u4EE3\u3002</p><p>\u7136\u540E\uFF0C\u5C06\u4E0A\u8FF0\u4EE3\u7801\u5728\u4E00\u4E2A\u65B0\u7684 Worker \u4E2D\u5C1D\u8BD5\u76F8\u540C\u7684\u8BA1\u7B97\u3002\u8FD9\u4F1A\u52A0\u8F7D\u4E00\u4E2A\u540D\u4E3A worker.js \u7684\u811A\u672C\uFF0C\u5E76\u5728\u914D\u7F6E\u5BF9\u8C61\u4E0A\u7684 workerData \u5C5E\u6027\u4F20\u9012\u8BA1\u7B97\u53C2\u6570\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Worker <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;worker_threads&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> worker <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Worker</span><span class="token punctuation">(</span><span class="token string">&quot;./worker.js&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">workerData</span><span class="token operator">:</span> <span class="token punctuation">{</span> runs<span class="token punctuation">,</span> numberOfDice <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E8B\u4EF6\u5904\u7406\u5668\u88AB\u9644\u52A0\u5230\u8FD0\u884C worker.js \u811A\u672C\u7684 worker \u5BF9\u8C61\u4E0A\uFF0C\u4EE5\u4FBF\u5B83\u80FD\u63A5\u6536\u4F20\u5165\u7684\u7ED3\u679C\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// result returned</span>
worker<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;message&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">result</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">table</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4EE5\u53CA\u5904\u7406\u9519\u8BEF\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// worker error</span>
worker<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;error&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4EE5\u53CA\u5728\u5904\u7406\u5B8C\u6210\u540E\u8FDB\u884C\u6574\u7406\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// worker complete</span>
worker<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;exit&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">code</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// tidy up</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>worker.js \u811A\u672C\u542F\u52A8 diceRun()\u8BA1\u7B97\uFF0C\u5E76\u5728\u8BA1\u7B97\u5B8C\u6210\u540E\u5411\u7236\u811A\u672C\u53D1\u5E03\u4E00\u6761\u6D88\u606F--\u8BE5\u6D88\u606F\u7531\u4E0A\u9762\u7684 message \u5904\u7406\u5668\u63A5\u6536\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// worker threadimport { workerData, parentPort } from &#39;worker_threads&#39;;import { diceRun } from &#39;./lib/dice.js&#39;;</span>
<span class="token comment">// worker thread</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> workerData<span class="token punctuation">,</span> parentPort <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;worker_threads&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> diceRun <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./lib/dice.js&quot;</span><span class="token punctuation">;</span>

<span class="token comment">// start calculation</span>
<span class="token keyword">const</span> stat <span class="token operator">=</span> <span class="token function">diceRun</span><span class="token punctuation">(</span>workerData<span class="token punctuation">.</span>runs<span class="token punctuation">,</span> workerData<span class="token punctuation">.</span>numberOfDice<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// post message to parent script</span>
parentPort<span class="token punctuation">.</span><span class="token function">postMessage</span><span class="token punctuation">(</span>stat<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728 worker \u8FD0\u884C\u65F6\uFF0C\u8BA1\u65F6\u5668\u5E76\u6CA1\u6709\u6682\u505C\uFF0C\u56E0\u4E3A\u5B83\u662F\u5728\u53E6\u4E00\u4E2A CPU \u7EBF\u7A0B\u4E0A\u6267\u884C\u7684\u3002\u6362\u53E5\u8BDD\u8BF4\uFF0CNode.js \u7684\u4E8B\u4EF6\u5FAA\u73AF\u7EE7\u7EED\u8FED\u4EE3\uFF0C\u800C\u6CA1\u6709\u957F\u5EF6\u8FDF\u3002</p><p>\u4F7F\u7528 node index.js \u8FD0\u884C\u9879\u76EE\u4EE3\u7801\u3002</p><p>\u4F60\u5E94\u8BE5\u6CE8\u610F\u5230\u4E86\uFF0C\u57FA\u4E8E worker \u7684\u8BA1\u7B97\u8FD0\u884C\u901F\u5EA6\u7A0D\u5FEB\uFF0C\u56E0\u4E3A\u7EBF\u7A0B\u5B8C\u5168\u4E13\u7528\u4E8E\u8BE5\u8FDB\u7A0B\u3002\u5982\u679C\u4F60\u7684\u5E94\u7528\u7A0B\u5E8F\u4E2D\u9047\u5230\u6027\u80FD\u74F6\u9888\uFF0C\u8BF7\u8003\u8651\u4F7F\u7528 worker\u3002</p><h2 id="child-processes" tabindex="-1"><a class="header-anchor" href="#child-processes" aria-hidden="true">#</a> Child Processes</h2><p>\u6709\u65F6\u9700\u8981\u8C03\u7528\u90A3\u4E9B\u4E0D\u662F\u7528 Node.js \u7F16\u5199\u7684\u6216\u8005\u6709\u5931\u8D25\u98CE\u9669\u7684\u5E94\u7528\u7A0B\u5E8F\u3002</p><h3 id="\u771F\u5B9E\u6848\u4F8B" tabindex="-1"><a class="header-anchor" href="#\u771F\u5B9E\u6848\u4F8B" aria-hidden="true">#</a> \u771F\u5B9E\u6848\u4F8B</h3><p>\u6211\u5199\u8FC7\u4E00\u4E2A Express \u5E94\u7528\u7A0B\u5E8F\uFF0C\u8BE5\u7A0B\u5E8F\u751F\u6210\u4E86\u4E00\u4E2A\u6A21\u7CCA\u7684\u56FE\u50CF\u54C8\u5E0C\u503C\uFF0C\u7528\u4E8E\u8BC6\u522B\u7C7B\u4F3C\u7684\u56FE\u5F62\u3002\u5B83\u4EE5\u5F02\u6B65\u65B9\u5F0F\u8FD0\u884C\uFF0C\u5E76\u4E14\u8FD0\u884C\u826F\u597D\uFF0C\u76F4\u5230\u6709\u4EBA\u4E0A\u4F20\u4E86\u4E00\u4E2A\u5305\u542B\u5FAA\u73AF\u5F15\u7528\u7684\u7578\u5F62 GIF\uFF08\u52A8\u753B\u5E27 A \u5F15\u7528\u4E86\u5E27 B\uFF0C\u800C\u5E27 B \u5F15\u7528\u4E86\u5E27 A\uFF09\u3002</p><p>\u54C8\u5E0C\u503C\u7684\u8BA1\u7B97\u6C38\u4E0D\u7ED3\u675F\u3002\u8BE5\u7528\u6237\u653E\u5F03\u4E86\u5E76\u5C1D\u8BD5\u518D\u6B21\u4E0A\u4F20\u3002\u4E00\u6B21\u53C8\u4E00\u6B21\u3002\u6574\u4E2A\u5E94\u7528\u7A0B\u5E8F\u6700\u7EC8\u56E0\u5185\u5B58\u9519\u8BEF\u800C\u5D29\u6E83\u3002</p><p>\u8BE5\u95EE\u9898\u901A\u8FC7\u5728\u5B50\u8FDB\u7A0B\u4E2D\u8FD0\u884C\u6563\u5217\u7B97\u6CD5\u6700\u7EC8\u88AB\u89E3\u51B3\u3002Express \u5E94\u7528\u7A0B\u5E8F\u4FDD\u6301\u7A33\u5B9A\uFF0C\u56E0\u4E3A\u5B83\u542F\u52A8\u3001\u76D1\u63A7\u5E76\u5728\u8BA1\u7B97\u65F6\u95F4\u8FC7\u957F\u65F6\u7EC8\u6B62\u4E86\u8BA1\u7B97\u3002</p>`,25),pn={href:"https://nodejs.org/dist/latest/docs/api/child_process.html",target:"_blank",rel:"noopener noreferrer"},on=n("ul",null,[n("li",null,"spawn\uFF1A\u751F\u6210\u5B50\u8FDB\u7A0B\u3002"),n("li",null,"fork\uFF1A\u7279\u6B8A\u7C7B\u578B\u7684 spawn\uFF0C\u53EF\u4EE5\u542F\u52A8\u4E00\u4E2A\u65B0\u7684 Node.js \u8FDB\u7A0B\u3002"),n("li",null,"exec\uFF1A\u751F\u6210 shell \u5E76\u8FD0\u884C\u4E00\u6761\u547D\u4EE4\u3002\u8FD0\u884C\u7ED3\u679C\u88AB\u7F13\u51B2\uFF0C\u5F53\u8FDB\u884C\u7ED3\u675F\u65F6\u8FD4\u56DE\u4E00\u4E2A\u56DE\u8C03\u51FD\u6570\u3002")],-1),cn=n("p",null,"\u4E0D\u50CF worker \u7EBF\u7A0B\uFF0C\u5B50\u8FDB\u7A0B\u72EC\u7ACB\u4E8E Node.js \u4E3B\u811A\u672C\uFF0C\u5E76\u4E14\u65E0\u6CD5\u8BBF\u95EE\u76F8\u540C\u7684\u5185\u5B58\u3002",-1),ln=n("h2",{id:"clusters",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#clusters","aria-hidden":"true"},"#"),s(" Clusters")],-1),un={href:"https://nodejs.org/dist/latest/docs/api/cluster.html",target:"_blank",rel:"noopener noreferrer"},rn=n("p",null,"\u5BF9\u4E8E os.cpus()\u8FD4\u56DE\u7684\u6BCF\u4E2A CPU\uFF0C\u521D\u59CB\u7684\u4E3B\u8FDB\u7A0B\u53EF\u80FD\u4F1A fork \u81EA\u5DF1\u4E00\u6B21\u3002\u5F53\u4E00\u4E2A\u8FDB\u7A0B\u5931\u8D25\u65F6\uFF0C\u5B83\u4E5F\u53EF\u4EE5\u5904\u7406\u91CD\u542F\uFF0C\u5E76\u5728 fork \u7684\u8FDB\u7A0B\u4E4B\u95F4\u4EE3\u7406\u901A\u4FE1\u4FE1\u606F\u3002",-1),kn={href:"https://pm2.keymetrics.io/",target:"_blank",rel:"noopener noreferrer"},dn={href:"https://www.docker.com/",target:"_blank",rel:"noopener noreferrer"},mn={href:"https://kubernetes.io/",target:"_blank",rel:"noopener noreferrer"},vn=n("p",null,"\u90FD\u53EF\u4EE5\u542F\u52A8\u3001\u76D1\u63A7\u548C\u91CD\u542F\u540C\u4E00\u4E2A Node.js \u5E94\u7528\u7A0B\u5E8F\u7684\u591A\u4E2A\u72EC\u7ACB\u5B9E\u4F8B\u3002\u5373\u4F7F\u6709\u4E00\u4E2A\u5931\u8D25\u4E86\uFF0C\u8BE5\u5E94\u7528\u7A0B\u5E8F\u4E5F\u4F1A\u4FDD\u6301\u6D3B\u52A8\u72B6\u6001\u3002",-1),gn=n("h2",{id:"\u603B\u7ED3",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u603B\u7ED3","aria-hidden":"true"},"#"),s(" \u603B\u7ED3")],-1),bn=n("p",null,"\u672C\u6587\u63D0\u4F9B\u4E86\u4E00\u4E2A\u6BD4\u8F83\u6709\u7528\u7684 Node.js API \u7684\u4F8B\u5B50\uFF0C\u4F46\u6211\u9F13\u52B1\u4F60\u6D4F\u89C8\u6587\u6863\uFF0C\u81EA\u5DF1\u53BB\u53D1\u73B0\u5B83\u4EEC\u3002\u6587\u6863\u603B\u4F53\u4E0A\u662F\u597D\u7684\uFF0C\u5E76\u5C55\u793A\u4E86\u7B80\u5355\u7684\u4F8B\u5B50\uFF0C\u4F46\u5B83\u5728\u67D0\u4E9B\u5730\u65B9\u53EF\u80FD\u662F\u7B80\u7565\u7684\u3002",-1);function hn(fn,wn){const a=o("ExternalLinkIcon");return c(),l("div",null,[u,n("p",null,[n("a",r,[s("process"),t(a)]),s("\u5BF9\u8C61\u63D0\u4F9B\u6709\u5173\u4F60\u7684 Node.js \u5E94\u7528\u7A0B\u5E8F\u4EE5\u53CA\u63A7\u5236\u65B9\u6CD5\u7684\u4FE1\u606F\u3002\u53EF\u4EE5\u4F7F\u7528\u8BE5\u5BF9\u8C61\u83B7\u53D6\u8BF8\u5982\u73AF\u5883\u53D8\u91CF\u3001CPU \u548C\u5185\u5B58\u4F7F\u7528\u60C5\u51B5\u7B49\u4FE1\u606F\u3002process \u662F\u5168\u5C40\u53EF\u7528\u7684\uFF1A\u4F60\u53EF\u4EE5\u5728\u4E0D import \u7684\u60C5\u51B5\u4E0B\u4F7F\u7528\u5B83\u3002\u5C3D\u7BA1 Node.js \u6587\u6863\u63A8\u8350\u4F60\u663E\u793A\u5730\u5F15\u7528\uFF1A")]),k,n("ul",null,[d,n("li",null,[s("process.report\uFF1A\u751F\u6210"),n("a",m,[s("\u8BCA\u65AD\u62A5\u544A"),t(a)]),s("\u3002")]),n("li",null,[s("process.exit(code)\uFF1A\u9000\u51FA\u5F53\u524D\u5E94\u7528\u7A0B\u5E8F\u3002\u4F7F\u7528\u9000\u51FA\u7801 0 \u6765\u8868\u793A\u6210\u529F\uFF0C\u6216\u5728\u5FC5\u8981\u65F6\u4F7F\u7528\u9002\u5F53\u7684"),n("a",v,[s("\u9519\u8BEF\u4EE3\u7801"),t(a)]),s("\u3002")])]),g,n("p",null,[n("a",b,[s("OS"),t(a)]),s("API \u4E0E process \u7C7B\u4F3C\u3002\u4F46\u5B83\u4E5F\u53EF\u4EE5\u8FD4\u56DE\u6709\u5173 Node.js \u8FD0\u884C\u7684\u64CD\u4F5C\u7CFB\u7EDF\u7684\u4FE1\u606F\u3002\u5B83\u63D0\u4F9B\u4E86\u8BF8\u5982\u64CD\u4F5C\u7CFB\u7EDF\u7248\u672C\u3001CPU \u548C\u542F\u52A8\u65F6\u95F4\u7B49\u4FE1\u606F\u3002")]),h,f,n("p",null,[n("a",w,[s("util"),t(a)]),s("\u6A21\u5757\u63D0\u4F9B\u4E86\u5404\u79CD\u6709\u7528\u7684 JavaScript \u65B9\u6CD5\u3002\u5176\u4E2D\u6700\u6709\u7528\u7684\u662F"),n("a",y,[s("util.promisify(function)"),t(a)]),s("\uFF0C\u8BE5\u65B9\u6CD5\u63A5\u6536\u9519\u8BEF\u4F18\u5148\u7C7B\u578B\u7684\u56DE\u8C03\u51FD\u6570\uFF0C\u5E76\u8FD4\u56DE\u57FA\u4E8E promise \u7684\u51FD\u6570\u3002Util \u6A21\u5757\u8FD8\u53EF\u4EE5\u5E2E\u52A9\u5904\u7406\u4E00\u4E9B\u5E38\u89C1\u6A21\u5F0F\uFF0C\u8BF8\u5982\u89E3\u7801\u6587\u672C\u3001\u7C7B\u578B\u68C0\u67E5\u548C\u68C0\u67E5\u5BF9\u8C61\u3002")]),n("ul",null,[j,_,n("li",null,[s("util.format(format, [args])\uFF1A\u8FD4\u56DE\u4E00\u4E2A\u4F7F\u7528\u7C7B"),n("a",x,[s("printf \u683C\u5F0F"),t(a)]),s("\u7684\u5B57\u7B26\u4E32\u3002")]),q,N,P]),I,n("p",null,[n("a",S,[s("URL"),t(a)]),s("\u662F\u53E6\u4E00\u4E2A\u5168\u5C40\u5BF9\u8C61\uFF0C\u53EF\u4EE5\u8BA9\u4F60\u5B89\u5168\u5730\u521B\u5EFA\u3001\u89E3\u6790\u4EE5\u53CA\u4FEE\u6539 web URL\u3002\u5B83\u5BF9\u4E8E\u4ECE URL \u4E2D\u5FEB\u901F\u63D0\u53D6\u534F\u8BAE\u3001\u7AEF\u53E3\u3001\u53C2\u6570\u548C\u54C8\u5E0C\u503C\u975E\u5E38\u6709\u7528\uFF0C\u800C\u4E0D\u9700\u8981\u501F\u52A9\u4E8E\u6B63\u5219\u3002\u6BD4\u5982\uFF1A")]),R,n("p",null,[s("\u7136\u540E\u53EF\u4EE5\u4F7F\u7528"),n("a",U,[s("URLSearchParams"),t(a)]),s(" API \u4FEE\u6539\u67E5\u8BE2\u5B57\u7B26\u4E32\u503C\u3002\u6BD4\u5982\uFF1A")]),C,n("p",null,[s("\u8FD8\u6709\u4E00\u4E9B\u65B9\u6CD5\u53EF\u4EE5\u5C06\u6587\u4EF6\u7CFB\u7EDF\u8DEF\u5F84"),n("a",E,[s("\u8F6C\u6362"),t(a)]),s("\u4E3A URL\uFF0C\u7136\u540E\u518D"),n("a",O,[s("\u8F6C\u6362"),t(a)]),s("\u56DE\u6765\u3002")]),n("p",null,[n("a",A,[F,t(a)]),s("\u6A21\u5757\u63D0\u4F9B\u540D\u79F0\u89E3\u6790\u529F\u80FD\uFF0C\u56E0\u6B64\u4F60\u53EF\u4EE5\u67E5\u8BE2 IP \u5730\u5740\u3001\u540D\u79F0\u670D\u52A1\u5668\u3001TXT \u8BB0\u5F55\u548C\u5176\u4ED6\u57DF\u540D\u4FE1\u606F\u3002")]),T,n("p",null,[n("a",D,[s("fs"),t(a)]),s(" API \u53EF\u4EE5\u521B\u5EFA\u3001\u8BFB\u53D6\u3001\u66F4\u65B0\u4EE5\u53CA\u5220\u9664\u6587\u4EF6\u3001\u76EE\u5F55\u4EE5\u53CA\u6743\u9650\u3002\u6700\u8FD1\u53D1\u5E03\u7684 Node.js \u8FD0\u884C\u65F6\u5728 fs/promises \u4E2D\u63D0\u4F9B\u4E86\u57FA\u4E8E promise \u7684\u51FD\u6570\uFF0C\u8FD9\u4F7F\u5F97\u7BA1\u7406\u5F02\u6B65\u6587\u4EF6\u64CD\u4F5C\u66F4\u52A0\u5BB9\u6613\u3002")]),L,n("p",null,[n("a",$,[s("Events"),t(a)]),s(" API \u63D0\u4F9B\u4E86\u4E00\u79CD\u4F7F\u7528\u53D1\u5E03\u8BA2\u9605\u6A21\u5F0F\u6784\u9020\u4EE3\u7801\u7684\u66FF\u4EE3\u65B9\u5F0F\u3002userRegister()\u51FD\u6570\u53EF\u4EE5\u5728\u7528\u6237\u7684\u6570\u636E\u5E93\u8BB0\u5F55\u88AB\u521B\u5EFA\u540E\u89E6\u53D1\u4E00\u4E2A\u4E8B\u4EF6--\u4E5F\u8BB8\u540D\u4E3A newuser\u3002")]),W,n("p",null,[s("\u5728\u5927\u591A\u6570\u60C5\u51B5\u4E0B\uFF0C\u4F60\u8981\u4E3A\u7528\u6237\u6216\u6D4F\u89C8\u5668\u4E8B\u4EF6\u9644\u52A0\u5904\u7406\u5668\uFF0C\u5C3D\u7BA1\u4F60\u53EF\u4EE5\u63D0\u51FA\u4F60\u81EA\u5DF1\u7684"),n("a",J,[s("\u81EA\u5B9A\u4E49\u4E8B\u4EF6"),t(a)]),s("\u3002Node.js \u7684\u4E8B\u4EF6\u5904\u7406\u5728\u6982\u5FF5\u4E0A\u662F\u76F8\u4F3C\u7684\uFF0C\u4F46 API \u662F\u4E0D\u540C\u7684\u3002")]),M,n("p",null,[n("a",z,[s("\u4E8B\u4EF6\u793A\u4F8B\u9879\u76EE"),t(a)]),s("\u63D0\u4F9B\u4E86\u4E00\u4E2A\u7C7B\uFF0C\u8BE5\u7C7B\u53EF\u4EE5\u5728\u9884\u5B9A\u7684\u65F6\u95F4\u95F4\u9694\u5185\u89E6\u53D1\u4E00\u4E2A tick \u4E8B\u4EF6\u3002./lib/ticker.js \u6A21\u5757\u5BFC\u51FA\u4E00\u4E2A default class\uFF0C\u5E76 extends EventEmitter\uFF1A")]),B,n("p",null,[s("\u6BCF\u5757\u6570\u636E\u90FD\u4EE5"),n("a",V,[s("Buffer \u5BF9\u8C61"),t(a)]),s("\u7684\u5F62\u5F0F\u8FD4\u56DE\uFF0C\u5B83\u4EE3\u8868\u4E00\u4E2A\u56FA\u5B9A\u957F\u5EA6\u7684\u5B57\u8282\u5E8F\u5217\u3002\u4F60\u53EF\u80FD\u9700\u8981\u5C06\u5176\u8F6C\u6362\u4E3A\u5B57\u7B26\u4E32\u6216\u5176\u4ED6\u9002\u5F53\u7684\u7C7B\u578B\u8FDB\u884C\u5904\u7406\u3002")]),n("p",null,[s("\u8BE5\u793A\u4F8B\u4EE3\u7801\u6709\u4E00\u4E2A"),n("a",H,[s("filestream"),t(a)]),s("\u9879\u76EE\uFF0C\u5B83\u4F7F\u7528\u4E00\u4E2A\u8F6C\u6362\u6D41\u6765\u89E3\u51B3 filecompress \u9879\u76EE\u4E2D\u7684\u6587\u4EF6\u5927\u5C0F\u95EE\u9898\u3002\u548C\u4EE5\u524D\u4E00\u6837\uFF0C\u5B83\u5728\u58F0\u660E\u4E00\u4E2A\u7EE7\u627F Transform \u7684 Compress \u7C7B\u4E4B\u524D\uFF0C\u63A5\u53D7\u5E76\u9A8C\u8BC1\u4E86\u8F93\u5165\u548C\u8F93\u51FA\u7684\u6587\u4EF6\u540D\uFF1A")]),K,n("p",null,[n("a",G,[s("\u5B98\u65B9\u6587\u6863"),t(a)]),s("\u662F\u8FD9\u4E48\u8BF4\u7684\uFF1AWorkers\uFF08\u7EBF\u7A0B\uFF09\u5BF9\u4E8E\u6267\u884C CPU \u5BC6\u96C6\u578B\u7684 JavaScript \u64CD\u4F5C\u5F88\u6709\u7528\u3002\u5B83\u4EEC\u5BF9 I/O \u5BC6\u96C6\u578B\u7684\u5DE5\u4F5C\u5E2E\u52A9\u4E0D\u5927\u3002Node.js \u5185\u7F6E\u7684\u5F02\u6B65 I/O \u64CD\u4F5C\u6BD4 Workers \u7684\u6548\u7387\u66F4\u9AD8\u3002")]),X,Q,Y,Z,nn,sn,an,n("p",null,[s("\u793A\u4F8B\u4EE3\u7801\u6709\u4E00\u4E2A"),n("a",tn,[s("worker \u9879\u76EE"),t(a)]),s("\uFF0C\u5176\u5728 lib/dice.js \u4E2D\u5BFC\u51FA diceRun()\u51FD\u6570\u3002\u8FD9\u662F\u5C06\u4EFB\u610F\u6570\u91CF\u7684 N \u9762\u9AB0\u5B50\u6295\u63B7\u82E5\u5E72\u6B21\uFF0C\u5E76\u8BB0\u5F55\u603B\u5206\u7684\u8BA1\u6570\uFF08\u5E94\u8BE5\u662F\u6B63\u6001\u5206\u5E03\u66F2\u7EBF\u7684\u7ED3\u679C\uFF09\uFF1A")]),en,n("ul",null,[n("li",null,[n("a",pn,[s("child process API"),t(a)]),s("\u5141\u8BB8\u4F60\u8FD0\u884C\u5B50\u8FDB\u7A0B\uFF0C\u5982\u6709\u5FC5\u8981\u4F60\u53EF\u4EE5\u76D1\u63A7\u5E76\u7EC8\u6B62\u3002\u8FD9\u91CC\u6709\u4E09\u4E2A\u9009\u9879\uFF1A "),on])]),cn,ln,n("p",null,[s("\u5F53\u4F60\u7684 Node.js \u5E94\u7528\u7A0B\u5E8F\u5728\u5355\u6838\u4E0A\u8FD0\u884C\u65F6\uFF0C\u4F60\u7684 64 \u6838\u670D\u52A1\u5668 CPU \u662F\u5426\u6CA1\u6709\u5F97\u5230\u5145\u5206\u5229\u7528\uFF1F"),n("a",un,[s("Cluster"),t(a)]),s("\u5141\u8BB8\u4F60 fork \u4EFB\u4F55\u6570\u91CF\u7684\u76F8\u540C\u8FDB\u7A0B\u6765\u66F4\u6709\u6548\u5730\u5904\u7406\u8D1F\u8F7D\u3002")]),rn,n("ul",null,[n("li",null,[s("\u96C6\u7FA4\u7684\u5DE5\u4F5C\u6548\u679C\u60CA\u4EBA\uFF0C\u4F46\u4F60\u7684\u4EE3\u7801\u53EF\u80FD\u53D8\u5F97\u590D\u6742\u3002\u66F4\u7B80\u5355\u548C\u66F4\u5F3A\u5927\u7684\u9009\u62E9\u5305\u62EC\uFF1A "),n("ul",null,[n("li",null,[s("\u8FDB\u7A0B\u7BA1\u7406\u5668\u6BD4\u5982"),n("a",kn,[s("PM2"),t(a)]),s("\uFF0C\u5B83\u63D0\u4F9B\u4E86\u4E00\u4E2A\u81EA\u52A8\u96C6\u7FA4\u6A21\u5F0F")]),n("li",null,[s("\u5BB9\u5668\u7BA1\u7406\u7CFB\u7EDF\uFF0C\u5982"),n("a",dn,[s("Docker"),t(a)]),s("\u6216"),n("a",mn,[s("Kubernetes"),t(a)])])])])]),vn,gn,bn])}const jn=p(i,[["render",hn],["__file","08.html.vue"]]);export{jn as default};
