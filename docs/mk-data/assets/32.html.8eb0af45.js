import{_ as t,r as c,o as p,c as o,b as n,d as s,e,a as l}from"./app.1aa530a2.js";const i={},u=l(`<h1 id="\u4E0D\u8981\u7ED9-async-\u51FD\u6570\u5199\u90A3\u4E48\u591A-try-catch-\u4E86" tabindex="-1"><a class="header-anchor" href="#\u4E0D\u8981\u7ED9-async-\u51FD\u6570\u5199\u90A3\u4E48\u591A-try-catch-\u4E86" aria-hidden="true">#</a> \u4E0D\u8981\u7ED9 async \u51FD\u6570\u5199\u90A3\u4E48\u591A try/catch \u4E86</h1><ul><li>\u5728\u5F00\u53D1\u4E2D\uFF0C\u4F60\u662F\u5426\u4F1A\u4E3A\u4E86\u7CFB\u7EDF\u5065\u58EE\u6027\uFF0C\u4EA6\u6216\u8005\u662F\u4E3A\u4E86\u6355\u83B7\u5F02\u6B65\u7684\u9519\u8BEF\uFF0C\u800C\u9891\u7E41\u7684\u5728 async \u51FD\u6570\u4E2D\u5199 try/catch \u7684\u903B\u8F91\uFF1F</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">asyncFunc</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">//......</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u5904\u7406 async/await \u7684\u65B9\u6CD5</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">errorCaptured</span><span class="token punctuation">(</span><span class="token parameter">asyncFunc</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">asyncFunc</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token keyword">null</span><span class="token punctuation">,</span> res<span class="token punctuation">]</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">[</span>e<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u8FD9\u6837\u6211\u4EEC\u5C31\u53EF\u4EE5\u4F7F\u7528\u4E00\u4E2A\u8F85\u52A9\u51FD\u6570\u5305\u88F9\u8FD9\u4E2A async \u51FD\u6570\u5B9E\u73B0\u9519\u8BEF\u6355\u83B7</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">[</span>err<span class="token punctuation">,</span> res<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">errorCaptured</span><span class="token punctuation">(</span>asyncFunc<span class="token punctuation">)</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u9519\u8BEF\u5904\u7406</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F46\u662F\u8FD9\u4E48\u505A\u6709\u4E00\u4E2A\u7F3A\u9677\u5C31\u662F\u6BCF\u6B21\u4F7F\u7528\u7684\u65F6\u5019\uFF0C\u90FD\u8981\u5F15\u5165 errorCaptured \u8FD9\u4E2A\u8F85\u52A9\u51FD\u6570\uFF0C\u6709\u6CA1\u6709\u201C\u61D2\u201D\u7684\u65B9\u6CD5\u5462\uFF1F \u7B54\u6848\u80AF\u5B9A\u662F\u6709\u7684\uFF0C\u6211\u5728\u90A3\u7BC7\u535A\u5BA2\u540E\u63D0\u51FA\u4E86\u4E00\u4E2A\u65B0\u7684\u601D\u8DEF\uFF0C\u53EF\u4EE5\u901A\u8FC7\u4E00\u4E2A webpack loader \u6765\u81EA\u52A8\u6CE8\u5165 try/catch \u4EE3\u7801\uFF0C\u6700\u540E\u7684\u7ED3\u679C\u5E0C\u671B\u662F\u8FD9\u6837\u7684</p>`,8),r={class:"custom-container tip"},d=n("p",{class:"custom-container-title"},"\u63A8\u8350",-1),k={href:"https://www.babeljs.cn/",target:"_blank",rel:"noopener noreferrer"},v={href:"https://github.com/jamiebuilds/babel-handbook",target:"_blank",rel:"noopener noreferrer"},b={href:"https://github.com/yeyan1996/async-catch-loader",target:"_blank",rel:"noopener noreferrer"};function m(y,h){const a=c("ExternalLinkIcon");return p(),o("div",null,[u,n("div",r,[d,n("p",null,[s("\u5173\u4E8Ebabel\u8FD9\u91CC\u63A8\u8350\u67E5\u770B"),n("a",k,[s("babel\u7684\u5B98\u65B9\u6587\u6863"),e(a)]),s("\u6216\u8005"),n("a",v,[s("babel\u624B\u4E66"),e(a)])])]),n("p",null,[n("a",b,[s("\u63A8\u8350\u9519\u8BEF\u5904\u7406babel\u63D2\u4EF6"),e(a)])])])}const w=t(i,[["render",m],["__file","32.html.vue"]]);export{w as default};
