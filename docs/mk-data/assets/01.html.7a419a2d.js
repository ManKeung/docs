import{_ as n,o as s,c as a,a as t}from"./app.3777ec56.js";const p={},e=t(`<h1 id="\u5C01\u88C5-axios-\u62E6\u622A\u5668\u5B9E\u73B0\u7528\u6237\u65E0\u611F\u5237\u65B0-access-token" tabindex="-1"><a class="header-anchor" href="#\u5C01\u88C5-axios-\u62E6\u622A\u5668\u5B9E\u73B0\u7528\u6237\u65E0\u611F\u5237\u65B0-access-token" aria-hidden="true">#</a> \u5C01\u88C5 axios \u62E6\u622A\u5668\u5B9E\u73B0\u7528\u6237\u65E0\u611F\u5237\u65B0 access_token</h1><p>\u6700\u8FD1\u505A\u9879\u76EE\u7684\u65F6\u5019\uFF0C\u6D89\u53CA\u5230\u4E00\u4E2A\u5355\u70B9\u767B\u5F55\uFF0C\u5373\u662F\u9879\u76EE\u7684\u767B\u5F55\u9875\u9762\uFF0C\u7528\u7684\u662F\u516C\u53F8\u5171\u7528\u7684\u4E00\u4E2A\u767B\u5F55\u9875\u9762\uFF0C\u5728\u8BE5\u9875\u9762\u7EDF\u4E00\u5904\u7406\u903B\u8F91\u3002\u6700\u7EC8\u5B9E\u73B0\u7528\u6237\u53EA\u9700\u767B\u5F55\u4E00\u6B21\uFF0C\u5C31\u53EF\u4EE5\u4EE5\u767B\u5F55\u72B6\u6001\u8BBF\u95EE\u516C\u53F8\u65D7\u4E0B\u7684\u6240\u6709\u7F51\u7AD9\u3002</p><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>\u5355\u70B9\u767B\u5F55( Single Sign On \uFF0C\u7B80\u79F0 SSO\uFF09\uFF0C\u662F\u76EE\u524D\u6BD4\u8F83\u6D41\u884C\u7684\u4F01\u4E1A\u4E1A\u52A1\u6574\u5408\u7684\u89E3\u51B3\u65B9\u6848\u4E4B\u4E00\uFF0C\u7528\u4E8E\u591A\u4E2A\u5E94\u7528\u7CFB\u7EDF\u95F4\uFF0C\u7528\u6237\u53EA\u9700\u8981\u767B\u5F55\u4E00\u6B21\u5C31\u53EF\u4EE5\u8BBF\u95EE\u6240\u6709\u76F8\u4E92\u4FE1\u4EFB\u7684\u5E94\u7528\u7CFB\u7EDF\u3002</p></div><p>\u5176\u4E2D\u672C\u6587\u8BB2\u7684\u662F\u5728\u767B\u5F55\u540E\u5982\u4F55\u7BA1\u7406<code>access_token</code>\u548C<code>refresh_token</code>\uFF0C\u4E3B\u8981\u5C31\u662F\u5C01\u88C5 axios\u62E6\u622A\u5668\uFF0C\u5728\u6B64\u8BB0\u5F55\u3002</p><h2 id="\u524D\u7F6E\u573A\u666F" tabindex="-1"><a class="header-anchor" href="#\u524D\u7F6E\u573A\u666F" aria-hidden="true">#</a> \u524D\u7F6E\u573A\u666F</h2><ol><li><p>\u8FDB\u5165\u8BE5\u9879\u76EE\u67D0\u4E2A\u9875\u9762<code>http://xxxx.project.com/profile</code>\u9700\u8981\u767B\u5F55\uFF0C\u672A\u767B\u5F55\u5C31\u8DF3\u8F6C\u81F3SSO\u767B\u5F55\u5E73\u53F0\uFF0C\u6B64\u65F6\u7684\u767B\u5F55\u7F51\u5740 url\u4E3A<code>http://xxxxx.com/login?app_id=project_name_id&amp;redirect_url=http://xxxx.project.com/profile</code>\uFF0C\u5176\u4E2D<code>app_id</code>\u662F\u540E\u53F0\u90A3\u8FB9\u7EA6\u5B9A\u5B9A\u4E49\u597D\u7684\uFF0C<code>redirect_url</code>\u662F\u6210\u529F\u6388\u6743\u540E\u6307\u5B9A\u7684\u56DE\u8C03\u5730\u5740\u3002</p></li><li><p>\u8F93\u5165\u8D26\u53F7\u5BC6\u7801\u4E14\u6B63\u786E\u540E\uFF0C\u5C31\u4F1A\u91CD\u5B9A\u5411\u56DE\u521A\u5F00\u59CB\u8FDB\u5165\u7684\u9875\u9762\uFF0C\u5E76\u5728\u5730\u5740\u680F\u5E26\u4E00\u4E2A\u53C2\u6570<code>?code=XXXXX</code>\uFF0C\u5373\u662F<code>http://xxxx.project.com/profile?code=XXXXXX</code>\uFF0Ccode\u7684\u503C\u662F\u4F7F\u7528\u4E00\u6B21\u540E\u5373\u65E0\u6548\uFF0C\u4E1410\u5206\u949F\u5185\u8FC7\u671F</p></li><li><p>\u7ACB\u9A6C\u83B7\u53D6\u8FD9\u4E2Acode\u503C\u518D\u53BB\u8BF7\u6C42\u4E00\u4E2Aapi <code>/access_token/authenticate</code>\uFF0C\u643A\u5E26\u53C2\u6570<code>{ verify_code: code }</code>\uFF0C\u5E76\u4E14\u8BE5api\u5DF2\u7ECF\u81EA\u5E26<code>app_id</code>\u548C<code>app_secret</code>\u4E24\u4E2A\u56FA\u5B9A\u503C\u53C2\u6570\uFF0C\u901A\u8FC7\u5B83\u53BB\u8BF7\u6C42\u6388\u6743\u7684api\uFF0C\u8BF7\u6C42\u6210\u529F\u540E\u5F97\u5230\u8FD4\u56DE\u503C<code>{ access_token: &quot;xxxxxxx&quot;, refresh_token: &quot;xxxxxxxx&quot;, expires_in: xxxxxxxx }</code>\uFF0C\u5B58\u4E0B<code>access_token</code>\u548C<code>refresh_token</code>\u5230cookie\u4E2D\uFF08localStorage\u4E5F\u53EF\u4EE5\uFF09\uFF0C\u6B64\u65F6\u7528\u6237\u5C31\u7B97\u767B\u5F55\u6210\u529F\u4E86\u3002</p></li><li><p><code>access_token</code>\u4E3A\u6807\u51C6JWT\u683C\u5F0F\uFF0C\u662F\u6388\u6743\u4EE4\u724C\uFF0C\u53EF\u4EE5\u7406\u89E3\u5C31\u662F\u9A8C\u8BC1\u7528\u6237\u8EAB\u4EFD\u7684\uFF0C\u662F\u5E94\u7528\u5728\u8C03\u7528api\u8BBF\u95EE\u548C\u4FEE\u6539\u7528\u6237\u6570\u636E\u5FC5\u987B\u4F20\u5165\u7684\u53C2\u6570\uFF08\u653E\u5728\u8BF7\u6C42\u5934headers\u91CC\uFF09\uFF0C2\u5C0F\u65F6\u540E\u8FC7\u671F\u3002\u4E5F\u5C31\u662F\u8BF4\uFF0C\u505A\u5B8C\u524D\u4E09\u6B65\u540E\uFF0C\u4F60\u53EF\u4EE5\u8C03\u7528\u9700\u8981\u7528\u6237\u767B\u5F55\u624D\u80FD\u4F7F\u7528\u7684api\uFF1B\u4F46\u662F\u5047\u5982\u4F60\u4EC0\u4E48\u90FD\u4E0D\u64CD\u4F5C\uFF0C\u9759\u9759\u8FC7\u53BB\u4E24\u4E2A\u5C0F\u65F6\u540E\uFF0C\u518D\u53BB\u8BF7\u6C42\u8FD9\u4E9Bapi\uFF0C\u5C31\u4F1A\u62A5<code>access_token</code>\u8FC7\u671F\uFF0C\u8C03\u7528\u5931\u8D25\u3002</p></li><li><p>\u90A3\u4E48\u603B\u4E0D\u80FD2\u5C0F\u65F6\u540E\u5C31\u8BA9\u7528\u6237\u9000\u51FA\u767B\u5F55\u5427\uFF0C\u89E3\u51B3\u65B9\u6CD5\u5C31\u662F\u4E24\u5C0F\u65F6\u540E\u62FF\u7740\u8FC7\u671F\u7684<code>access_token</code>\u548C<code>refresh_token</code>\uFF08<code>refresh_token</code>\u8FC7\u671F\u65F6\u95F4\u4E00\u822C\u957F\u4E00\u4E9B\uFF0C\u6BD4\u5982\u4E00\u4E2A\u6708\u6216\u66F4\u957F\uFF09\u53BB\u8BF7\u6C42<code>/refresh</code> api\uFF0C\u8FD4\u56DE\u7ED3\u679C\u4E3A<code>{ access_token: &quot;xxxxx&quot;, expires_in: xxxxx }</code>\uFF0C\u6362\u53D6\u65B0\u7684<code>access_token</code>\uFF0C\u65B0\u7684<code>access_token</code>\u8FC7\u671F\u65F6\u95F4\u4E5F\u662F2\u5C0F\u65F6\uFF0C\u5E76\u91CD\u65B0\u5B58\u5230cookie\uFF0C\u5FAA\u73AF\u5F80\u590D\u7EE7\u7EED\u4FDD\u6301\u767B\u5F55\u8C03\u7528\u7528\u6237api\u4E86\u3002<code>refresh_token</code>\u5728\u9650\u5B9A\u8FC7\u671F\u65F6\u95F4\u5185\uFF08\u6BD4\u5982\u4E00\u5468\u6216\u4E00\u4E2A\u6708\u7B49\uFF09\uFF0C\u4E0B\u6B21\u5C31\u53EF\u4EE5\u7EE7\u7EED\u6362\u53D6\u65B0\u7684<code>access_token</code>\uFF0C\u4F46\u8FC7\u4E86\u9650\u5B9A\u65F6\u95F4\uFF0C\u5C31\u7B97\u771F\u6B63\u610F\u4E49\u8FC7\u671F\u4E86\uFF0C\u4E5F\u5C31\u8981\u91CD\u65B0\u8F93\u5165\u8D26\u53F7\u5BC6\u7801\u6765\u767B\u5F55\u4E86\u3002</p></li></ol><p>\u516C\u53F8\u7F51\u7AD9\u767B\u5F55\u8FC7\u671F\u65F6\u95F4\u90FD\u53EA\u6709\u4E24\u5C0F\u65F6\uFF08token\u8FC7\u671F\u65F6\u95F4\uFF09\uFF0C\u4F46\u53C8\u60F3\u8BA9\u4E00\u4E2A\u6708\u5185\u7ECF\u5E38\u6D3B\u8DC3\u7684\u7528\u6237\u4E0D\u518D\u6B21\u767B\u5F55\uFF0C\u4E8E\u662F\u624D\u6709\u8FD9\u6837\u9700\u6C42\uFF0C\u907F\u514D\u4E86\u7528\u6237\u518D\u6B21\u8F93\u5165\u8D26\u53F7\u5BC6\u7801\u767B\u5F55\u3002</p><p>\u4E3A\u4EC0\u4E48\u8981\u4E13\u95E8\u7528\u4E00\u4E2A<code>refresh_token</code>\u53BB\u66F4\u65B0<code>access_token</code>\u5462\uFF1F\u9996\u5148<code>access_token</code>\u4F1A\u5173\u8054\u4E00\u5B9A\u7684\u7528\u6237\u6743\u9650\uFF0C\u5982\u679C\u7528\u6237\u6388\u6743\u66F4\u6539\u4E86\uFF0C\u8FD9\u4E2A<code>access_token</code>\u4E5F\u662F\u9700\u8981\u88AB\u5237\u65B0\u4EE5\u5173\u8054\u65B0\u7684\u6743\u9650\u7684\uFF0C\u5982\u679C\u6CA1\u6709 <code>refresh_token</code>\uFF0C\u4E5F\u53EF\u4EE5\u5237\u65B0<code>access_token</code>\uFF0C\u4F46\u6BCF\u6B21\u5237\u65B0\u90FD\u8981\u7528\u6237\u8F93\u5165\u767B\u5F55\u7528\u6237\u540D\u4E0E\u5BC6\u7801\uFF0C\u591A\u9EBB\u70E6\u3002\u6709\u4E86<code>refresh_token</code>\uFF0C\u53EF\u4EE5\u51CF\u5C11\u8FD9\u4E2A\u9EBB\u70E6\uFF0C\u5BA2\u6237\u7AEF\u76F4\u63A5\u7528<code>refresh_token</code>\u53BB\u66F4\u65B0<code>access_token</code>\uFF0C\u65E0\u9700\u7528\u6237\u8FDB\u884C\u989D\u5916\u7684\u64CD\u4F5C\u3002</p><p>\u8BF4\u4E86\u8FD9\u4E48\u591A\uFF0C\u6216\u8BB8\u6709\u4EBA\u4F1A\u5410\u69FD\uFF0C\u4E00\u4E2A\u767B\u5F55\u7528<code>access_token</code>\u5C31\u884C\u4E86\u8FD8\u8981\u52A0\u4E2A<code>refresh_token</code>\u641E\u5F97\u8FD9\u4E48\u9EBB\u70E6\uFF0C\u6216\u8005\u6709\u7684\u516C\u53F8<code>refresh_token</code>\u662F\u540E\u53F0\u5305\u529E\u7684\u5E76\u4E0D\u9700\u8981\u524D\u7AEF\u5904\u7406\u3002\u4F46\u662F\uFF0C\u524D\u7F6E\u573A\u666F\u5728\u90A3\u4E86\uFF0C\u9700\u6C42\u90FD\u662F\u57FA\u4E8E\u8BE5\u573A\u666F\u4E0B\u7684\u3002</p><h2 id="\u9700\u6C42" tabindex="-1"><a class="header-anchor" href="#\u9700\u6C42" aria-hidden="true">#</a> \u9700\u6C42</h2><ol><li><p>\u5F53<code>access_token</code>\u8FC7\u671F\u7684\u65F6\u5019\uFF0C\u8981\u7528<code>refresh_token</code>\u53BB\u8BF7\u6C42\u83B7\u53D6\u65B0\u7684<code>access_token</code>\uFF0C\u524D\u7AEF\u9700\u8981\u505A\u5230\u7528\u6237\u65E0\u611F\u77E5\u7684\u5237\u65B0<code>access_token</code>\u3002\u6BD4\u5982\u7528\u6237\u53D1\u8D77\u4E00\u4E2A\u8BF7\u6C42\u65F6\uFF0C\u5982\u679C\u5224\u65AD<code>access_token</code>\u5DF2\u7ECF\u8FC7\u671F\uFF0C\u90A3\u4E48\u5C31\u5148\u8981\u53BB\u8C03\u7528\u5237\u65B0token\u63A5\u53E3\u62FF\u5230\u65B0\u7684<code>access_token</code>\uFF0C\u518D\u91CD\u65B0\u53D1\u8D77\u7528\u6237\u8BF7\u6C42\u3002</p></li><li><p>\u5982\u679C\u540C\u65F6\u53D1\u8D77\u591A\u4E2A\u7528\u6237\u8BF7\u6C42\uFF0C\u7B2C\u4E00\u4E2A\u7528\u6237\u8BF7\u6C42\u53BB\u8C03\u7528\u5237\u65B0token\u63A5\u53E3\uFF0C\u5F53\u63A5\u53E3\u8FD8\u6CA1\u8FD4\u56DE\u65F6\uFF0C\u5176\u4F59\u7684\u7528\u6237\u8BF7\u6C42\u4E5F\u4F9D\u65E7\u53D1\u8D77\u4E86\u5237\u65B0token\u63A5\u53E3\u8BF7\u6C42\uFF0C\u5C31\u4F1A\u5BFC\u81F4\u591A\u4E2A\u8BF7\u6C42\uFF0C\u8FD9\u4E9B\u8BF7\u6C42\u5982\u4F55\u5904\u7406\uFF0C\u5C31\u662F\u6211\u4EEC\u672C\u6587\u7684\u5185\u5BB9\u4E86\u3002</p></li></ol><h2 id="\u601D\u8DEF" tabindex="-1"><a class="header-anchor" href="#\u601D\u8DEF" aria-hidden="true">#</a> \u601D\u8DEF</h2><h3 id="\u65B9\u6848\u4E00" tabindex="-1"><a class="header-anchor" href="#\u65B9\u6848\u4E00" aria-hidden="true">#</a> \u65B9\u6848\u4E00</h3><p>\u5199\u5728\u8BF7\u6C42\u62E6\u622A\u5668\u91CC\uFF0C\u5728\u8BF7\u6C42\u524D\uFF0C\u5148\u5229\u7528\u6700\u521D\u8BF7\u6C42\u8FD4\u56DE\u7684\u5B57\u6BB5<code>expires_in</code>\u5B57\u6BB5\u6765\u5224\u65AD<code>access_token</code>\u662F\u5426\u5DF2\u7ECF\u8FC7\u671F\uFF0C\u82E5\u5DF2\u8FC7\u671F\uFF0C\u5219\u5C06\u8BF7\u6C42\u6302\u8D77\uFF0C\u5148\u5237\u65B0<code>access_token</code>\u540E\u518D\u7EE7\u7EED\u8BF7\u6C42\u3002</p><ul><li>\u4F18\u70B9\uFF1A\u80FD\u8282\u7701http\u8BF7\u6C42</li><li>\u7F3A\u70B9\uFF1A\u56E0\u4E3A\u4F7F\u7528\u4E86\u672C\u5730\u65F6\u95F4\u5224\u65AD\uFF0C\u82E5\u672C\u5730\u65F6\u95F4\u88AB\u7BE1\u6539\uFF0C\u6709\u6821\u9A8C\u5931\u8D25\u7684\u98CE\u9669</li></ul><h3 id="\u65B9\u6848\u4E8C" tabindex="-1"><a class="header-anchor" href="#\u65B9\u6848\u4E8C" aria-hidden="true">#</a> \u65B9\u6848\u4E8C</h3><p>\u5199\u5728\u54CD\u5E94\u62E6\u622A\u5668\u91CC\uFF0C\u62E6\u622A\u8FD4\u56DE\u540E\u7684\u6570\u636E\u3002\u5148\u53D1\u8D77\u7528\u6237\u8BF7\u6C42\uFF0C\u5982\u679C\u63A5\u53E3\u8FD4\u56DE<code>access_token</code>\u8FC7\u671F\uFF0C\u5148\u5237\u65B0<code>access_token</code>\uFF0C\u518D\u8FDB\u884C\u4E00\u6B21\u91CD\u8BD5\u3002</p><ul><li>\u4F18\u70B9\uFF1A\u65E0\u9700\u5224\u65AD\u65F6\u95F4</li><li>\u7F3A\u70B9\uFF1A\u4F1A\u6D88\u8017\u591A\u4E00\u6B21http\u8BF7\u6C42</li></ul><blockquote><p>\u5728\u6B64\u6211\u9009\u62E9\u7684\u662F\u65B9\u6848\u4E8C\u3002</p></blockquote><h2 id="\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u73B0" aria-hidden="true">#</a> \u5B9E\u73B0</h2><p>\u8FD9\u91CC\u4F7F\u7528axios\uFF0C\u5176\u4E2D\u505A\u7684\u662F\u8BF7\u6C42\u540E\u62E6\u622A\uFF0C\u6240\u4EE5\u7528\u5230\u7684\u662Faxios\u7684\u54CD\u5E94\u62E6\u622A\u5668<code>axios.interceptors.response.use()</code>\u65B9\u6CD5</p><h3 id="\u65B9\u6CD5\u4ECB\u7ECD" tabindex="-1"><a class="header-anchor" href="#\u65B9\u6CD5\u4ECB\u7ECD" aria-hidden="true">#</a> \u65B9\u6CD5\u4ECB\u7ECD</h3><ul><li>auth.js</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> Cookies <span class="token keyword">from</span> <span class="token string">&#39;js-cookie&#39;</span>

<span class="token keyword">const</span> <span class="token constant">TOKEN_KEY</span> <span class="token operator">=</span> <span class="token string">&#39;access_token&#39;</span>
<span class="token keyword">const</span> <span class="token constant">REGRESH_TOKEN_KEY</span> <span class="token operator">=</span> <span class="token string">&#39;refresh_token&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">getToken</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Cookies<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token constant">TOKEN_KEY</span><span class="token punctuation">)</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">setToken</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">token<span class="token punctuation">,</span> params <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    Cookies<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token constant">TOKEN_KEY</span><span class="token punctuation">,</span> token<span class="token punctuation">,</span> params<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">setRefreshToken</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">token</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    Cookies<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token constant">REGRESH_TOKEN_KEY</span><span class="token punctuation">,</span> token<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>request.js</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">&#39;axios&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> getToken<span class="token punctuation">,</span> setToken<span class="token punctuation">,</span> getRefreshToken <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./auth&#39;</span>

<span class="token comment">// \u5237\u65B0 access_token \u7684\u63A5\u53E3</span>
<span class="token keyword">const</span> <span class="token function-variable function">refreshToken</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> instance<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;/auth/refresh&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">refresh_token</span><span class="token operator">:</span> <span class="token function">getRefreshToken</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u521B\u5EFA axios \u5B9E\u4F8B</span>
<span class="token keyword">const</span> instance <span class="token operator">=</span> axios<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">baseURL</span><span class="token operator">:</span>  process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">GATSBY_API_URL</span><span class="token punctuation">,</span>
    <span class="token literal-property property">timeout</span><span class="token operator">:</span> <span class="token number">30000</span><span class="token punctuation">,</span>
    <span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token string-property property">&#39;Content-Type&#39;</span><span class="token operator">:</span> <span class="token string">&#39;application/json&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

instance<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>response<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token parameter">response</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> response
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token parameter">error</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>error<span class="token punctuation">.</span>response<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// token \u8FC7\u671F\u6216\u65E0\u6548\uFF0C\u8FD4\u56DE 401 \u72B6\u6001\u7801\uFF0C\u5728\u6B64\u5904\u7406\u903B\u8F91</span>
    <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// \u7ED9\u8BF7\u6C42\u5934\u6DFB\u52A0 access_token</span>
<span class="token keyword">const</span> <span class="token function-variable function">setHeaderToken</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">isNeedToken</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> accessToken <span class="token operator">=</span> isNeedToken <span class="token operator">?</span> <span class="token function">getToken</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token keyword">null</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>isNeedToken<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// api \u8BF7\u6C42\u9700\u8981\u643A\u5E26 access_token</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>accessToken<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u4E0D\u5B58\u5728 access_token \u5219\u8DF3\u8F6C\u56DE\u767B\u5F55\u9875&#39;</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
        instance<span class="token punctuation">.</span>defaults<span class="token punctuation">.</span>headers<span class="token punctuation">.</span>common<span class="token punctuation">.</span>Authorization <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Bearer </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>accessToken<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u6709\u4E9B api \u5E76\u4E0D\u9700\u8981\u7528\u6237\u6388\u6743\u4F7F\u7528\uFF0C\u5219\u4E0D\u643A\u5E26 access_token\uFF1B\u9ED8\u8BA4\u4E0D\u643A\u5E26\uFF0C\u9700\u8981\u4F20\u5219\u8BBE\u7F6E\u7B2C\u4E09\u4E2A\u53C2\u6570\u4E3A true</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">get</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">url<span class="token punctuation">,</span> params <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> isNeedToken <span class="token operator">=</span> <span class="token boolean">false</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setHeaderToken</span><span class="token punctuation">(</span>isNeedToken<span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token function">instance</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;get&#39;</span><span class="token punctuation">,</span>
        url<span class="token punctuation">,</span>
        params<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">post</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">url<span class="token punctuation">,</span> params <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> isNeedToken <span class="token operator">=</span> <span class="token boolean">false</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setHeaderToken</span><span class="token punctuation">(</span>isNeedToken<span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token function">instance</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;post&#39;</span><span class="token punctuation">,</span>
        url<span class="token punctuation">,</span>
        <span class="token literal-property property">data</span><span class="token operator">:</span> params<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u63A5\u4E0B\u6765\u6539\u9020 request.js\u4E2Daxios\u7684\u54CD\u5E94\u62E6\u622A\u5668</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>instance<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>response<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token parameter">response</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> response
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token parameter">error</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>error<span class="token punctuation">.</span>response<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>error<span class="token punctuation">.</span>response<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token number">401</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> <span class="token punctuation">{</span> config <span class="token punctuation">}</span> <span class="token operator">=</span> error
        <span class="token keyword">return</span> <span class="token function">refreshToken</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">const</span> <span class="token punctuation">{</span> access_token <span class="token punctuation">}</span> <span class="token operator">=</span> res<span class="token punctuation">.</span>data
            <span class="token function">setToken</span><span class="token punctuation">(</span>access_token<span class="token punctuation">)</span>
            config<span class="token punctuation">.</span>headers<span class="token punctuation">.</span>Authorization <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Bearer </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>access_token<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
            <span class="token keyword">return</span> <span class="token function">instance</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">err</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u62B1\u6B49\uFF0C\u60A8\u7684\u767B\u5F55\u72B6\u6001\u5DF2\u5931\u6548\uFF0C\u8BF7\u91CD\u65B0\u767B\u5F55\uFF01&#39;</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7EA6\u5B9A\u8FD4\u56DE401\u72B6\u6001\u7801\u8868\u793A<code>access_token</code>\u8FC7\u671F\u6216\u8005\u65E0\u6548\uFF0C\u5982\u679C\u7528\u6237\u53D1\u8D77\u4E00\u4E2A\u8BF7\u6C42\u540E\u8FD4\u56DE\u7ED3\u679C\u662F<code>access_token</code>\u8FC7\u671F\uFF0C\u5219\u8BF7\u6C42\u5237\u65B0<code>access_token</code>\u7684\u63A5\u53E3\u3002\u8BF7\u6C42\u6210\u529F\u5219\u8FDB\u5165<code>then</code>\u91CC\u9762\uFF0C\u91CD\u7F6E\u914D\u7F6E\uFF0C\u5E76\u5237\u65B0<code>access_token</code>\u5E76\u91CD\u65B0\u53D1\u8D77\u539F\u6765\u7684\u8BF7\u6C42\u3002</p><p>\u4F46\u5982\u679C<code>refresh_token</code>\u4E5F\u8FC7\u671F\u4E86\uFF0C\u5219\u8BF7\u6C42\u4E5F\u662F\u8FD4\u56DE401\u3002\u6B64\u65F6\u8C03\u8BD5\u4F1A\u53D1\u73B0\u51FD\u6570\u8FDB\u4E0D\u5230<code>refreshToken()</code>\u7684<code>catch</code>\u91CC\u9762\uFF0C\u90A3\u662F\u56E0\u4E3A<code>refreshToken()</code>\u65B9\u6CD5\u5185\u90E8\u662F\u4E5F\u662F\u7528\u4E86\u540C\u4E2A<code>instance</code>\u5B9E\u4F8B\uFF0C\u91CD\u590D\u54CD\u5E94\u62E6\u622A\u5668401\u7684\u5904\u7406\u903B\u8F91\uFF0C\u4F46\u8BE5\u51FD\u6570\u672C\u8EAB\u5C31\u662F\u5237\u65B0<code>access_token</code>\uFF0C\u6545\u9700\u8981\u628A\u8BE5\u63A5\u53E3\u6392\u9664\u6389\uFF0C\u5373\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>error<span class="token punctuation">.</span>response<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token number">401</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>error<span class="token punctuation">.</span>config<span class="token punctuation">.</span>url<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;/auth/refresh&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u4E0A\u8FF0\u4EE3\u7801\u5C31\u5DF2\u7ECF\u5B9E\u73B0\u4E86\u65E0\u611F\u5237\u65B0<code>access_token</code>\u4E86\uFF0C\u5F53<code>access_token</code>\u6CA1\u8FC7\u671F\uFF0C\u6B63\u5E38\u8FD4\u56DE\uFF1B\u8FC7\u671F\u65F6\uFF0C\u5219axios\u5185\u90E8\u8FDB\u884C\u4E86\u4E00\u6B21\u5237\u65B0token\u7684\u64CD\u4F5C\uFF0C\u518D\u91CD\u65B0\u53D1\u8D77\u539F\u6765\u7684\u8BF7\u6C42\u3002</p><h2 id="\u4F18\u5316" tabindex="-1"><a class="header-anchor" href="#\u4F18\u5316" aria-hidden="true">#</a> \u4F18\u5316</h2><h3 id="\u9632\u6B62\u591A\u6B21\u5237\u65B0-token" tabindex="-1"><a class="header-anchor" href="#\u9632\u6B62\u591A\u6B21\u5237\u65B0-token" aria-hidden="true">#</a> \u9632\u6B62\u591A\u6B21\u5237\u65B0 token</h3><p>\u5982\u679Ctoken\u662F\u8FC7\u671F\u7684\uFF0C\u90A3\u8BF7\u6C42\u5237\u65B0<code>access_token</code>\u7684\u63A5\u53E3\u8FD4\u56DE\u4E5F\u662F\u6709\u4E00\u5B9A\u65F6\u95F4\u95F4\u9694\uFF0C\u5982\u679C\u6B64\u65F6\u8FD8\u6709\u5176\u4ED6\u8BF7\u6C42\u53D1\u8FC7\u6765\uFF0C\u5C31\u4F1A\u518D\u6267\u884C\u4E00\u6B21\u5237\u65B0<code>access_token</code>\u7684\u63A5\u53E3\uFF0C\u5C31\u4F1A\u5BFC\u81F4\u591A\u6B21\u5237\u65B0<code>access_token</code>\u3002\u56E0\u6B64\uFF0C\u6211\u4EEC\u9700\u8981\u505A\u4E00\u4E2A\u5224\u65AD\uFF0C\u5B9A\u4E49\u4E00\u4E2A\u6807\u8BB0\u5224\u65AD\u5F53\u524D\u662F\u5426\u5904\u4E8E\u5237\u65B0<code>access_token</code>\u7684\u72B6\u6001\uFF0C\u5982\u679C\u5904\u5728\u5237\u65B0\u72B6\u6001\u5219\u4E0D\u518D\u5141\u8BB8\u5176\u4ED6\u8BF7\u6C42\u8C03\u7528\u8BE5\u63A5\u53E3\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> isRefreshing <span class="token operator">=</span> <span class="token boolean">false</span> <span class="token comment">// \u6807\u8BB0\u662F\u5426\u6B63\u5728\u5237\u65B0 token</span>
instance<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>response<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token parameter">response</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> response
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token parameter">error</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>error<span class="token punctuation">.</span>response<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>error<span class="token punctuation">.</span>response<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token number">401</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>error<span class="token punctuation">.</span>config<span class="token punctuation">.</span>url<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;/auth/refresh&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> <span class="token punctuation">{</span> config <span class="token punctuation">}</span> <span class="token operator">=</span> error
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isRefreshing<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            isRefreshing <span class="token operator">=</span> <span class="token boolean">true</span>
            <span class="token keyword">return</span> <span class="token function">refreshToken</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                <span class="token keyword">const</span> <span class="token punctuation">{</span> access_token <span class="token punctuation">}</span> <span class="token operator">=</span> res<span class="token punctuation">.</span>data
                <span class="token function">setToken</span><span class="token punctuation">(</span>access_token<span class="token punctuation">)</span>
                config<span class="token punctuation">.</span>headers<span class="token punctuation">.</span>Authorization <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Bearer </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>access_token<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
                <span class="token keyword">return</span> <span class="token function">instance</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">err</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u62B1\u6B49\uFF0C\u60A8\u7684\u767B\u5F55\u72B6\u6001\u5DF2\u5931\u6548\uFF0C\u8BF7\u91CD\u65B0\u767B\u5F55\uFF01&#39;</span><span class="token punctuation">)</span>
                <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                isRefreshing <span class="token operator">=</span> <span class="token boolean">false</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u540C\u65F6\u53D1\u8D77\u591A\u4E2A\u8BF7\u6C42\u7684\u5904\u7406" tabindex="-1"><a class="header-anchor" href="#\u540C\u65F6\u53D1\u8D77\u591A\u4E2A\u8BF7\u6C42\u7684\u5904\u7406" aria-hidden="true">#</a> \u540C\u65F6\u53D1\u8D77\u591A\u4E2A\u8BF7\u6C42\u7684\u5904\u7406</h3><p>\u4E0A\u9762\u505A\u6CD5\u8FD8\u4E0D\u591F\uFF0C\u56E0\u4E3A\u5982\u679C\u540C\u65F6\u53D1\u8D77\u591A\u4E2A\u8BF7\u6C42\uFF0C\u5728token\u8FC7\u671F\u7684\u60C5\u51B5\uFF0C\u7B2C\u4E00\u4E2A\u8BF7\u6C42\u8FDB\u5165\u5237\u65B0token\u65B9\u6CD5\uFF0C\u5219\u5176\u4ED6\u8BF7\u6C42\u8FDB\u53BB\u6CA1\u6709\u505A\u4EFB\u4F55\u903B\u8F91\u5904\u7406\uFF0C\u5355\u7EAF\u8FD4\u56DE\u5931\u8D25\uFF0C\u6700\u7EC8\u53EA\u6267\u884C\u4E86\u7B2C\u4E00\u4E2A\u8BF7\u6C42\uFF0C\u8FD9\u663E\u7136\u4E0D\u5408\u7406\u3002</p><p>\u6BD4\u5982\u540C\u65F6\u53D1\u8D77\u4E09\u4E2A\u8BF7\u6C42\uFF0C\u7B2C\u4E00\u4E2A\u8BF7\u6C42\u8FDB\u5165\u5237\u65B0token\u7684\u6D41\u7A0B\uFF0C\u7B2C\u4E8C\u4E2A\u548C\u7B2C\u4E09\u4E2A\u8BF7\u6C42\u9700\u8981\u5B58\u8D77\u6765\uFF0C\u7B49\u5230token\u66F4\u65B0\u540E\u518D\u91CD\u65B0\u53D1\u8D77\u8BF7\u6C42\u3002</p><p>\u5728\u6B64\uFF0C\u6211\u4EEC\u5B9A\u4E49\u4E00\u4E2A\u6570\u7EC4<code>requests</code>\uFF0C\u7528\u6765\u4FDD\u5B58\u5904\u4E8E\u7B49\u5F85\u7684\u8BF7\u6C42\uFF0C\u4E4B\u540E\u8FD4\u56DE\u4E00\u4E2A<code>Promise</code>\uFF0C\u53EA\u8981\u4E0D\u8C03\u7528<code>resolve</code>\u65B9\u6CD5\uFF0C\u8BE5\u8BF7\u6C42\u5C31\u4F1A\u5904\u4E8E\u7B49\u5F85\u72B6\u6001\uFF0C\u5219\u53EF\u4EE5\u77E5\u9053\u5176\u5B9E\u6570\u7EC4\u5B58\u7684\u662F\u51FD\u6570\uFF1B\u7B49\u5230token\u66F4\u65B0\u5B8C\u6BD5\uFF0C\u5219\u901A\u8FC7\u6570\u7EC4\u5FAA\u73AF\u6267\u884C\u51FD\u6570\uFF0C\u5373\u9010\u4E2A\u6267\u884C<code>resolve</code>\u91CD\u53D1\u8BF7\u6C42\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> isRefreshing <span class="token operator">=</span> <span class="token boolean">false</span> <span class="token comment">// \u6807\u8BB0\u662F\u5426\u6B63\u5728\u5237\u65B0 token</span>
<span class="token keyword">let</span> requests <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token comment">// \u5B58\u50A8\u5F85\u91CD\u53D1\u8BF7\u6C42\u7684\u6570\u7EC4</span>

instance<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>response<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token parameter">response</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> response
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token parameter">error</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>error<span class="token punctuation">.</span>response<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>error<span class="token punctuation">.</span>response<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token number">401</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>error<span class="token punctuation">.</span>config<span class="token punctuation">.</span>url<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;/auth/refresh&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> <span class="token punctuation">{</span> config <span class="token punctuation">}</span> <span class="token operator">=</span> error
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isRefreshing<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            isRefreshing <span class="token operator">=</span> <span class="token boolean">true</span>
            <span class="token keyword">return</span> <span class="token function">refreshToken</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                <span class="token keyword">const</span> <span class="token punctuation">{</span> access_token <span class="token punctuation">}</span> <span class="token operator">=</span> res<span class="token punctuation">.</span>data
                <span class="token function">setToken</span><span class="token punctuation">(</span>access_token<span class="token punctuation">)</span>
                config<span class="token punctuation">.</span>headers<span class="token punctuation">.</span>Authorization <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Bearer </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>access_token<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
                <span class="token comment">// token \u5237\u65B0\u540E\u5C06\u6570\u7EC4\u7684\u65B9\u6CD5\u91CD\u65B0\u6267\u884C</span>
                requests<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">cb</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">cb</span><span class="token punctuation">(</span>access_token<span class="token punctuation">)</span><span class="token punctuation">)</span>
                requests <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token comment">// \u91CD\u65B0\u8BF7\u6C42\u5B8C\u6E05\u7A7A</span>
                <span class="token keyword">return</span> <span class="token function">instance</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">err</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u62B1\u6B49\uFF0C\u60A8\u7684\u767B\u5F55\u72B6\u6001\u5DF2\u5931\u6548\uFF0C\u8BF7\u91CD\u65B0\u767B\u5F55\uFF01&#39;</span><span class="token punctuation">)</span>
                <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                isRefreshing <span class="token operator">=</span> <span class="token boolean">false</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u8FD4\u56DE\u672A\u6267\u884C resolve \u7684 Promise</span>
            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token parameter">resolve</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                <span class="token comment">// \u7528\u51FD\u6570\u5F62\u5F0F\u5C06 resolve \u5B58\u5165\uFF0C\u7B49\u5F85\u5237\u65B0\u540E\u518D\u6267\u884C</span>
                requests<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token parameter">token</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                    config<span class="token punctuation">.</span>headers<span class="token punctuation">.</span>Authorization <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Bearer </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>token<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
                    <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token function">instance</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u6700\u7EC8request.js\u4EE3\u7801</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">&#39;axios&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> getToken<span class="token punctuation">,</span> setToken<span class="token punctuation">,</span> getRefreshToken <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./auth&#39;</span>

<span class="token comment">// \u5237\u65B0 access_token \u7684\u63A5\u53E3</span>
<span class="token keyword">const</span> <span class="token function-variable function">refreshToken</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> instance<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;/auth/refresh&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">refresh_token</span><span class="token operator">:</span> <span class="token function">getRefreshToken</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u521B\u5EFA axios \u5B9E\u4F8B</span>
<span class="token keyword">const</span> instance <span class="token operator">=</span> axios<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">baseURL</span><span class="token operator">:</span>  process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">GATSBY_API_URL</span><span class="token punctuation">,</span>
    <span class="token literal-property property">timeout</span><span class="token operator">:</span> <span class="token number">30000</span><span class="token punctuation">,</span>
    <span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token string-property property">&#39;Content-Type&#39;</span><span class="token operator">:</span> <span class="token string">&#39;application/json&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">let</span> isRefreshing <span class="token operator">=</span> <span class="token boolean">false</span> <span class="token comment">// \u6807\u8BB0\u662F\u5426\u6B63\u5728\u5237\u65B0 token</span>
<span class="token keyword">let</span> requests <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token comment">// \u5B58\u50A8\u5F85\u91CD\u53D1\u8BF7\u6C42\u7684\u6570\u7EC4</span>

instance<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>response<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token parameter">response</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> response
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token parameter">error</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>error<span class="token punctuation">.</span>response<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>error<span class="token punctuation">.</span>response<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token number">401</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>error<span class="token punctuation">.</span>config<span class="token punctuation">.</span>url<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;/auth/refresh&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> <span class="token punctuation">{</span> config <span class="token punctuation">}</span> <span class="token operator">=</span> error
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isRefreshing<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            isRefreshing <span class="token operator">=</span> <span class="token boolean">true</span>
            <span class="token keyword">return</span> <span class="token function">refreshToken</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                <span class="token keyword">const</span> <span class="token punctuation">{</span> access_token <span class="token punctuation">}</span> <span class="token operator">=</span> res<span class="token punctuation">.</span>data
                <span class="token function">setToken</span><span class="token punctuation">(</span>access_token<span class="token punctuation">)</span>
                config<span class="token punctuation">.</span>headers<span class="token punctuation">.</span>Authorization <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Bearer </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>access_token<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
                <span class="token comment">// token \u5237\u65B0\u540E\u5C06\u6570\u7EC4\u7684\u65B9\u6CD5\u91CD\u65B0\u6267\u884C</span>
                requests<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">cb</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">cb</span><span class="token punctuation">(</span>access_token<span class="token punctuation">)</span><span class="token punctuation">)</span>
                requests <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token comment">// \u91CD\u65B0\u8BF7\u6C42\u5B8C\u6E05\u7A7A</span>
                <span class="token keyword">return</span> <span class="token function">instance</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">err</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u62B1\u6B49\uFF0C\u60A8\u7684\u767B\u5F55\u72B6\u6001\u5DF2\u5931\u6548\uFF0C\u8BF7\u91CD\u65B0\u767B\u5F55\uFF01&#39;</span><span class="token punctuation">)</span>
                <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                isRefreshing <span class="token operator">=</span> <span class="token boolean">false</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u8FD4\u56DE\u672A\u6267\u884C resolve \u7684 Promise</span>
            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token parameter">resolve</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                <span class="token comment">// \u7528\u51FD\u6570\u5F62\u5F0F\u5C06 resolve \u5B58\u5165\uFF0C\u7B49\u5F85\u5237\u65B0\u540E\u518D\u6267\u884C</span>
                requests<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token parameter">token</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                    config<span class="token punctuation">.</span>headers<span class="token punctuation">.</span>Authorization <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Bearer </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>token<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
                    <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token function">instance</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// \u7ED9\u8BF7\u6C42\u5934\u6DFB\u52A0 access_token</span>
<span class="token keyword">const</span> <span class="token function-variable function">setHeaderToken</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">isNeedToken</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> accessToken <span class="token operator">=</span> isNeedToken <span class="token operator">?</span> <span class="token function">getToken</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token keyword">null</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>isNeedToken<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// api \u8BF7\u6C42\u9700\u8981\u643A\u5E26 access_token</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>accessToken<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u4E0D\u5B58\u5728 access_token \u5219\u8DF3\u8F6C\u56DE\u767B\u5F55\u9875&#39;</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
        instance<span class="token punctuation">.</span>defaults<span class="token punctuation">.</span>headers<span class="token punctuation">.</span>common<span class="token punctuation">.</span>Authorization <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Bearer </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>accessToken<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u6709\u4E9B api \u5E76\u4E0D\u9700\u8981\u7528\u6237\u6388\u6743\u4F7F\u7528\uFF0C\u5219\u65E0\u9700\u643A\u5E26 access_token\uFF1B\u9ED8\u8BA4\u4E0D\u643A\u5E26\uFF0C\u9700\u8981\u4F20\u5219\u8BBE\u7F6E\u7B2C\u4E09\u4E2A\u53C2\u6570\u4E3A true</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">get</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">url<span class="token punctuation">,</span> params <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> isNeedToken <span class="token operator">=</span> <span class="token boolean">false</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setHeaderToken</span><span class="token punctuation">(</span>isNeedToken<span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token function">instance</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;get&#39;</span><span class="token punctuation">,</span>
        url<span class="token punctuation">,</span>
        params<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">post</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">url<span class="token punctuation">,</span> params <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> isNeedToken <span class="token operator">=</span> <span class="token boolean">false</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setHeaderToken</span><span class="token punctuation">(</span>isNeedToken<span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token function">instance</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;post&#39;</span><span class="token punctuation">,</span>
        url<span class="token punctuation">,</span>
        <span class="token literal-property property">data</span><span class="token operator">:</span> params<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,43),o=[e];function c(i,l){return s(),a("div",null,o)}const r=n(p,[["render",c],["__file","01.html.vue"]]);export{r as default};
