import{_ as n,o as s,c as a,a as e}from"./app.26f3bee3.js";const t={},p=e(`<h1 id="\u4E3A\u4EC0\u4E48-false-\u548C-false-\u90FD\u8FD4\u56DEtrue" tabindex="-1"><a class="header-anchor" href="#\u4E3A\u4EC0\u4E48-false-\u548C-false-\u90FD\u8FD4\u56DEtrue" aria-hidden="true">#</a> \u4E3A\u4EC0\u4E48\u201Cfalse == []\u201D\u548C\u201Cfalse == ![]\u201D\u90FD\u8FD4\u56DEtrue\uFF1F</h1><h2 id="\u4E3A\u4EC0\u4E48-false-\u548C-false-\u90FD\u8FD4\u56DEtrue-1" tabindex="-1"><a class="header-anchor" href="#\u4E3A\u4EC0\u4E48-false-\u548C-false-\u90FD\u8FD4\u56DEtrue-1" aria-hidden="true">#</a> \u4E3A\u4EC0\u4E48\u201Cfalse == []\u201D\u548C\u201Cfalse == ![]\u201D\u90FD\u8FD4\u56DEtrue\uFF1F</h2><p>\u670B\u53CB\u4EEC\uFF0C\u8BF7\u4E0D\u8981\u60CA\u8BB6\u8FD9\u786E\u5B9E\u662F\u6B63\u786E\u7B54\u6848\u3002</p><p>\u53EA\u8981\u6211\u4EEC\u6709\u4E86\u76F8\u7B49\u6BD4\u8F83\u548C\u76F8\u540C\u7684\u77E5\u8BC6\uFF0C\u6211\u4EEC\u5C31\u80FD\u5B8C\u5168\u7406\u89E3\u5B83\u662F\u600E\u4E48\u4E00\u56DE\u4E8B\u4E86\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token boolean">false</span> <span class="token operator">==</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token boolean">false</span> <span class="token operator">==</span> <span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8BA9\u6211\u7B80\u8981\u89E3\u91CA\u4E00\u4E0B\u5B83\u662F\u5982\u4F55\u5DE5\u4F5C\u7684\u3002</p><p>\u5F53\u6211\u4EEC\u9047\u5230\u4E00\u4E2A\u5E03\u5C14\u503C\u548C\u4E00\u4E2A\u5BF9\u8C61\u8FDB\u884C\u6BD4\u8F83\u65F6\uFF0C\u4F1A\u5C06\u8FD9\u4E24\u4E2A\u503C\u8F6C\u6362\u4E3A\u6570\u5B57\u8FDB\u884C\u6700\u540E\u7684\u6BD4\u8F83\u3002</p><p>\u6240\u4EE5\u5B83\u4F1A\u7ECF\u5386\u8FD9\u4E9B\u6B65\u9AA4\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 1. Convert false to a number to get 0</span>
<span class="token comment">// 2. Convert [] to a number to get 0</span>
<span class="token comment">// 3. &quot;0 == 0&quot; Returns true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token boolean">false</span> <span class="token operator">==</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// true</span>
<span class="token comment">// 1. The result of executing &quot;![]&quot; is false</span>
<span class="token comment">// 2. false == false Returns true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token boolean">false</span> <span class="token operator">==</span> <span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u4E3A\u4EC0\u4E48-\u8FD4\u56DEtrue" tabindex="-1"><a class="header-anchor" href="#\u4E3A\u4EC0\u4E48-\u8FD4\u56DEtrue" aria-hidden="true">#</a> \u4E3A\u4EC0\u4E48\u201C[] == ![]\u201D\u8FD4\u56DEtrue\uFF1F</h2><p>\u201C1 == !1\u201D\u7684\u7ED3\u679C\u662F\u4EC0\u4E48\uFF1F&#39;fatfish&#39; == !&#39;fatfish&#39; \u8FD4\u56DE\u4EC0\u4E48\uFF1F</p><p>\u4E3A\u4EC0\u4E48\u7A7A\u6570\u7EC4\u5982\u6B64\u7279\u522B\uFF1F</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 1. The result of executing &quot;![]&quot; is false</span>
<span class="token comment">// 2. Next, compare &quot;[] == false&quot;</span>
<span class="token comment">// 3. Convert [] to a number to get 0</span>
<span class="token comment">// 4. Convert false to a number to get 0</span>
<span class="token comment">// 5. &quot;0 == 0&quot; Returns true</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u670B\u53CB\u4EEC\uFF0C\u8BF7\u7528\u201C===\u201D\u4EE3\u66FF\u201C==\u201D\uFF0C\u8FD9\u6837\u4F1A\u8BA9\u4F60\u7684\u5DE5\u4F5C\u8F7B\u677E\u5F88\u591A\uFF0C\u5426\u5219\u4F60\u53EF\u80FD\u4F1A\u505A\u5669\u68A6\u3002</p><h2 id="\u5173\u4E8E\u5947\u602A\u7684-try-catch" tabindex="-1"><a class="header-anchor" href="#\u5173\u4E8E\u5947\u602A\u7684-try-catch" aria-hidden="true">#</a> \u5173\u4E8E\u5947\u602A\u7684\u201Ctry catch\u201D</h2><p>\u8BF7\u60F3\u4E00\u60F3\uFF0CgetName\u6267\u884C\u8FD4\u56DE\u7684\u662F\u4F60\u7684\u597D\u670B\u53CBfatfish\uFF0C\u8FD8\u662F\u6211\u4EEC\u7684\u597D\u670B\u53CBmedium\uFF1F</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">getName</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&#39;fatfish&#39;</span>
  <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&#39;medium&#39;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// ?</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6211\u60F3\u4F60\u731C\u5BF9\u4E86\uFF0C\u7B54\u6848\u662F\u201Cfatfish\u201D\u3002\u4E0D\uFF0C\u4E0D\u662F\uFF01\u7B54\u6848\u662F\u201Cmedium\u201D\u3002</p><p>\u8FD9\u662F\u56E0\u4E3A\u5728\u201Ctry\u2026.catch\u2026.finally\u201D\u8BED\u53E5\u4E2D\uFF0Cfinally\u5B50\u53E5\u65E0\u8BBA\u662F\u5426\u629B\u51FA\u5F02\u5E38\u90FD\u4F1A\u88AB\u6267\u884C\u3002\u53E6\u5916\uFF0C\u5982\u679C\u629B\u51FA\u5F02\u5E38\uFF0C\u5373\u4F7F\u6CA1\u6709catch\u5B50\u53E5\u5904\u7406\u5F02\u5E38\uFF0Cfinally\u5B50\u53E5\u4E2D\u7684\u8BED\u53E5\u4E5F\u4F1A\u88AB\u6267\u884C\u3002</p><h2 id="\u5173\u4E8E\u7BAD\u5934\u529F\u80FD" tabindex="-1"><a class="header-anchor" href="#\u5173\u4E8E\u7BAD\u5934\u529F\u80FD" aria-hidden="true">#</a> \u5173\u4E8E\u7BAD\u5934\u529F\u80FD\uFF1F</h2><p>\u662F\u7684\uFF0C\u95EE\u9898\u5F88\u7B80\u5355\uFF0C\u4F60\u4F1A\u770B\u5230fatfish\u88AB\u6253\u5370\u51FA\u6765\u4E86\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">fn</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token string">&#39;fatfish&#39;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// fatfish</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F46\u6211\u60F3\u8BF7\u4F60\u5C1D\u8BD5\u56DE\u7B54\u8FD9\u6BB5\u4EE3\u7801\u4F1A\u8F93\u51FA\u4EC0\u4E48\uFF1F</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">fn</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// ?</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8BF7\u95EE\u2018{}\u2019\u662F\u6700\u7EC8\u7ED3\u679C\u5417\uFF1F</p><p>\u4E0D\u5E78\u7684\u662F\uFF0C\u8FD9\u4E0D\u662F\u6211\u4EEC\u60F3\u8C61\u7684\u90A3\u6837\u3002\u672A\u5B9A\u4E49\u7684\u662F\u6700\u540E\u7684\u8D62\u5BB6\u3002</p><p>\u56E0\u4E3A\u2018{}\u2019\u662Ffn\u51FD\u6570\u7684\u4E00\u4E2A\u5305\u542B\u5757\uFF0C\u6240\u4EE5\u5B83\u7B49\u4EF7\u4E8E\u4E0B\u9762\u7684\u4EE3\u7801\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> fn <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// understand</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u4E3A\u4EC0\u4E48-json-stringify-fatfish-fatfish" tabindex="-1"><a class="header-anchor" href="#\u4E3A\u4EC0\u4E48-json-stringify-fatfish-fatfish" aria-hidden="true">#</a> \u4E3A\u4EC0\u4E48 JSON.stringify(&#39;fatfish&#39;) ! ==\u2018fatfish\u2019\uFF1F</h2><p>name1 \u4F1A\u7B49\u4E8E name2 \u5417\uFF1F</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> name1 <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token string">&#39;fatfish&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> name2 <span class="token operator">=</span> <span class="token string">&#39;fatfish&#39;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>name1 <span class="token operator">===</span> name2<span class="token punctuation">)</span> <span class="token comment">// ?</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6211\u771F\u7684\u5F88\u56F0\u60D1\uFF0C\u4E3A\u4EC0\u4E48name1\u4E0D\u7B49\u4E8Ename2\uFF1F</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> name1 <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token string">&#39;fatfish&#39;</span><span class="token punctuation">)</span> <span class="token comment">// =&gt; &#39;&quot;fatfish&quot;&#39;</span>
<span class="token keyword">const</span> name2 <span class="token operator">=</span> <span class="token string">&#39;fatfish&#39;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>name1 <span class="token operator">===</span> name2<span class="token punctuation">)</span> <span class="token comment">// &#39;&quot;fatfish&quot;&#39; === &#39;fatfish&#39;  =&gt; false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>\u8BF7\u5C0F\u5FC3\u4F7F\u7528 JSON.stringify \u4E0E\u5B57\u7B26\u4E32\u8FDB\u884C\u6BD4\u8F83\uFF0C\u5B83\u4F1A\u8BA9\u60A8\u9677\u5165\u56F0\u5883\u3002</p></blockquote>`,34),o=[p];function c(i,l){return s(),a("div",null,o)}const r=n(t,[["render",c],["__file","20.html.vue"]]);export{r as default};
