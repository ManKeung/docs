import{_ as n,o as s,c as a,a as t}from"./app.7b8ed854.js";const p={},o=t(`<h1 id="\u591A\u884C\u6587\u672C\u5185\u5BB9\u8D85\u51FA\u663E\u793A\u7701\u7565\u53F7-\u7684\u7EC8\u6781\u89E3\u51B3\u65B9\u6848" tabindex="-1"><a class="header-anchor" href="#\u591A\u884C\u6587\u672C\u5185\u5BB9\u8D85\u51FA\u663E\u793A\u7701\u7565\u53F7-\u7684\u7EC8\u6781\u89E3\u51B3\u65B9\u6848" aria-hidden="true">#</a> \u591A\u884C\u6587\u672C\u5185\u5BB9\u8D85\u51FA\u663E\u793A\u7701\u7565\u53F7... \u7684\u7EC8\u6781\u89E3\u51B3\u65B9\u6848</h1><p>\u6700\u8FD1\u9047\u5230\u4E00\u4E2A\u8C8C\u4F3C\u5F88\u7B80\u5355\uFF0C\u4F46\u5199\u8D77\u6765\u4E5F\u4E0D\u7B80\u5355\u7684\u95EE\u9898\u3002\u5BF9\u4E8E\u591A\u884C\u6587\u5B57\uFF0C\u8D85\u51FA...\u663E\u793A\u3002\u901A\u8FC7css\u53EF\u4EE5\u5B9E\u73B0\uFF0C\u4F46\u53D7\u9650\u4E8E\u6D4F\u89C8\u5668\u517C\u5BB9\u95EE\u9898\uFF0C\u6709\u65F6\u5019\u8FD8\u9700\u8981\u4F9D\u8D56JS\u6765\u5B9E\u73B0\u3002\u901A\u8FC7js\u5B9E\u73B0\uFF0C\u5C31\u9700\u8981\u8003\u8651\u5230\u6587\u5B57\u5927\u5C0F\uFF0C\u4E2D\u82F1\u6587\u3001\u6570\u5B50\u3001\u6807\u70B9\u7B26\u53F7\u6240\u5BF9\u5E94\u7684\u5B57\u8282\u957F\u5EA6\u4E0D\u4E00\u81F4\uFF0C\u5982\u679C\u8003\u8651\u7684\u4E0D\u5168\u9762\uFF0C\u5BF9\u4E8E\u4E0D\u540C\u7684\u6587\u5B57\u5185\u5BB9\uFF0C\u603B\u4F1A\u6709\u70B9\u5DEE\u8DDD\u3002</p><ul><li>\u9996\u5148\uFF0C\u6211\u4EEC\u9700\u8981\u4E86\u89E3\uFF0C\u4E2D\u6587\u6C49\u5B57\uFF0C\u82F1\u6587\u5B57\u6BCD\uFF0C\u6570\u5B57\u4EE5\u53CA\u7279\u6B8A\u7B26\u53F7\u6240\u5360\u7684\u5B57\u8282\u957F\u5EA6\u662F\u4E0D\u4E00\u6837\u7684\uFF0C\u5982\u679C\u9700\u8981\u8BA1\u7B97\u51C6\u786E\uFF0C\u5C31\u4E0D\u80FD\u6309\u7167\u5B57\u7B26\u4E32\u7684\u5143\u7D20\u4E2A\u6570\u53BB\u622A\u53D6\uFF0C\u628A\u5B83\u4EEC\u6362\u7B97\u6210\u5B57\u8282\u6570\u6765\u622A\u53D6\uFF0C\u51C6\u786E\u5EA6\u66F4\u9AD8\u3002\u6240\u4EE5\uFF0C\u6211\u4EEC\u9700\u8981\u4E00\u4E2A\u83B7\u53D6\u5B57\u7B26\u4E32\u5B57\u8282\u957F\u5EA6\u7684\u65B9\u6CD5\uFF1A</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">bitCompute</span><span class="token punctuation">(</span><span class="token parameter">content</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> total <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>
        len <span class="token operator">=</span> arguments<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length <span class="token operator">||</span> <span class="token number">0</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>content<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">charCodeAt</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">255</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            total <span class="token operator">+=</span> <span class="token number">2</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            total <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> total
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u5BF9\u4E8E\u8981\u622A\u53D6\u591A\u5C11\u5185\u5BB9\u7684\u5B57\u8282\u6570\uFF0C\u6211\u4EEC\u9700\u8981\u77E5\u6089\u80FD\u653E\u5165\u5BB9\u5668\u5185\u7684\u5B57\u8282\u6570\u4E0E\u603B\u5B57\u8282\u6570\u7684\u6BD4\u4F8B\uFF0C\u5C55\u793A\u5B57\u8282\u6570/\u603B\u5B57\u8282\u6570 = offsetWidth / scrollWidth:</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">complate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> offsetWidth <span class="token operator">=</span> el<span class="token punctuation">.</span>offsetWidth<span class="token punctuation">;</span>
    <span class="token keyword">var</span> scrollWidth <span class="token operator">=</span> el<span class="token punctuation">.</span>scrollWidth<span class="token punctuation">;</span>
    <span class="token keyword">var</span> gap <span class="token operator">=</span> scrollWidth <span class="token operator">-</span> offsetWidth<span class="token punctuation">;</span>
    <span class="token keyword">var</span> percent <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>offsetWidth <span class="token operator">/</span> scrollWidth <span class="token operator">*</span> <span class="token number">1e3</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">1e3</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">gap</span><span class="token operator">:</span> gap<span class="token punctuation">,</span>
        <span class="token literal-property property">percent</span><span class="token operator">:</span> percent
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u6839\u636E\u8BA1\u7B97\u5F97\u51FA\u7684\u6570\u636E\uFF0C\u6211\u4EEC\u5C31\u53EF\u4EE5\u64CD\u4F5C\u5B57\u7B26\u4E32\u4E86</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">cut</span><span class="token punctuation">(</span><span class="token parameter">content</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    el<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> content<span class="token punctuation">;</span>
    <span class="token keyword">var</span> info <span class="token operator">=</span> <span class="token function">complate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        percent <span class="token operator">=</span> info<span class="token punctuation">.</span>percent<span class="token punctuation">;</span>
    <span class="token keyword">var</span> total <span class="token operator">=</span> <span class="token function">bitCompute</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token punctuation">.</span>total<span class="token punctuation">;</span>
    <span class="token keyword">var</span> showLen <span class="token operator">=</span> <span class="token operator">+</span><span class="token punctuation">(</span>total <span class="token operator">*</span> percent<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">-</span> cfg<span class="token punctuation">.</span>placeholder<span class="token punctuation">;</span>
    content <span class="token operator">=</span> <span class="token function">bitCompute</span><span class="token punctuation">(</span>content<span class="token punctuation">,</span> showLen<span class="token punctuation">)</span><span class="token punctuation">.</span>content<span class="token punctuation">;</span>
    <span class="token keyword">return</span> content <span class="token operator">+</span> cfg<span class="token punctuation">.</span>padding<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">bitCompute</span><span class="token punctuation">(</span><span class="token parameter">content<span class="token punctuation">,</span> maxLen</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> total <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>
        len <span class="token operator">=</span> arguments<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length <span class="token operator">||</span> <span class="token number">0</span><span class="token punctuation">,</span>
        outContent <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>content<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">charCodeAt</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">255</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            total <span class="token operator">+=</span> <span class="token number">2</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            total <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>maxLen <span class="token operator">&amp;&amp;</span> total <span class="token operator">&gt;</span> maxLen<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        outContent <span class="token operator">+=</span> content<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">total</span><span class="token operator">:</span> total<span class="token punctuation">,</span>
        <span class="token literal-property property">content</span><span class="token operator">:</span> outContent
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u5F53\u7136\u6587\u5B57\u5C55\u793A\u7684\u591A\u5C11\uFF0C\u4E5F\u662F\u548C\u5B57\u4F53\u5927\u5C0F\u76F8\u5173\u7684\uFF0C\u6240\u4EE5\u6211\u4EEC\u4E5F\u9700\u8981\u628A\u5B57\u4F53\u5927\u5C0F\u7684\u56E0\u7D20\u8003\u8651\u5230\uFF0C\u800C\u4E14\u4F5C\u4E3A\u4E00\u4E2A\u5DE5\u4F5C\u65B9\u6CD5\uFF0C\u672C\u8EAB\u5C31\u4E0D\u5E94\u8BE5\u9875\u9762\u4E2D\u7684\u5143\u7D20\u6709\u5173\u8054\uFF0C\u6240\u4EE5\u6211\u4EEC\u5E94\u8BE5\u5728\u65B9\u6CD5\u4E2D\u81EA\u5DF1\u521B\u5EFA\u5143\u7D20\uFF0C\u653E\u5165\u5185\u5BB9\uFF0C\u8BA1\u7B97offsetWidth\u548CscrollWidth</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">cutFactory</span><span class="token punctuation">(</span><span class="token parameter">opt</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> cfg <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">padding</span><span class="token operator">:</span> opt<span class="token punctuation">.</span>padding <span class="token operator">||</span> <span class="token string">&quot;...&quot;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">classList</span><span class="token operator">:</span> opt<span class="token punctuation">.</span>classList <span class="token operator">||</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token literal-property property">style</span><span class="token operator">:</span> opt<span class="token punctuation">.</span>style <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token literal-property property">debug</span><span class="token operator">:</span> opt<span class="token punctuation">.</span>debug
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    cfg<span class="token punctuation">.</span>placeholder <span class="token operator">=</span> <span class="token function">bitCompute</span><span class="token punctuation">(</span>cfg<span class="token punctuation">.</span>padding<span class="token punctuation">)</span><span class="token punctuation">.</span>total<span class="token punctuation">;</span>
    <span class="token keyword">var</span> el <span class="token operator">=</span> doc<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&quot;span&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    el<span class="token punctuation">.</span>className <span class="token operator">=</span> cfg<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> customStyles <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> styleKey <span class="token keyword">in</span> cfg<span class="token punctuation">.</span>style<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>cfg<span class="token punctuation">.</span>style<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>styleKey<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            customStyles<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>styleKey <span class="token operator">+</span> <span class="token string">&quot;:&quot;</span> <span class="token operator">+</span> cfg<span class="token punctuation">.</span>style<span class="token punctuation">[</span>styleKey<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    el<span class="token punctuation">.</span>style<span class="token punctuation">.</span>cssText <span class="token operator">=</span> <span class="token string">&quot;position:absolute;left:0;top:0;background:transparent;color:transparent;height:100%;white-space:nowrap;overflow:visible;border:0;&quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>cfg<span class="token punctuation">.</span>debug <span class="token operator">?</span> <span class="token string">&quot;background:white;color:red;&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span> <span class="token operator">+</span> customStyles<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot;;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> div <span class="token operator">=</span> doc<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    div<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>el<span class="token punctuation">)</span><span class="token punctuation">;</span>
    div<span class="token punctuation">.</span>style<span class="token punctuation">.</span>cssText <span class="token operator">=</span> <span class="token string">&quot;width:99%;min-height:50px;line-height:50px;position:absolute;left:3px;top:3px;overflow:hidden;outline:0;background:transparent;&quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>cfg<span class="token punctuation">.</span>debug <span class="token operator">?</span> <span class="token string">&quot;outline:1px solid red;background:black;&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    doc<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>div<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> css <span class="token operator">=</span> win<span class="token punctuation">.</span><span class="token function">getComputedStyle</span><span class="token punctuation">(</span>el<span class="token punctuation">)</span><span class="token punctuation">;</span>
    cfg<span class="token punctuation">.</span>fontSize <span class="token operator">=</span> <span class="token function">parseFloat</span><span class="token punctuation">(</span>css<span class="token punctuation">.</span>fontSize<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token number">16</span><span class="token punctuation">;</span>

        <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">content</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        el<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> content<span class="token punctuation">;</span>
        <span class="token keyword">var</span> out <span class="token operator">=</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">flag</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
            <span class="token literal-property property">cut</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
            <span class="token literal-property property">all</span><span class="token operator">:</span> content<span class="token punctuation">,</span>
            <span class="token literal-property property">last</span><span class="token operator">:</span> content
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">complate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>gap <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            out<span class="token punctuation">.</span>flag <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
            out<span class="token punctuation">.</span>last <span class="token operator">=</span> out<span class="token punctuation">.</span>cut <span class="token operator">=</span> <span class="token function">cut</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> out
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u6700\u540E\uFF0C\u518D\u66B4\u9732\u4E00\u4E2A\u65B9\u6CD5\uFF0C\u65B9\u4FBF\u4F7F\u7528\u8005\u8C03\u7528\u3002\u4E3A\u4E86\u6027\u80FD\u8003\u8651\uFF0C\u4E0D\u521B\u5EFA\u8FC7\u591Adom\u5143\u7D20\uFF0C\u6211\u4EEC\u53EF\u4EE5\u7F13\u5B58\u4E00\u4E0B\u5B57\u4F53\u5927\u5C0F\u548C\u5BB9\u5668\u5BBD\u5EA6\u76F8\u540C\u7684\u622A\u53D6\u65B9\u6CD5</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">subStringEL</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> fontSize<span class="token punctuation">,</span> width</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>subStringELFns <span class="token operator">||</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>subStringELFns <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> key <span class="token operator">=</span> <span class="token string">&#39;key_&#39;</span> <span class="token operator">+</span> fontSize <span class="token operator">+</span> <span class="token string">&#39;_&#39;</span> <span class="token operator">+</span> width<span class="token punctuation">;</span>
    <span class="token keyword">var</span> fn <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>subStringELFns<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>fn<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        fn <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>subStringELFns<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">cutFactory</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            <span class="token literal-property property">style</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token string-property property">&#39;font-size&#39;</span><span class="token operator">:</span> fontSize<span class="token punctuation">,</span>
                <span class="token string-property property">&#39;width&#39;</span><span class="token operator">:</span> width
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token function">fn</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u6837\u5C31\u5B8C\u7F8E\u7684\u89E3\u51B3\u4E86\u591A\u884C\u8D85\u51FA...\u663E\u793A\u7684\u95EE\u9898\u4E86\uFF0C\u517C\u5BB9\u6027\u5F88\u597D\uFF0C\u800C\u4E14\u4E5F\u80FD\u51C6\u786E\u622A\u53D6\uFF0C\u7075\u6D3B\u65B9\u4FBF\u3002</p><details class="custom-container details"><summary>\u70B9\u51FB\u67E5\u770B</summary><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> cutFn <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token function">initCutFactory</span><span class="token punctuation">(</span><span class="token parameter">win</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> doc <span class="token operator">=</span> document<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>win<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        doc <span class="token operator">=</span> win<span class="token punctuation">.</span>document<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">function</span> <span class="token function">cutFactory</span><span class="token punctuation">(</span><span class="token parameter">opt</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> cfg <span class="token operator">=</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">padding</span><span class="token operator">:</span> opt<span class="token punctuation">.</span>padding <span class="token operator">||</span> <span class="token string">&quot;...&quot;</span><span class="token punctuation">,</span>
            <span class="token literal-property property">classList</span><span class="token operator">:</span> opt<span class="token punctuation">.</span>classList <span class="token operator">||</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
            <span class="token literal-property property">style</span><span class="token operator">:</span> opt<span class="token punctuation">.</span>style <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token literal-property property">debug</span><span class="token operator">:</span> opt<span class="token punctuation">.</span>debug
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
        cfg<span class="token punctuation">.</span>placeholder <span class="token operator">=</span> <span class="token function">bitCompute</span><span class="token punctuation">(</span>cfg<span class="token punctuation">.</span>padding<span class="token punctuation">)</span><span class="token punctuation">.</span>total<span class="token punctuation">;</span>
        <span class="token keyword">var</span> el <span class="token operator">=</span> doc<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&quot;span&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        el<span class="token punctuation">.</span>className <span class="token operator">=</span> cfg<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">var</span> customStyles <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> styleKey <span class="token keyword">in</span> cfg<span class="token punctuation">.</span>style<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>cfg<span class="token punctuation">.</span>style<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>styleKey<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                customStyles<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>styleKey <span class="token operator">+</span> <span class="token string">&quot;:&quot;</span> <span class="token operator">+</span> cfg<span class="token punctuation">.</span>style<span class="token punctuation">[</span>styleKey<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        el<span class="token punctuation">.</span>style<span class="token punctuation">.</span>cssText <span class="token operator">=</span> <span class="token string">&quot;position:absolute;left:0;top:0;background:transparent;color:transparent;height:100%;white-space:nowrap;overflow:visible;border:0;&quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>cfg<span class="token punctuation">.</span>debug <span class="token operator">?</span> <span class="token string">&quot;background:white;color:red;&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span> <span class="token operator">+</span> customStyles<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot;;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">var</span> div <span class="token operator">=</span> doc<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        div<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>el<span class="token punctuation">)</span><span class="token punctuation">;</span>
        div<span class="token punctuation">.</span>style<span class="token punctuation">.</span>cssText <span class="token operator">=</span> <span class="token string">&quot;width:99%;min-height:50px;line-height:50px;position:absolute;left:3px;top:3px;overflow:hidden;outline:0;background:transparent;&quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>cfg<span class="token punctuation">.</span>debug <span class="token operator">?</span> <span class="token string">&quot;outline:1px solid red;background:black;&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        doc<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>div<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">var</span> css <span class="token operator">=</span> win<span class="token punctuation">.</span><span class="token function">getComputedStyle</span><span class="token punctuation">(</span>el<span class="token punctuation">)</span><span class="token punctuation">;</span>
        cfg<span class="token punctuation">.</span>fontSize <span class="token operator">=</span> <span class="token function">parseFloat</span><span class="token punctuation">(</span>css<span class="token punctuation">.</span>fontSize<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token number">16</span><span class="token punctuation">;</span>

        <span class="token keyword">function</span> <span class="token function">complate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">var</span> offsetWidth <span class="token operator">=</span> el<span class="token punctuation">.</span>offsetWidth<span class="token punctuation">;</span>
            <span class="token keyword">var</span> scrollWidth <span class="token operator">=</span> el<span class="token punctuation">.</span>scrollWidth<span class="token punctuation">;</span>
            <span class="token keyword">var</span> gap <span class="token operator">=</span> scrollWidth <span class="token operator">-</span> offsetWidth<span class="token punctuation">;</span>
            <span class="token keyword">var</span> percent <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>offsetWidth <span class="token operator">/</span> scrollWidth <span class="token operator">*</span> <span class="token number">1e3</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">1e3</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token punctuation">{</span>
                <span class="token literal-property property">gap</span><span class="token operator">:</span> gap<span class="token punctuation">,</span>
                <span class="token literal-property property">percent</span><span class="token operator">:</span> percent
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">function</span> <span class="token function">cut</span><span class="token punctuation">(</span><span class="token parameter">content</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            el<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> content<span class="token punctuation">;</span>
            <span class="token keyword">var</span> info <span class="token operator">=</span> <span class="token function">complate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                percent <span class="token operator">=</span> info<span class="token punctuation">.</span>percent<span class="token punctuation">;</span>
            <span class="token keyword">var</span> total <span class="token operator">=</span> <span class="token function">bitCompute</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token punctuation">.</span>total<span class="token punctuation">;</span>
            <span class="token keyword">var</span> showLen <span class="token operator">=</span> <span class="token operator">+</span><span class="token punctuation">(</span>total <span class="token operator">*</span> percent<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">-</span> cfg<span class="token punctuation">.</span>placeholder<span class="token punctuation">;</span>
            content <span class="token operator">=</span> <span class="token function">bitCompute</span><span class="token punctuation">(</span>content<span class="token punctuation">,</span> showLen<span class="token punctuation">)</span><span class="token punctuation">.</span>content<span class="token punctuation">;</span>
            <span class="token keyword">return</span> content <span class="token operator">+</span> cfg<span class="token punctuation">.</span>padding<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">function</span> <span class="token function">bitCompute</span><span class="token punctuation">(</span><span class="token parameter">content<span class="token punctuation">,</span> maxLen</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">var</span> total <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>
                len <span class="token operator">=</span> arguments<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length <span class="token operator">||</span> <span class="token number">0</span><span class="token punctuation">,</span>
                outContent <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>content<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">charCodeAt</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">255</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    total <span class="token operator">+=</span> <span class="token number">2</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    total <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>maxLen <span class="token operator">&amp;&amp;</span> total <span class="token operator">&gt;</span> maxLen<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                outContent <span class="token operator">+=</span> content<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">return</span> <span class="token punctuation">{</span>
                <span class="token literal-property property">total</span><span class="token operator">:</span> total<span class="token punctuation">,</span>
                <span class="token literal-property property">content</span><span class="token operator">:</span> outContent
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">content</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            el<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> content<span class="token punctuation">;</span>
            <span class="token keyword">var</span> out <span class="token operator">=</span> <span class="token punctuation">{</span>
                <span class="token literal-property property">flag</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
                <span class="token literal-property property">cut</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
                <span class="token literal-property property">all</span><span class="token operator">:</span> content<span class="token punctuation">,</span>
                <span class="token literal-property property">last</span><span class="token operator">:</span> content
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">complate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>gap <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                out<span class="token punctuation">.</span>flag <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
                out<span class="token punctuation">.</span>last <span class="token operator">=</span> out<span class="token punctuation">.</span>cut <span class="token operator">=</span> <span class="token function">cut</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">return</span> out
        <span class="token punctuation">}</span>

    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> cutFactory
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span>window<span class="token punctuation">)</span>

<span class="token keyword">function</span> <span class="token function">subStringEL</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> fontSize<span class="token punctuation">,</span> width</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>subStringELFns <span class="token operator">||</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>subStringELFns <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> key <span class="token operator">=</span> <span class="token string">&#39;key_&#39;</span> <span class="token operator">+</span> fontSize <span class="token operator">+</span> <span class="token string">&#39;_&#39;</span> <span class="token operator">+</span> width<span class="token punctuation">;</span>
    <span class="token keyword">var</span> fn <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>subStringELFns<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>fn<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        fn <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>subStringELFns<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">cutFn</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            <span class="token literal-property property">style</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token string-property property">&#39;font-size&#39;</span><span class="token operator">:</span> fontSize<span class="token punctuation">,</span>
                <span class="token string-property property">&#39;width&#39;</span><span class="token operator">:</span> width
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token function">fn</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token punctuation">{</span>
    subStringEL
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>`,14),e=[o];function c(l,i){return s(),a("div",null,e)}const r=n(p,[["render",c],["__file","15.html.vue"]]);export{r as default};
