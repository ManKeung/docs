import{_ as n,o as s,c as a,a as p}from"./app.1efa1054.js";const t={},o=p(`<h1 id="es6-\u8FED\u4EE3\u5668\u548C\u751F\u6210\u5668" tabindex="-1"><a class="header-anchor" href="#es6-\u8FED\u4EE3\u5668\u548C\u751F\u6210\u5668" aria-hidden="true">#</a> ES6 \u8FED\u4EE3\u5668\u548C\u751F\u6210\u5668</h1><h2 id="\u53EF\u8FED\u4EE3\u5BF9\u8C61\u548C\u8FED\u4EE3\u5668" tabindex="-1"><a class="header-anchor" href="#\u53EF\u8FED\u4EE3\u5BF9\u8C61\u548C\u8FED\u4EE3\u5668" aria-hidden="true">#</a> \u53EF\u8FED\u4EE3\u5BF9\u8C61\u548C\u8FED\u4EE3\u5668</h2><p>1\u3001\u53EF\u8FED\u4EE3\u5BF9\u8C61\u6307\u7684\u662F\uFF0C\u53EF\u901A\u8FC7 for/of \u5FAA\u73AF\u7684\u5BF9\u8C61\uFF0C\u662Fes6\u7684\u7279\u6027\uFF0C\u5305\u62EC\uFF08\u6570\u7EC4\uFF0C\u5B57\u7B26\u4E32\uFF0Cset\u5BF9\u8C61\uFF0Cmap\u5BF9\u8C61\uFF09</p><p>2\u3001\u6269\u5C55\u64CD\u4F5C\u7B26...\u53EF\u4EE5\u5C55\u5F00\u53EF\u8FED\u4EE3\u5BF9\u8C61</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> chars <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token string">&quot;abcd&quot;</span><span class="token punctuation">]</span> <span class="token comment">// chars === [&quot;a&quot;,&quot;b&quot;,&quot;c&quot;,&quot;d&quot;]</span>
<span class="token keyword">let</span> data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span>
Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token comment">// 4</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>3\u3001\u8FED\u4EE3\u5668\u53EF\u7528\u4E8E\u89E3\u6784\u8D4B\u503C</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> purple <span class="token operator">=</span> Uint8Array<span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">128</span><span class="token punctuation">)</span>
<span class="token keyword">let</span> <span class="token punctuation">[</span>r<span class="token punctuation">,</span> g<span class="token punctuation">,</span> b<span class="token punctuation">,</span> a<span class="token punctuation">]</span> <span class="token operator">=</span> purple <span class="token comment">// a===128</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>4\u3001 \u8FED\u4EE3map\u5BF9\u8C61\uFF0C\u8FD4\u56DE\u503C\u662F[key,value]\u5BF9\uFF0C \u5728for/of\u4E2D\u53EF\u76F4\u63A5\u89E3\u6784\u8D4B\u503C</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> m <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">&quot;one&quot;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&quot;two&quot;</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> <span class="token punctuation">[</span>k<span class="token punctuation">,</span> v<span class="token punctuation">]</span> <span class="token keyword">of</span> m<span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>k<span class="token punctuation">,</span> v<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>5\u3001\u503C\u8FED\u4EE3\u952E\u6216\u503C\uFF0C\u53EF\u4F7F\u7528keys()\u6216values()</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">[</span><span class="token operator">...</span>m<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// [[&quot;one&quot;, 1], [&quot;two&quot;, 2]]</span>
<span class="token punctuation">[</span><span class="token operator">...</span>m<span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// [[&quot;one&quot;, 1], [&quot;two&quot;, 2]]</span>
<span class="token punctuation">[</span><span class="token operator">...</span>m<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// [&quot;one&quot;,&quot;two&quot;]</span>
<span class="token punctuation">[</span><span class="token operator">...</span>m<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// [1,2]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>6\u3001\u53EF\u63A5\u6536Array\u5BF9\u8C61\u7684\u5185\u7F6E\u51FD\u6570\u548C\u6784\u9020\u51FD\u6570\uFF0C\u53EF\u63A5\u6536\u4EFB\u610F\u8FED\u4EE3\u5668</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token string">&quot;abc&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;b&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;c&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u4E24\u8005\u76F8\u540C</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>7\u3001\u8FED\u4EE3\u5668\u539F\u7406</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u53EF\u8FED\u4EE3\u5BF9\u8C61\uFF1A\u5177\u6709\u8FED\u4EE3\u5668\u7684\u65B9\u6CD5\uFF0C\u4E14\u8BE5\u65B9\u6CD5\u8FD4\u56DE\u8FED\u4EE3\u5668\u7684\u5BF9\u8C61</span>
<span class="token keyword">let</span> list1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span>
<span class="token comment">// \u8FED\u4EE3\u5668\u5BF9\u8C61\uFF1A\u5177\u6709next()\u65B9\u6CD5\uFF0C\u4E14\u8BE5\u65B9\u6CD5\u8FD4\u56DE\u8FED\u4EE3\u7ED3\u679C\u7684\u5BF9\u8C61list</span>
<span class="token keyword">let</span> iterator <span class="token operator">=</span> list1<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//\u6709\u4E00\u4E2ASymbol.iterator\u65B9\u6CD5\uFF0C\u8FD4\u56DE\u81EA\u5DF1</span>
<span class="token comment">// \u8FED\u4EE3\u7ED3\u679C\uFF1A\u5177\u6709\u5C5E\u6027value\u548Cdone\u7684\u5BF9\u8C61</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> result <span class="token operator">=</span> iterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token operator">!</span>result<span class="token punctuation">.</span>done<span class="token punctuation">;</span> result <span class="token operator">=</span> iterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u4F8B</span>
<span class="token keyword">let</span> list2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span>
<span class="token keyword">let</span> iter <span class="token operator">=</span> list2<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>iter<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span>iter<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [2, 3, 4, 5]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u53EF\u8FED\u4EE3\u5BF9\u8C61\u7684\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u53EF\u8FED\u4EE3\u5BF9\u8C61\u7684\u5B9E\u73B0" aria-hidden="true">#</a> \u53EF\u8FED\u4EE3\u5BF9\u8C61\u7684\u5B9E\u73B0</h2><p>\u539F\u5219\uFF1A\u53EA\u8981\u6570\u636E\u7C7B\u578B\u8868\u793A\u67D0\u79CD\u53EF\u8FED\u4EE3\u7684\u7ED3\u6784\uFF0C\u5C31\u5E94\u8BE5\u5B9E\u73B0\u4E3A\u53EF\u8FED\u4EE3\u5BF9\u8C61\u3002</p><p>\u5B9E\u73B0\uFF1A\u4E3A\u4E86\u8BA9\u7C7B\u53EF\u8FED\u4EE3\uFF0C\u5FC5\u987B\u5B9E\u73B0\u4E00\u4E2ASymbol.iterator\u7684\u65B9\u6CD5\uFF0C\u8BE5\u65B9\u6CD5\u5FC5\u987B\u8FD4\u56DE\u4E00\u4E2A\u8FED\u4EE3\u5668\u5BF9\u8C61\uFF0C\u8BE5\u5BF9\u8C61\u6709\u4E00\u4E2Anext()\u65B9\u6CD5\uFF0Cnext()\u65B9\u6CD5\u5FC5\u987B\u8FD4\u56DE\u4E00\u4E2A\u6709value\u548Cdone\u5C5E\u6027\u7684\u5BF9\u8C61\u3002</p><p>\u64CD\u4F5C\uFF1A\u53EF\u8FED\u4EE3\u7684\u6570\u503CRange\u7C7B</p><p>1\u3001Range\u5BF9\u8C61\u8868\u793A\u4E00\u4E2A\u6570\u503C\u8303\u56F4{x: form&lt;=x&lt;=to}</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">/*
 Range\u5B9A\u4E49\u4E86has()\u65B9\u6CD5\uFF0C
\u7528\u4E8E\u6D4B\u8BD5\u7ED9\u5B9A\u6570\u503C\u662F\u4E0D\u662F\u8BE5\u8303\u56F4\u7684\u6210\u5458 Range\u662F\u53EF\u8FED\u4EE3\u7684\uFF0C\u8FED\u4EE3\u5176\u8303\u56F4\u5185\u7684\u6240\u6709\u6574\u6570
*/</span>
<span class="token keyword">class</span> <span class="token class-name">Range</span> <span class="token punctuation">{</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">from<span class="token punctuation">,</span> to</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>from <span class="token operator">=</span> from
        <span class="token keyword">this</span><span class="token punctuation">.</span>to <span class="token operator">=</span> to
    <span class="token punctuation">}</span>
    <span class="token function">has</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">typeof</span> x <span class="token operator">===</span> <span class="token string">&#39;number&#39;</span> <span class="token operator">&amp;&amp;</span>
            x <span class="token operator">&gt;=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>from <span class="token operator">&amp;&amp;</span>
            x <span class="token operator">&lt;=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>to
    <span class="token punctuation">}</span>
    <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">{x: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>from<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&lt;=x &lt;=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>to<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">}</span><span class="token template-punctuation string">\`</span></span> <span class="token punctuation">}</span>
    <span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> next <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>from<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> last <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>to
        <span class="token keyword">return</span> <span class="token punctuation">{</span>
            <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token punctuation">{</span>
                    <span class="token literal-property property">done</span><span class="token operator">:</span> next <span class="token operator">&gt;</span> last<span class="token punctuation">,</span>
                    <span class="token literal-property property">value</span><span class="token operator">:</span> next<span class="token operator">++</span><span class="token punctuation">,</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>


console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> i <span class="token keyword">of</span> <span class="token keyword">new</span> <span class="token class-name">Range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span><span class="token keyword">new</span> <span class="token class-name">Range</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2\u3001\u5B9A\u4E49\u8FD4\u56DE\u53EF\u8FED\u4EE3\u503C\u7684\u51FD\u6570</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u66FF\u4EE3\u6570\u7EC4\u7684map\u65B9\u6CD5</span>
<span class="token keyword">function</span> <span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">iterable<span class="token punctuation">,</span> fn</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> iterator <span class="token operator">=</span> iterable<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment">// \u8FD4\u56DE\u4E00\u4E2A\u53EF\u8FED\u4EE3\u5BF9\u8C61\uFF0C\u4E5F\u662F\u8FED\u4EE3\u5668\u5BF9\u8C61</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token keyword">this</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">let</span> obj <span class="token operator">=</span> iterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>obj<span class="token punctuation">.</span>done<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> obj
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token function">fn</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span>value<span class="token punctuation">)</span> <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token parameter">x</span> <span class="token operator">=&gt;</span> x <span class="token operator">*</span> x<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u66FF\u4EE3\u6570\u7EC4\u7684filter\u65B9\u6CD5</span>
<span class="token keyword">function</span> <span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">iterable<span class="token punctuation">,</span> fn</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> iterator <span class="token operator">=</span> iterable<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment">// \u8FD4\u56DE\u4E00\u4E2A\u53EF\u8FED\u4EE3\u5BF9\u8C61\uFF0C\u4E5F\u662F\u8FED\u4EE3\u5668\u5BF9\u8C61</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token keyword">this</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">let</span> obj <span class="token operator">=</span> iterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">fn</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span>value<span class="token punctuation">)</span> <span class="token operator">||</span> obj<span class="token punctuation">.</span>done<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">return</span> obj
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">56</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token parameter">x</span> <span class="token operator">=&gt;</span> x <span class="token operator">&gt;</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>3\u3001\u61D2\u60F0\u8FED\u4EE3</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u5047\u8BBE\u4E00\u4E2A\u975E\u5E38\u957F\u7684\u5B57\u7B26\u4E32\u60F3\u8981\u4EE5\u7A7A\u683C\u4E3A\u5206\u9694,\u5982\u679C\u4F7F\u7528\u5B57\u7B26\u4E32split\u65B9\u6CD5,\u90A3\u4E48\u8981\u5904\u7406\u6574\u4E2A\u5B57\u7B26\u4E32,</span>
<span class="token comment">// \u4F1A\u5360\u7528\u5F88\u591A\u5185\u5B58\u6765\u4FDD\u5B58\u8FD4\u56DE\u7684\u6570\u7EC4\u548C\u5176\u4E2D\u7684\u5B57\u7B26\u4E32.</span>
<span class="token comment">// \u4F7F\u7528\u61D2\u60F0\u8FED\u4EE3,\u5219\u4E0D\u5FC5\u5168\u90E8\u4FDD\u5B58\u5728\u5185\u5B58</span>
<span class="token keyword">function</span> <span class="token function">words</span><span class="token punctuation">(</span><span class="token parameter">s</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> r <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\s+|$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span>
    r<span class="token punctuation">.</span>lastIndex <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[^ ]</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span>index
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token keyword">this</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">let</span> start <span class="token operator">=</span> r<span class="token punctuation">.</span>lastIndex
            <span class="token keyword">if</span> <span class="token punctuation">(</span>start <span class="token operator">&lt;</span> s<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">let</span> match <span class="token operator">=</span> r<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>match<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token literal-property property">value</span><span class="token operator">:</span> s<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>start<span class="token punctuation">,</span> match<span class="token punctuation">.</span>index<span class="token punctuation">)</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span>
            <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token literal-property property">done</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span><span class="token function">words</span><span class="token punctuation">(</span><span class="token string">&quot; abc def ghi &quot;</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u751F\u6210\u5668\u6982\u5FF5\u548C\u5B9E\u4F8B" tabindex="-1"><a class="header-anchor" href="#\u751F\u6210\u5668\u6982\u5FF5\u548C\u5B9E\u4F8B" aria-hidden="true">#</a> \u751F\u6210\u5668\u6982\u5FF5\u548C\u5B9E\u4F8B</h2><p>\u539F\u5219\uFF1A\u751F\u6210\u5668\u662Fes6\u8BED\u6CD5\u5B9A\u4E49\u7684\u8FED\u4EE3\u5668\uFF0C\u9002\u5408\u8981\u8FED\u4EE3\u7684\u503C\u4E0D\u662F\u67D0\u4E2A\u6570\u636E\u7ED3\u6784\u7684\u5143\u7D20\uFF0C\u800C\u662F\u8BA1\u7B97\u7ED3\u679C\u7684\u573A\u666F\u3002</p><p>\u5B9E\u73B0\uFF1A\u521B\u5EFA\u751F\u6210\u5668\u9700\u8981\u5148\u5B9A\u4E49\u4E00\u4E2A\u751F\u6210\u5668\u51FD\u6570\uFF0C\u4F7F\u7528\u5173\u952E\u5B57function*\uFF0C\u8C03\u7528\u751F\u6210\u5668\u51FD\u6570\u4E0D\u4F1A\u6267\u884C\u51FD\u6570\u4F53\uFF0C\u800C\u662F\u8FD4\u56DE\u4E00\u4E2A\u8FED\u4EE3\u5668\u3002</p><p>\u64CD\u4F5C\uFF1A\u8C03\u7528\u8FED\u4EE3\u5668\u7684next\u65B9\u6CD5\uFF0C\u4F1A\u5BFC\u81F4\u751F\u6210\u5668\u51FD\u6570\u7684\u51FD\u6570\u4F53\u4ECE\u5934\u5F00\u59CB\u6267\u884C\uFF0C\u77E5\u9053\u9047\u89C1\u4E00\u4E2Ayield\u8BED\u53E5\u3002yield\u8BED\u53E5\u7684\u503C\uFF0C\u4F1A\u6210\u4E3A\u8FD4\u56DE\u503C\u3002</p><p>yield \u548Cyield*\u53EA\u80FD\u5728\u751F\u6210\u5668\u51FD\u6570\u4E2D\u4F7F\u7528\uFF0C\u5E38\u89C4\u51FD\u6570\u4E0D\u80FD\u51FA\u73B0\uFF01</p><p>1\u3001\u4F8B\u5B50</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u4F8B1</span>
<span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">oneDigitPrimes</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">yield</span> <span class="token number">2</span><span class="token punctuation">;</span>
    <span class="token keyword">yield</span> <span class="token number">3</span><span class="token punctuation">;</span>
    <span class="token keyword">yield</span> <span class="token number">5</span><span class="token punctuation">;</span>
    <span class="token keyword">yield</span> <span class="token number">7</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> primes <span class="token operator">=</span> <span class="token function">oneDigitPrimes</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
primes<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value <span class="token comment">// 2</span>
primes<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value <span class="token comment">// 3</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>primes<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 5</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>primes<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>done<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>primes<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>done<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>

<span class="token keyword">let</span> primesIterator <span class="token operator">=</span> primes<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">// \u53EF\u8FED\u4EE3\u5BF9\u8C61</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>primesIterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// {value: undefined, done: true}</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span><span class="token function">oneDigitPrimes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//[2, 3, 5, 7]</span>
<span class="token keyword">let</span> sum <span class="token operator">=</span> <span class="token number">0</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> v <span class="token keyword">of</span> <span class="token function">oneDigitPrimes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    sum <span class="token operator">+=</span> v
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>sum<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 17</span>

<span class="token comment">// \u4F8B2</span>
<span class="token keyword">const</span> <span class="token function-variable function">seq</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token operator">*</span> <span class="token punctuation">(</span>from<span class="token punctuation">,</span> to<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> from<span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> to<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token keyword">yield</span> i
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span><span class="token function">seq</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [3, 4,5]</span>

<span class="token comment">// \u4F8B3 \u7C7B\u548C\u5BF9\u8C61\u5B57\u9762\u91CF, \u4E0D\u80FD\u4F7F\u7528\u7BAD\u5934\u51FD\u6570\u5B9A\u4E49\u751F\u6210\u5668\u51FD\u6570</span>
<span class="token keyword">let</span> o <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token literal-property property">z</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
    <span class="token operator">*</span><span class="token function">g</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> key <span class="token keyword">of</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">yield</span> key
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span>o<span class="token punctuation">.</span><span class="token function">g</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//[&quot;x&quot;, &quot;y&quot;, &quot;z&quot;, &quot;g&quot;]</span>

<span class="token comment">// \u4F8B4 \u65E0\u9650\u56DE\u9001\u6590\u6CE2\u90A3\u5951\u6570 \u5982\u679C\u6267\u884C[...fibonacciSequence()]\u4F1A\u4E00\u76F4\u5FAA\u73AF\u76F4\u5230\u5185\u5B58\u8017\u5C3D</span>
<span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">fibonacciSequence</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> y <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">yield</span> y<span class="token punctuation">;</span>
        <span class="token punctuation">[</span>x<span class="token punctuation">,</span> y<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>y<span class="token punctuation">,</span> x <span class="token operator">+</span> y<span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">//\u901A\u8FC7\u9650\u5236\u6761\u4EF6\uFF0C \u8FD4\u56DE\u7B2C20\u4E2A\u6590\u6CE2\u90A3\u5951\u6570</span>
<span class="token keyword">function</span> <span class="token function">fibonacci</span><span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> f <span class="token keyword">of</span> <span class="token function">fibonacciSequence</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>n<span class="token operator">--</span> <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> f
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">fibonacci</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//89</span>

<span class="token comment">// \u914D\u5408take\u751F\u6210\u5668(\u7528\u53E6\u4E00\u4E2A\u751F\u6210\u5668\u5C01\u88C5\u4E00\u4E0B) \u56DE\u9001\u6307\u5B9A\u53EF\u8FED\u4EE3\u5BF9\u8C61\u7684\u524Dn\u4E2A\u5143\u7D20</span>
<span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">take</span><span class="token punctuation">(</span><span class="token parameter">n<span class="token punctuation">,</span> iterable</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> it <span class="token operator">=</span> iterable<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>n<span class="token operator">--</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> next <span class="token operator">=</span> it<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>next<span class="token punctuation">.</span>done<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">yield</span> next<span class="token punctuation">.</span>value
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span><span class="token function">take</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token function">fibonacciSequence</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//[1, 1, 2, 3, 5]</span>

<span class="token comment">// \u62FF\u5230\u53EF\u8FED\u4EE3\u5BF9\u8C61\u6570\u7EC4\uFF0C\u4EA4\u66FF\u56DE\u9001\u5143\u7D20</span>
<span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">zip</span><span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>iterables</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u53D6\u5F97\u6BCF\u4E2A\u53EF\u8FED\u4EE3\u5BF9\u8C61\u7684\u8FED\u4EE3\u5668</span>
    <span class="token keyword">let</span> iterators <span class="token operator">=</span> iterables<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">i</span> <span class="token operator">=&gt;</span> i<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>iterators<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">&gt;=</span> iterators<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            index <span class="token operator">=</span> <span class="token number">0</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">let</span> item <span class="token operator">=</span> iterators<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>item<span class="token punctuation">.</span>done<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            iterators<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">yield</span> item<span class="token punctuation">.</span>value
            index<span class="token operator">++</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span><span class="token function">zip</span><span class="token punctuation">(</span><span class="token function">oneDigitPrimes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;ab&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//[2, &quot;a&quot;, 0, 3, &quot;b&quot;, 5, 7]</span>

<span class="token comment">// yield*\u4E0E\u9012\u5F52\u751F\u6210\u5668</span>
<span class="token comment">// \u987A\u5E8F\u56DE\u9001\u5143\u7D20</span>
<span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">sequence</span><span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>iterables</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> iterable <span class="token keyword">of</span> iterables<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> item <span class="token keyword">of</span> iterable<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">yield</span> item<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span><span class="token function">sequence</span><span class="token punctuation">(</span><span class="token string">&quot;abc&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [&quot;a&quot;, &quot;b&quot;, &quot;c&quot;, 1, 2, 3]</span>
<span class="token comment">// \u4F7F\u7528yield* \u7B80\u5316</span>
<span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">sequence2</span><span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>iterables</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> item <span class="token keyword">of</span> iterables<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">yield</span><span class="token operator">*</span> item
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span><span class="token function">sequence2</span><span class="token punctuation">(</span><span class="token string">&#39;abc&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;def&#39;</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [&quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;d&quot;, &quot;e&quot;, &quot;f&quot;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2\u3001\u751F\u6210\u5668\u51FD\u6570\u8FD4\u56DE\u503C</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">oneAndDone</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">yield</span> <span class="token number">1</span>
    <span class="token keyword">return</span> <span class="token string">&quot;done&quot;</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u6B63\u5E38\u8FED\u4EE3\u4E2D\u4E0D\u4F1A\u51FA\u73B0\u8FD4\u56DE\u503C</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span><span class="token function">oneAndDone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [1]</span>
<span class="token comment">//\u5728\u663E\u5F0F\u8C03\u7528next\u53EF\u4EE5\u5F97\u5230</span>
<span class="token keyword">let</span> generator <span class="token operator">=</span> <span class="token function">oneAndDone</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>generator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// { value: 1, done: false }</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>generator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// { value: &#39;done&#39;, done: true }</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>generator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// { value: undefined, done: true }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,34),e=[o];function c(u,l){return s(),a("div",null,e)}const k=n(t,[["render",c],["__file","23.html.vue"]]);export{k as default};
