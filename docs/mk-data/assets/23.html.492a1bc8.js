import{_ as n,o as s,c as a,a as t}from"./app.fe9eae39.js";const p={},e=t(`<h1 id="ts-\u8FDB\u9636\u7528\u6CD5-proxy-reflect" tabindex="-1"><a class="header-anchor" href="#ts-\u8FDB\u9636\u7528\u6CD5-proxy-reflect" aria-hidden="true">#</a> TS \u8FDB\u9636\u7528\u6CD5 proxy &amp; Reflect</h1><h2 id="proxy" tabindex="-1"><a class="header-anchor" href="#proxy" aria-hidden="true">#</a> Proxy</h2><p>\u5BF9\u8C61\u7528\u4E8E\u521B\u5EFA\u4E00\u4E2A\u5BF9\u8C61\u7684\u4EE3\u7406\uFF0C\u4ECE\u800C\u5B9E\u73B0\u57FA\u672C\u64CD\u4F5C\u7684\u62E6\u622A\u548C\u81EA\u5B9A\u4E49\uFF08\u5982\u5C5E\u6027\u67E5\u627E\u3001\u8D4B\u503C\u3001\u679A\u4E3E\u3001\u51FD\u6570\u8C03\u7528\u7B49\uFF09</p><ul><li>target</li></ul><p>\u8981\u4F7F\u7528 Proxy \u5305\u88C5\u7684\u76EE\u6807\u5BF9\u8C61\uFF08\u53EF\u4EE5\u662F\u4EFB\u4F55\u7C7B\u578B\u7684\u5BF9\u8C61\uFF0C\u5305\u62EC\u539F\u751F\u6570\u7EC4\uFF0C\u51FD\u6570\uFF0C\u751A\u81F3\u53E6\u4E00\u4E2A\u4EE3\u7406\uFF09\u3002</p><ul><li>handler</li></ul><p>\u4E00\u4E2A\u901A\u5E38\u4EE5\u51FD\u6570\u4F5C\u4E3A\u5C5E\u6027\u7684\u5BF9\u8C61\uFF0C\u5404\u5C5E\u6027\u4E2D\u7684\u51FD\u6570\u5206\u522B\u5B9A\u4E49\u4E86\u5728\u6267\u884C\u5404\u79CD\u64CD\u4F5C\u65F6\u4EE3\u7406 p \u7684\u884C\u4E3A\u3002</p><p>handler.get() \u672C\u6B21\u4F7F\u7528\u7684 get</p><p>\u5C5E\u6027\u8BFB\u53D6\u64CD\u4F5C\u7684\u6355\u6349\u5668\u3002</p><p>handler.set() \u672C\u6B21\u4F7F\u7528\u7684 set</p><p>\u5C5E\u6027\u8BBE\u7F6E\u64CD\u4F5C\u7684\u6355\u6349\u5668\u3002</p><h2 id="reflect" tabindex="-1"><a class="header-anchor" href="#reflect" aria-hidden="true">#</a> Reflect</h2><p>\u4E0E\u5927\u591A\u6570\u5168\u5C40\u5BF9\u8C61\u4E0D\u540C Reflect \u5E76\u975E\u4E00\u4E2A\u6784\u9020\u51FD\u6570\uFF0C\u6240\u4EE5\u4E0D\u80FD\u901A\u8FC7 new \u8FD0\u7B97\u7B26\u5BF9\u5176\u8FDB\u884C\u8C03\u7528\uFF0C\u6216\u8005\u5C06 Reflect \u5BF9\u8C61\u4F5C\u4E3A\u4E00\u4E2A\u51FD\u6570\u6765\u8C03\u7528\u3002Reflect \u7684\u6240\u6709\u5C5E\u6027\u548C\u65B9\u6CD5\u90FD\u662F\u9759\u6001\u7684\uFF08\u5C31\u50CF Math \u5BF9\u8C61\uFF09</p><ul><li>Reflect.get(target, name, receiver)</li></ul><p>Reflect.get \u65B9\u6CD5\u67E5\u627E\u5E76\u8FD4\u56DE target \u5BF9\u8C61\u7684 name \u5C5E\u6027\uFF0C\u5982\u679C\u6CA1\u6709\u8BE5\u5C5E\u6027\u8FD4\u56DE undefined</p><ul><li>Reflect.set(target, name,value, receiver)</li></ul><p>Reflect.set \u65B9\u6CD5\u8BBE\u7F6E target \u5BF9\u8C61\u7684 name \u5C5E\u6027\u7B49\u4E8E value\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Person</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    name<span class="token operator">:</span> <span class="token builtin">string</span>
    age<span class="token operator">:</span> <span class="token builtin">number</span>
    text<span class="token operator">:</span> <span class="token builtin">string</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token function-variable function">proxy</span> <span class="token operator">=</span> <span class="token punctuation">(</span>object<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>object<span class="token punctuation">,</span> <span class="token punctuation">{</span>
        <span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> prop<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">get key======&gt;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> Reflect<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> prop<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>

        <span class="token function">set</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> prop<span class="token punctuation">,</span> value<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">set key======&gt;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>

        <span class="token keyword">return</span> Reflect<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> prop<span class="token punctuation">,</span> value<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> logAccess <span class="token operator">=</span> <span class="token punctuation">(</span>object<span class="token operator">:</span> Person<span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token string">&#39;name&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;age&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;text&#39;</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">proxy</span><span class="token punctuation">(</span>object<span class="token punctuation">,</span> key<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> man<span class="token operator">:</span> Person <span class="token operator">=</span> <span class="token function">logAccess</span><span class="token punctuation">(</span>
    <span class="token punctuation">{</span>
        name<span class="token operator">:</span> <span class="token string">&#39;mk&#39;</span><span class="token punctuation">,</span>
        age<span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span>
        text<span class="token operator">:</span> <span class="token string">&#39;\u6211&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token string">&#39;age&#39;</span>
<span class="token punctuation">)</span>

man<span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token number">30</span>

<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>man<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F7F\u7528\u6CDB\u578B+keyof \u4F18\u5316</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Person</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    name<span class="token operator">:</span> <span class="token builtin">string</span>
    age<span class="token operator">:</span> <span class="token builtin">number</span>
    text<span class="token operator">:</span> <span class="token builtin">string</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token function-variable function">proxy</span> <span class="token operator">=</span> <span class="token punctuation">(</span>object<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>object<span class="token punctuation">,</span> <span class="token punctuation">{</span>
        <span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> prop<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">get key======&gt;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> Reflect<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> prop<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>

        <span class="token function">set</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> prop<span class="token punctuation">,</span> value<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">set key======&gt;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>

        <span class="token keyword">return</span> Reflect<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> prop<span class="token punctuation">,</span> value<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> logAccess <span class="token operator">=</span> <span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>object<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">proxy</span><span class="token punctuation">(</span>object<span class="token punctuation">,</span> key<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> man<span class="token operator">:</span> Person <span class="token operator">=</span> <span class="token function">logAccess</span><span class="token punctuation">(</span>
    <span class="token punctuation">{</span>
        name<span class="token operator">:</span> <span class="token string">&#39;mk&#39;</span><span class="token punctuation">,</span>
        age<span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span>
        text<span class="token operator">:</span> <span class="token string">&#39;\u6211&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token string">&#39;age&#39;</span>
<span class="token punctuation">)</span>

<span class="token keyword">let</span> man2 <span class="token operator">=</span> <span class="token function">logAccess</span><span class="token punctuation">(</span>
    <span class="token punctuation">{</span>
        id<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
        name<span class="token operator">:</span> <span class="token string">&#39;mk2&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token string">&#39;name&#39;</span>
<span class="token punctuation">)</span>

man<span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token number">30</span>

<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>man<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6848\u4F8B\u7B80\u5355\u5B9E\u73B0\u4E00\u4E2Amobx\u89C2\u5BDF\u8005\u6A21\u5F0F</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> list<span class="token operator">:</span> Set<span class="token operator">&lt;</span><span class="token builtin">Function</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> <span class="token function-variable function">autoRun</span> <span class="token operator">=</span> <span class="token punctuation">(</span>cb<span class="token operator">:</span> <span class="token builtin">Function</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>cb<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>cb<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> observable <span class="token operator">=</span> <span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name">object</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>params<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>params<span class="token punctuation">,</span> <span class="token punctuation">{</span>
        <span class="token function">set</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">const</span> result <span class="token operator">=</span> Reflect<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span>
            list<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>fn <span class="token operator">=&gt;</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span>
            <span class="token keyword">return</span> result
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> person <span class="token operator">=</span> <span class="token function">observable</span><span class="token punctuation">(</span><span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&quot;mk&quot;</span><span class="token punctuation">,</span> attr<span class="token operator">:</span> <span class="token string">&quot;\u5A01\u731B\u5148\u751F&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token function">autoRun</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u6211\u53D8\u5316\u4E86&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

person<span class="token punctuation">.</span>attr <span class="token operator">=</span> <span class="token string">&#39;\u5A01\u731B\u4E2A\u6376\u6376&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,22),o=[e];function c(l,i){return s(),a("div",null,o)}const r=n(p,[["render",c],["__file","23.html.vue"]]);export{r as default};
