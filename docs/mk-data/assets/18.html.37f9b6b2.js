import{_ as e,r as p,o as t,c as o,b as n,d as s,e as c,a as l}from"./app.7b8ed854.js";const i={},r=l(`<h1 id="\u58F0\u660E\u6587\u4EF6d-ts" tabindex="-1"><a class="header-anchor" href="#\u58F0\u660E\u6587\u4EF6d-ts" aria-hidden="true">#</a> \u58F0\u660E\u6587\u4EF6d.ts</h1><h2 id="\u58F0\u660E\u6587\u4EF6-declare" tabindex="-1"><a class="header-anchor" href="#\u58F0\u660E\u6587\u4EF6-declare" aria-hidden="true">#</a> \u58F0\u660E\u6587\u4EF6 declare</h2><p>\u5F53\u4F7F\u7528\u7B2C\u4E09\u65B9\u5E93\u65F6\uFF0C\u6211\u4EEC\u9700\u8981\u5F15\u7528\u5B83\u7684\u58F0\u660E\u6587\u4EF6\uFF0C\u624D\u80FD\u83B7\u5F97\u5BF9\u5E94\u7684\u4EE3\u7801\u8865\u5168\u3001\u63A5\u53E3\u63D0\u793A\u7B49\u529F\u80FD\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">declare</span> <span class="token keyword">var</span> \u58F0\u660E\u5168\u5C40\u53D8\u91CF
<span class="token keyword">declare</span> <span class="token keyword">function</span> \u58F0\u660E\u5168\u5C40\u65B9\u6CD5
<span class="token keyword">declare</span> <span class="token keyword">class</span> <span class="token class-name">\u58F0\u660E\u5168\u5C40\u7C7B</span>
<span class="token keyword">declare</span> <span class="token keyword">enum</span> \u58F0\u660E\u5168\u5C40\u679A\u4E3E\u7C7B\u578B
<span class="token keyword">declare</span> <span class="token keyword">namespace</span> \u58F0\u660E\uFF08\u542B\u6709\u5B50\u5C5E\u6027\u7684\uFF09\u5168\u5C40\u5BF9\u8C61
<span class="token keyword">interface</span> <span class="token class-name">\u548C</span> <span class="token keyword">type</span> <span class="token class-name">\u58F0\u660E\u5168\u5C40\u7C7B\u578B</span>
<span class="token comment">/// &lt;reference /&gt; \u4E09\u659C\u7EBF\u6307\u4EE4</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u6709\u4E00\u4E9B\u7B2C\u4E09\u65B9\u5305\u786E\u5B9E\u6CA1\u6709\u58F0\u660E\u6587\u4EF6\u6211\u4EEC\u53EF\u4EE5\u81EA\u5DF1\u53BB\u5B9A\u4E49</p><p>\u540D\u79F0.d.ts \u521B\u5EFA\u4E00\u4E2A\u6587\u4EF6\u53BB\u58F0\u660E</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// index.ts</span>
<span class="token keyword">import</span> express <span class="token keyword">from</span> <span class="token string">&#39;express&#39;</span>

<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">express</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> router <span class="token operator">=</span> express<span class="token punctuation">.</span><span class="token function">Router</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">&#39;/api&#39;</span><span class="token punctuation">,</span> router<span class="token punctuation">)</span>

router<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/list&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>req<span class="token punctuation">,</span> res<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        codeL <span class="token number">200</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

app<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;localhost:3000&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// express.d.ts</span>
<span class="token keyword">declare</span> <span class="token keyword">module</span> <span class="token string">&#39;express&#39;</span> <span class="token punctuation">{</span>
    <span class="token keyword">interface</span> <span class="token class-name">Router</span> <span class="token punctuation">{</span>
        <span class="token function">get</span><span class="token punctuation">(</span>path<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token function-variable function">cb</span><span class="token operator">:</span> <span class="token punctuation">(</span>req<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span> res<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">interface</span> <span class="token class-name">App</span> <span class="token punctuation">{</span>
        <span class="token function">use</span><span class="token punctuation">(</span>path<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> router<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span>
        <span class="token function">listen</span><span class="token punctuation">(</span>port<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> cb<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">interface</span> <span class="token class-name">Express</span> <span class="token punctuation">{</span>
        <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> App
        <span class="token function">Router</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> Router
    <span class="token punctuation">}</span>

    <span class="token keyword">const</span> express<span class="token operator">:</span> Express

    <span class="token keyword">export</span> <span class="token keyword">default</span> express
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8),u={href:"https://www.npmjs.com/~types?activeTab=packages",target:"_blank",rel:"noopener noreferrer"};function d(k,v){const a=p("ExternalLinkIcon");return t(),o("div",null,[r,n("blockquote",null,[n("p",null,[s("\u5173\u4E8E\u8FD9\u4E9B\u7B2C\u4E09\u65B9\u7684\u58F0\u660E\u6587\u4EF6\u5305\u90FD\u6536\u5F55\u5230\u4E86"),n("a",u,[s("npm"),c(a)])])])])}const b=e(i,[["render",d],["__file","18.html.vue"]]);export{b as default};
