import{_ as o,r as e,o as c,c as l,b as s,d as n,e as p,a}from"./app.1aa530a2.js";const u={},i=a(`<h1 id="node-js\u5B9E\u73B0\u5927\u6587\u4EF6\u5206\u7247\u4E0A\u4F20\u57FA\u672C\u539F\u7406\u53CA\u5B9E\u8DF5" tabindex="-1"><a class="header-anchor" href="#node-js\u5B9E\u73B0\u5927\u6587\u4EF6\u5206\u7247\u4E0A\u4F20\u57FA\u672C\u539F\u7406\u53CA\u5B9E\u8DF5" aria-hidden="true">#</a> Node + js\u5B9E\u73B0\u5927\u6587\u4EF6\u5206\u7247\u4E0A\u4F20\u57FA\u672C\u539F\u7406\u53CA\u5B9E\u8DF5</h1><h2 id="\u4EC0\u4E48\u662F\u5206\u7247\u4E0A\u4F20" tabindex="-1"><a class="header-anchor" href="#\u4EC0\u4E48\u662F\u5206\u7247\u4E0A\u4F20" aria-hidden="true">#</a> \u4EC0\u4E48\u662F\u5206\u7247\u4E0A\u4F20\uFF1F</h2><p>\u5206\u7247\u4E0A\u4F20\u662F\u628A\u4E00\u4E2A\u5927\u7684\u6587\u4EF6\u5206\u6210\u82E5\u5E72\u5757\uFF0C\u4E00\u5757\u4E00\u5757\u7684\u4F20\u8F93\u3002\u8FD9\u6837\u505A\u7684\u597D\u5904\u53EF\u4EE5\u51CF\u5C11\u91CD\u65B0\u4E0A\u4F20\u7684\u5F00\u9500\u3002\u6BD4\u5982\uFF1A\u5982\u679C\u6211\u4EEC\u4E0A\u4F20\u7684\u6587\u4EF6\u662F\u4E00\u4E2A\u5F88\u5927\u7684\u6587\u4EF6\uFF0C\u90A3\u4E48\u4E0A\u4F20\u7684\u65F6\u95F4\u5E94\u8BE5\u4F1A\u6BD4\u8F83\u4E45\uFF0C\u518D\u52A0\u4E0A\u7F51\u7EDC\u4E0D\u7A33\u5B9A\u5404\u79CD\u56E0\u7D20\u7684\u5F71\u54CD\uFF0C\u5F88\u5BB9\u6613\u5BFC\u81F4\u4F20\u8F93\u4E2D\u65AD\uFF0C\u7528\u6237\u9664\u4E86\u91CD\u65B0\u4E0A\u4F20\u6587\u4EF6\u5916\u6CA1\u6709\u5176\u4ED6\u7684\u529E\u6CD5\uFF0C\u4F46\u662F\u6211\u4EEC\u53EF\u4EE5\u4F7F\u7528\u5206\u7247\u4E0A\u4F20\u6765\u89E3\u51B3\u8FD9\u4E2A\u95EE\u9898\u3002\u901A\u8FC7\u5206\u7247\u4E0A\u4F20\u6280\u672F\uFF0C\u5982\u679C\u7F51\u7EDC\u4F20\u8F93\u4E2D\u65AD\uFF0C\u6211\u4EEC\u91CD\u65B0\u9009\u62E9\u6587\u4EF6\u53EA\u9700\u8981\u4F20\u5269\u4F59\u7684\u5206\u7247\u3002\u800C\u4E0D\u9700\u8981\u91CD\u4F20\u6574\u4E2A\u6587\u4EF6\uFF0C\u5927\u5927\u51CF\u5C11\u4E86\u91CD\u4F20\u7684\u5F00\u9500\u3002</p><p>\u4F46\u662F\u6211\u4EEC\u8981\u5982\u4F55\u9009\u62E9\u4E00\u4E2A\u5408\u9002\u7684\u5206\u7247\u5462\uFF1F</p><ul><li>\u56E0\u6B64\u6211\u4EEC\u8981\u8003\u8651\u5982\u4E0B\u51E0\u4E2A\u4E8B\u60C5\uFF1A</li></ul><ol><li>\u5206\u7247\u8D8A\u5C0F\uFF0C\u90A3\u4E48\u8BF7\u6C42\u80AF\u5B9A\u8D8A\u591A\uFF0C\u5F00\u9500\u5C31\u8D8A\u5927\u3002\u56E0\u6B64\u4E0D\u80FD\u8BBE\u7F6E\u592A\u5C0F\u3002</li><li>\u5206\u7247\u8D8A\u5927\uFF0C\u7075\u6D3B\u5EA6\u5C31\u5C11\u4E86\u3002</li><li>\u670D\u52A1\u5668\u7AEF\u90FD\u4F1A\u6709\u4E2A\u56FA\u5B9A\u5927\u5C0F\u7684\u63A5\u6536Buffer\u3002\u5206\u7247\u7684\u5927\u5C0F\u6700\u597D\u662F\u8FD9\u4E2A\u503C\u7684\u6574\u6570\u500D\u3002</li></ol><p>\u56E0\u6B64\uFF0C\u7EFC\u5408\u8003\u8651\u5230\u63A8\u8350\u5206\u7247\u7684\u5927\u5C0F\u662F2M-5M. \u5177\u4F53\u5206\u7247\u7684\u5927\u5C0F\u9700\u8981\u6839\u636E\u6587\u4EF6\u7684\u5927\u5C0F\u6765\u786E\u5B9A\uFF0C\u5982\u679C\u6587\u4EF6\u592A\u5927\uFF0C\u5EFA\u8BAE\u5206\u7247\u7684\u5927\u5C0F\u662F5M\uFF0C\u5982\u679C\u6587\u4EF6\u76F8\u5BF9\u8F83\u5C0F\uFF0C\u90A3\u4E48\u5EFA\u8BAE\u5206\u7247\u7684\u5927\u5C0F\u662F2M\u3002</p><ul><li>\u5B9E\u73B0\u6587\u4EF6\u5206\u7247\u4E0A\u4F20\u7684\u6B65\u9AA4\u5982\u4E0B\uFF1A</li></ul><ol><li>\u5148\u5BF9\u6587\u4EF6\u8FDB\u884Cmd5\u52A0\u5BC6\u3002\u4F7F\u7528md5\u52A0\u5BC6\u7684\u4F18\u70B9\u662F\uFF1A\u53EF\u4EE5\u5BF9\u6587\u4EF6\u8FDB\u884C\u552F\u4E00\u6807\u8BC6\uFF0C\u540C\u6837\u53EF\u4EE5\u4E3A\u540E\u53F0\u8FDB\u884C\u6587\u4EF6\u5B8C\u6574\u6027\u6821\u9A8C\u8FDB\u884C\u6BD4\u5BF9\u3002</li><li>\u62FF\u5230md5\u503C\u4EE5\u540E\uFF0C\u670D\u52A1\u5668\u7AEF\u67E5\u8BE2\u4E0B\u8BE5\u6587\u4EF6\u662F\u5426\u5DF2\u7ECF\u4E0A\u4F20\u8FC7\uFF0C\u5982\u679C\u5DF2\u7ECF\u4E0A\u4F20\u8FC7\u7684\u8BDD\uFF0C\u5C31\u4E0D\u7528\u91CD\u65B0\u518D\u4E0A\u4F20\u3002</li><li>\u5BF9\u5927\u6587\u4EF6\u8FDB\u884C\u5206\u7247\u3002\u6BD4\u5982\u4E00\u4E2A100M\u7684\u6587\u4EF6\uFF0C\u6211\u4EEC\u4E00\u4E2A\u5206\u7247\u662F5M\u7684\u8BDD\uFF0C\u90A3\u4E48\u8FD9\u4E2A\u6587\u4EF6\u53EF\u4EE5\u520620\u6B21\u4E0A\u4F20\u3002</li><li>\u5411\u540E\u53F0\u8BF7\u6C42\u63A5\u53E3\uFF0C\u63A5\u53E3\u91CC\u7684\u6570\u636E\u5C31\u662F\u6211\u4EEC\u5DF2\u7ECF\u4E0A\u4F20\u8FC7\u7684\u6587\u4EF6\u5757\u3002(\u6CE8\u610F\uFF1A\u4E3A\u4EC0\u4E48\u8981\u53D1\u8FD9\u4E2A\u8BF7\u6C42\uFF1F\u5C31\u662F\u4E3A\u4E86\u80FD\u7EED\u4F20\uFF0C\u6BD4\u5982\u6211\u4EEC\u4F7F\u7528\u767E\u5EA6\u7F51\u76D8\u5BF9\u5427\uFF0C\u7F51\u76D8\u91CC\u9762\u6709\u7EED\u4F20\u529F\u80FD\uFF0C\u5F53\u4E00\u4E2A\u6587\u4EF6\u4F20\u5230\u4E00\u534A\u7684\u65F6\u5019\uFF0C\u7A81\u7136\u60F3\u4E0B\u73ED\u4E0D\u60F3\u4E0A\u4F20\u4E86\uFF0C\u90A3\u4E48\u670D\u52A1\u5668\u5C31\u5E94\u8BE5\u8BB0\u4F4F\u6211\u4E4B\u524D\u4E0A\u4F20\u8FC7\u7684\u6587\u4EF6\u5757\uFF0C\u5F53\u6211\u6253\u5F00\u7535\u8111\u91CD\u65B0\u4E0A\u4F20\u7684\u65F6\u5019\uFF0C\u90A3\u4E48\u5B83\u5E94\u8BE5\u8DF3\u8FC7\u6211\u4E4B\u524D\u5DF2\u7ECF\u4E0A\u4F20\u7684\u6587\u4EF6\u5757\u3002\u518D\u4E0A\u4F20\u540E\u7EED\u7684\u5757)\u3002</li><li>\u5F00\u59CB\u5BF9\u672A\u4E0A\u4F20\u8FC7\u7684\u6587\u4EF6\u5757\u8FDB\u884C\u4E0A\u4F20\u3002(\u8FD9\u4E2A\u662F\u7B2C\u4E8C\u4E2A\u8BF7\u6C42\uFF0C\u4F1A\u628A\u6240\u6709\u7684\u5206\u7247\u5408\u5E76\uFF0C\u7136\u540E\u4E0A\u4F20\u8BF7\u6C42)\u3002</li><li>\u4E0A\u4F20\u6210\u529F\u540E\uFF0C\u670D\u52A1\u5668\u4F1A\u8FDB\u884C\u6587\u4EF6\u5408\u5E76\u3002\u6700\u540E\u5B8C\u6210\u3002</li></ol><h2 id="\u7406\u89E3blob\u5BF9\u8C61\u4E2D\u7684slice\u65B9\u6CD5\u5BF9\u6587\u4EF6\u8FDB\u884C\u5206\u5272\u53CA\u5176\u4ED6\u77E5\u8BC6\u70B9" tabindex="-1"><a class="header-anchor" href="#\u7406\u89E3blob\u5BF9\u8C61\u4E2D\u7684slice\u65B9\u6CD5\u5BF9\u6587\u4EF6\u8FDB\u884C\u5206\u5272\u53CA\u5176\u4ED6\u77E5\u8BC6\u70B9" aria-hidden="true">#</a> \u7406\u89E3Blob\u5BF9\u8C61\u4E2D\u7684slice\u65B9\u6CD5\u5BF9\u6587\u4EF6\u8FDB\u884C\u5206\u5272\u53CA\u5176\u4ED6\u77E5\u8BC6\u70B9</h2><p>\u5728\u7F16\u5199\u4EE3\u7801\u4E4B\u524D\uFF0C\u6211\u4EEC\u9700\u8981\u4E86\u89E3\u4E00\u4E9B\u57FA\u672C\u7684\u77E5\u8BC6\u70B9\uFF0C\u7136\u540E\u5728\u4E86\u89E3\u57FA\u7840\u77E5\u8BC6\u70B9\u4E4B\u4E0A\uFF0C\u6211\u4EEC\u518D\u53BB\u5B9E\u8DF5\u6211\u4EEC\u7684\u5927\u6587\u4EF6\u5206\u7247\u4E0A\u4F20\u8FD9\u4E48\u7684\u4E00\u4E2Ademo\u3002\u9996\u5148\u6211\u4EEC\u6765\u770B\u4E0B\u6211\u4EEC\u7684Blob\u5BF9\u8C61\uFF0C\u5982\u4E0B\u4EE3\u7801\u6240\u793A\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> b <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Blob</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u5B66\u4E60 blob.slice \u65B9\u6CD5</li></ul><p>blob.slice(startByte, endByte) \u662FBlob\u5BF9\u8C61\u4E2D\u7684\u4E00\u4E2A\u65B9\u6CD5\uFF0CFile\u5BF9\u8C61\u5B83\u662F\u7EE7\u627FBlob\u5BF9\u8C61\u7684\uFF0C\u56E0\u6B64File\u5BF9\u8C61\u4E5F\u6709\u8BE5slice\u65B9\u6CD5\u7684\u3002</p><p>\u53C2\u6570\uFF1A startByte: \u8868\u793A\u6587\u4EF6\u8D77\u59CB\u8BFB\u53D6\u7684Byte\u5B57\u8282\u6570\u3002 endByte: \u8868\u793A\u7ED3\u675F\u8BFB\u53D6\u7684\u5B57\u8282\u6570\u3002</p><p>\u8FD4\u56DE\u503C\uFF1Avar b = new Blob(startByte, endByte); \u8BE5\u65B9\u6CD5\u7684\u8FD4\u56DE\u503C\u4ECD\u7136\u662F\u4E00\u4E2ABlob\u7C7B\u578B\u3002</p><p>\u6211\u4EEC\u53EF\u4EE5\u4F7F\u7528 blob.slice() \u65B9\u6CD5\u5BF9\u4E8C\u8FDB\u5236\u7684Blob\u5BF9\u8C61\u8FDB\u884C\u5207\u5272\uFF0C\u4F46\u662F\u8BE5\u65B9\u6CD5\u4E5F\u662F\u6709\u6D4F\u89C8\u5668\u517C\u5BB9\u6027\u7684\uFF0C\u56E0\u6B64\u6211\u4EEC\u53EF\u4EE5\u5C01\u88C5\u4E00\u4E2A\u65B9\u6CD5\uFF1A\u5982\u4E0B\u6240\u793A\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">blobSlice</span><span class="token punctuation">(</span><span class="token parameter">blob<span class="token punctuation">,</span> startByte<span class="token punctuation">,</span> endByte</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>blob<span class="token punctuation">.</span>slice<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> blob<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>startByte<span class="token punctuation">,</span> endByte<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u517C\u5BB9firefox</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>blob<span class="token punctuation">.</span>mozSlice<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> blob<span class="token punctuation">.</span><span class="token function">mozSlice</span><span class="token punctuation">(</span>startByte<span class="token punctuation">,</span> endByte<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u517C\u5BB9webkit</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>blob<span class="token punctuation">.</span>webkitSlice<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> blob<span class="token punctuation">.</span><span class="token function">webkitSlice</span><span class="token punctuation">(</span>startByte<span class="token punctuation">,</span> endByte<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u7406\u89E3 async/await \u7684\u4F7F\u7528</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">hashFile2</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">file</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">111</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
window<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token keyword">async</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> hash <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">hashFile2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u4E0A\u4EE3\u7801\uFF0C\u5982\u679C\u6211\u4EEC\u76F4\u63A5\u5237\u65B0\u9875\u9762\uFF0C\u5C31\u53EF\u4EE5\u5728\u63A7\u5236\u53F0\u4E2D\u8F93\u51FA 111 \u8FD9\u4E2A\u7684\u5B57\u7B26\u3002\u4E3A\u4EC0\u4E48\u6211\u73B0\u5728\u8981\u8BB2\u89E3\u8FD9\u4E2A\u5462\uFF0C\u56E0\u4E3A\u5F85\u4F1A\u6211\u4EEC\u7684demo\u4F1A\u4F7F\u7528\u5230\u8BE5\u77E5\u8BC6\u70B9\uFF0C\u6240\u4EE5\u63D0\u524D\u8BB2\u89E3\u4E0B\u7406\u89E3\u4E0B\u8BE5\u77E5\u8BC6\u3002</p><ul><li>\u7406\u89E3 FileReader.readAsArrayBuffer()\u65B9\u6CD5</li></ul><p>\u8BE5\u65B9\u6CD5\u4F1A\u6309\u5B57\u8282\u8BFB\u53D6\u6587\u4EF6\u5185\u5BB9\uFF0C\u5E76\u8F6C\u6362\u4E3A ArrayBuffer \u5BF9\u8C61\u3002readAsArrayBuffer\u65B9\u6CD5\u8BFB\u53D6\u6587\u4EF6\u540E\uFF0C\u4F1A\u5728\u5185\u5B58\u4E2D\u521B\u5EFA\u4E00\u4E2A ArrayBuffer\u5BF9\u8C61(\u4E8C\u8FDB\u5236\u7F13\u51B2\u533A)\uFF0C\u4F1A\u5C06\u4E8C\u8FDB\u5236\u6570\u636E\u5B58\u653E\u5728\u5176\u4E2D\u3002\u901A\u8FC7\u6B64\u65B9\u5F0F\uFF0C\u6211\u4EEC\u5C31\u53EF\u4EE5\u76F4\u63A5\u5728\u7F51\u7EDC\u4E2D\u4F20\u8F93\u4E8C\u8FDB\u5236\u5185\u5BB9\u3002 \u5176\u8BED\u6CD5\u7ED3\u6784\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>FileReader<span class="token punctuation">.</span><span class="token function">readAsArrayBuffer</span><span class="token punctuation">(</span>Blob<span class="token operator">|</span>File<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>Blob|File</code> \u5FC5\u987B\u53C2\u6570\uFF0C\u53C2\u6570\u662FBlob\u6216File\u5BF9\u8C61\u3002</p><p>\u5982\u4E0B\u4EE3\u7801\u6F14\u793A\uFF1A</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>zh-cn<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span> utf-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>readAsArrayBuffer\u6D4B\u8BD5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>file<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>file<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  window<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> input <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;file&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    input<span class="token punctuation">.</span><span class="token function-variable function">onchange</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">var</span> file <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>files<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>file<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//\u8BFB\u53D6\u672C\u5730\u6587\u4EF6\uFF0C\u4EE5gbk\u7F16\u7801\u65B9\u5F0F\u8F93\u51FA</span>
        <span class="token keyword">var</span> reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        reader<span class="token punctuation">.</span><span class="token function">readAsArrayBuffer</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>
        reader<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Blob</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>result<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u4F7F\u7528-spark-md5-\u751F\u6210-md5\u6587\u4EF6" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528-spark-md5-\u751F\u6210-md5\u6587\u4EF6" aria-hidden="true">#</a> \u4F7F\u7528 spark-md5 \u751F\u6210 md5\u6587\u4EF6</h2><p>\u4E0B\u9762\u6211\u4EEC\u6765\u7406\u89E3\u4E0B \u4E0A\u4F20\u6587\u4EF6\u5982\u4F55\u6765\u5F97\u5230 md5 \u7684\u503C\u3002\u4E0A\u4F20\u6587\u4EF6\u7B80\u5355\u7684\u5982\u4E0Bdemo, \u4EE3\u7801\u6240\u793A\uFF1A</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>en<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>viewport<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>width=device-width, initial-scale=1.0<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>X-UA-Compatible<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ie=edge<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>\u6587\u4EF6\u4E0A\u4F20<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://code.jquery.com/jquery-3.4.1.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://cdnjs.cloudflare.com/ajax/libs/spark-md5/3.0.0/spark-md5.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>\u5927\u6587\u4EF6\u4E0A\u4F20\u6D4B\u8BD5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span>\u81EA\u5B9A\u4E49\u4E0A\u4F20\u6587\u4EF6<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>file<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>file<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>avatar<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>submitBtn<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>button<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\u63D0\u4EA4<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text/javascript<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
    <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> submitBtn <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#submitBtn&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      submitBtn<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> fileDom <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#file&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span> 
        <span class="token comment">// \u83B7\u53D6\u5230\u7684files\u4E3A\u4E00\u4E2AFile\u5BF9\u8C61\u6570\u7EC4\uFF0C\u5982\u679C\u5141\u8BB8\u591A\u9009\u7684\u65F6\u5019\uFF0C\u6587\u4EF6\u4E3A\u591A\u4E2A</span>
        <span class="token keyword">const</span> files <span class="token operator">=</span> fileDom<span class="token punctuation">.</span>files<span class="token punctuation">;</span>
        <span class="token keyword">const</span> file <span class="token operator">=</span> files<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// \u83B7\u53D6\u7B2C\u4E00\u4E2A\u6587\u4EF6\uFF0C\u56E0\u4E3A\u6587\u4EF6\u662F\u4E00\u4E2A\u6570\u7EC4</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>file<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&#39;\u6CA1\u6709\u83B7\u53D6\u6587\u4EF6&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">var</span> fileSize <span class="token operator">=</span> file<span class="token punctuation">.</span>size<span class="token punctuation">;</span> <span class="token comment">// \u6587\u4EF6\u5927\u5C0F</span>
        <span class="token keyword">var</span> chunkSize <span class="token operator">=</span> <span class="token number">2</span> <span class="token operator">*</span> <span class="token number">1024</span> <span class="token operator">*</span> <span class="token number">1024</span><span class="token punctuation">;</span> <span class="token comment">// \u5207\u7247\u7684\u5927\u5C0F</span>
        <span class="token keyword">var</span> chunks <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span>fileSize <span class="token operator">/</span> chunkSize<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u83B7\u53D6\u5207\u7247\u7684\u4E2A\u6570</span>
        <span class="token keyword">var</span> blobSlice <span class="token operator">=</span> <span class="token class-name">File</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>slice <span class="token operator">||</span> <span class="token class-name">File</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>mozSlice <span class="token operator">||</span> <span class="token class-name">File</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>webkitSlice<span class="token punctuation">;</span>
        <span class="token keyword">var</span> spark <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SparkMD5<span class="token punctuation">.</span>ArrayBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">var</span> reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">var</span> currentChunk <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

        reader<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">const</span> result <span class="token operator">=</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>result<span class="token punctuation">;</span>
          spark<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
          currentChunk<span class="token operator">++</span><span class="token punctuation">;</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>currentChunk <span class="token operator">&lt;</span> chunks<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">loadNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\u7B2C</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>currentChunk<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\u5206\u7247\u89E3\u6790\u5B8C\u6210\uFF0C\u5F00\u59CB\u89E3\u6790</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>currentChunk <span class="token operator">+</span> <span class="token number">1</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\u5206\u7247</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">const</span> md5 <span class="token operator">=</span> spark<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u89E3\u6790\u5B8C\u6210&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>md5<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token keyword">function</span> <span class="token function">loadNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">var</span> start <span class="token operator">=</span> currentChunk <span class="token operator">*</span> chunkSize<span class="token punctuation">;</span>
          <span class="token keyword">var</span> end <span class="token operator">=</span> start <span class="token operator">+</span> chunkSize <span class="token operator">&gt;</span> file<span class="token punctuation">.</span>size <span class="token operator">?</span> file<span class="token punctuation">.</span>size <span class="token operator">:</span> <span class="token punctuation">(</span>start <span class="token operator">+</span> chunkSize<span class="token punctuation">)</span><span class="token punctuation">;</span>
          reader<span class="token punctuation">.</span><span class="token function">readAsArrayBuffer</span><span class="token punctuation">(</span><span class="token function">blobSlice</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>file<span class="token punctuation">,</span> start<span class="token punctuation">,</span> end<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token function">loadNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u4E0A\u4EE3\u7801\uFF0C\u9996\u5148\u6211\u5728 input type = &#39;file&#39; \u8FD9\u6837\u7684\u4F1A\u9009\u62E9\u4E00\u4E2A\u6587\u4EF6\uFF0C\u7136\u540E\u70B9\u51FB\u8FDB\u884C\u4E0A\u4F20\uFF0C\u5148\u83B7\u53D6\u6587\u4EF6\u7684\u5927\u5C0F\uFF0C\u7136\u540E\u5B9A\u4E49\u4E00\u4E2A\u5206\u7247\u7684\u5927\u5C0F\u9ED8\u8BA4\u4E3A2\u5146\uFF0C\u4F7F\u7528 var chunks = Math.ceil(fileSize / chunkSize); // \u83B7\u53D6\u5207\u7247\u7684\u4E2A\u6570 \u65B9\u6CD5\u83B7\u53D6\u5207\u7247\u7684\u4E2A\u6570\u3002</p>`,31),k={href:"http://npm.taobao.org/package/spark-md5",target:"_blank",rel:"noopener noreferrer"},r=a(`<p>currentChunk \u7684\u542B\u4E49\u662F\u7B2C\u4E8C\u4E2A\u5206\u7247(\u4ECE0\u5F00\u59CB\u7684\uFF0C\u56E0\u6B64\u8FD9\u91CC\u5B83\u7684\u503C\u4E3A1)\uFF0C\u7ED3\u675F\u7684\u4F4D\u7F6E \u8BA1\u7B97\u65B9\u5F0F\u4E3A\uFF1A var end = start + chunkSize &gt; file.size ? file.size : (start + chunkSize);</p><p>\u4E5F\u5C31\u8BF4\uFF0C\u5982\u679C\u4E00\u4E2A\u6587\u4EF6\u7684\u5927\u5C0F\u662F2.1\u5146\u7684\u8BDD\uFF0C\u4E00\u4E2A\u5206\u7247\u662F2\u5146\u7684\u8BDD\uFF0C\u90A3\u4E48\u5B83\u5C31\u6700\u5927\u5206\u7247\u7684\u6570\u91CF\u5C31\u662F2\u7247\u4E86\uFF0C\u4F46\u662F currentChunk \u9ED8\u8BA4\u4ECE0\u5F00\u59CB\u7684\uFF0C\u56E0\u6B64\u7B2C\u4E8C\u4E2A\u5206\u7247\uFF0C\u8BE5\u503C\u5C31\u53D8\u62101\u4E86\uFF0C\u56E0\u6B64 start\u7684\u4F4D\u7F6E\u5C31\u662F var start = 1 * 2(\u5146)\u4E86\uFF0C\u7136\u540E var end = start + chunkSize &gt; file.size ? file.size : (start + chunkSize);</p><p>\u5982\u679C start + chunkSize \u5927\u4E8E \u6587\u4EF6\u7684\u5927\u5C0F(file.size) \u7684\u8BDD\uFF0C\u90A3\u4E48\u5C31\u76F4\u63A5\u53BB file.size(\u6587\u4EF6\u7684\u5927\u5C0F)\uFF0C\u5426\u5219\u7684\u8BDD\uFF0C\u7ED3\u675F\u4F4D\u7F6E\u5C31\u662F start + chunkSize \u4E86\u3002\u6700\u540E\u6211\u4EEC\u4F7F\u7528 blobSlice \u8FDB\u884C\u5207\u5272\uFF0C\u5C31\u5207\u5272\u5230\u7B2C\u4E8C\u4E2A\u5206\u7247\u7684\u5927\u5C0F\u4E86\uFF0CblobSlice.call(file, start, end)\uFF0C\u8FD9\u6837\u7684\u65B9\u6CD5\u3002\u7136\u540E\u628A\u5207\u5272\u7684\u6587\u4EF6\u8BFB\u53D6\u5230\u5185\u5B58\u4E2D\u53BB\uFF0C\u4F7F\u7528 reader.readAsArrayBuffer() \u5C06buffer\u8BFB\u53D6\u5230\u5185\u5B58\u4E2D\u53BB\u4E86\u3002\u7EE7\u7EED\u4F1A\u8C03\u7528 onload \u8BE5\u65B9\u6CD5\uFF0C\u76F4\u5230 \u8FDB\u5165else \u8BED\u53E5\u5185\uFF0C\u90A3\u4E48 const md5 = spark.end(); \u5C31\u751F\u6210\u4E86\u4E00\u4E2Amd5\u6587\u4EF6\u4E86\u3002</p><h2 id="\u4F7F\u7528koa-js\u5B9E\u73B0\u5927\u6587\u4EF6\u5206\u7247\u4E0A\u4F20\u5B9E\u8DF5" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528koa-js\u5B9E\u73B0\u5927\u6587\u4EF6\u5206\u7247\u4E0A\u4F20\u5B9E\u8DF5" aria-hidden="true">#</a> \u4F7F\u7528koa+js\u5B9E\u73B0\u5927\u6587\u4EF6\u5206\u7247\u4E0A\u4F20\u5B9E\u8DF5</h2><p>\u9879\u76EE\u7684\u67B6\u6784\u5982\u4E0B\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>|---- \u9879\u76EE\u6839\u76EE\u5F55
| |--- app.js           # node \u5165\u53E3\u6587\u4EF6
| |--- package.json
| |--- node_modules     # \u6240\u6709\u4F9D\u8D56\u7684\u5305
| |--- static           # \u5B58\u653E\u9759\u6001\u8D44\u6E90\u6587\u4EF6\u76EE\u5F55
| | |--- js
| | | |--- index.js     # \u6587\u4EF6\u4E0A\u4F20\u7684js
| | |--- index.html
| |--- uploads          # \u4FDD\u5B58\u4E0A\u4F20\u6587\u4EF6\u540E\u7684\u76EE\u5F55
| |--- utils            # \u4FDD\u5B58\u516C\u7528\u7684js\u51FD\u6570
| | |--- dir.js
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>static/index.html \u6587\u4EF6\u4EE3\u7801\u5982\u4E0B\uFF1A</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>en<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>viewport<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>width=device-width, initial-scale=1.0<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>X-UA-Compatible<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ie=edge<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>\u6587\u4EF6\u4E0A\u4F20<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://cdn.bootcss.com/axios/0.18.0/axios.min.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://code.jquery.com/jquery-3.4.1.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://cdnjs.cloudflare.com/ajax/libs/spark-md5/3.0.0/spark-md5.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>\u5927\u6587\u4EF6\u4E0A\u4F20\u6D4B\u8BD5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span>\u81EA\u5B9A\u4E49\u4E0A\u4F20\u6587\u4EF6<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>file<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>file<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>avatar<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>submitBtn<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>button<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\u63D0\u4EA4<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text/javascript<span class="token punctuation">&quot;</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>./js/index.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>static/js/index.js \u4EE3\u7801\u5982\u4E0B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ready</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> chunkSize <span class="token operator">=</span> <span class="token number">2</span> <span class="token operator">*</span> <span class="token number">1024</span> <span class="token operator">*</span> <span class="token number">1024</span><span class="token punctuation">;</span> <span class="token comment">// \u6BCF\u4E2Achunk\u7684\u5927\u5C0F\uFF0C\u8BBE\u7F6E\u4E3A2\u5146</span>
  <span class="token comment">// \u4F7F\u7528Blob.slice\u65B9\u6CD5\u6765\u5BF9\u6587\u4EF6\u8FDB\u884C\u5206\u5272\u3002</span>
  <span class="token comment">// \u540C\u65F6\u8BE5\u65B9\u6CD5\u5728\u4E0D\u540C\u7684\u6D4F\u89C8\u5668\u4F7F\u7528\u65B9\u5F0F\u4E0D\u540C\u3002</span>
  <span class="token keyword">const</span> blobSlice <span class="token operator">=</span> <span class="token class-name">File</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>slice <span class="token operator">||</span> <span class="token class-name">File</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>mozSlice <span class="token operator">||</span> <span class="token class-name">File</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>webkitSlice<span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token function-variable function">hashFile</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">file</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> chunks <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>size <span class="token operator">/</span> chunkSize<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">let</span> currentChunk <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
      <span class="token keyword">const</span> spark <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SparkMD5<span class="token punctuation">.</span>ArrayBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">const</span> fileReader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">function</span> <span class="token function">loadNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> start <span class="token operator">=</span> currentChunk <span class="token operator">*</span> chunkSize<span class="token punctuation">;</span>
        <span class="token keyword">const</span> end <span class="token operator">=</span> start <span class="token operator">+</span> chunkSize <span class="token operator">&gt;=</span> file<span class="token punctuation">.</span>size <span class="token operator">?</span> file<span class="token punctuation">.</span>size <span class="token operator">:</span> start <span class="token operator">+</span> chunkSize<span class="token punctuation">;</span>
        fileReader<span class="token punctuation">.</span><span class="token function">readAsArrayBuffer</span><span class="token punctuation">(</span><span class="token function">blobSlice</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>file<span class="token punctuation">,</span> start<span class="token punctuation">,</span> end<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      fileReader<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token parameter">e</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        spark<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Append array buffer</span>
        currentChunk <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>currentChunk <span class="token operator">&lt;</span> chunks<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token function">loadNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;finished loading&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">const</span> result <span class="token operator">=</span> spark<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token comment">// \u5982\u679C\u5355\u7EAF\u7684\u4F7F\u7528result \u4F5C\u4E3Ahash\u503C\u7684\u65F6\u5019, \u5982\u679C\u6587\u4EF6\u5185\u5BB9\u76F8\u540C\uFF0C\u800C\u540D\u79F0\u4E0D\u540C\u7684\u65F6\u5019</span>
          <span class="token comment">// \u60F3\u4FDD\u7559\u4E24\u4E2A\u6587\u4EF6\u65E0\u6CD5\u4FDD\u7559\u3002\u6240\u4EE5\u628A\u6587\u4EF6\u540D\u79F0\u52A0\u4E0A\u3002</span>
          <span class="token keyword">const</span> sparkMd5 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SparkMD5</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          sparkMd5<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
          sparkMd5<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">const</span> hexHash <span class="token operator">=</span> sparkMd5<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token function">resolve</span><span class="token punctuation">(</span>hexHash<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">;</span>
      fileReader<span class="token punctuation">.</span><span class="token function-variable function">onerror</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&#39;\u6587\u4EF6\u8BFB\u53D6\u5931\u8D25\uFF01&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">;</span>
      <span class="token function">loadNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">err</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">const</span> submitBtn <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#submitBtn&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  submitBtn<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> fileDom <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#file&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token comment">// \u83B7\u53D6\u5230\u7684files\u4E3A\u4E00\u4E2AFile\u5BF9\u8C61\u6570\u7EC4\uFF0C\u5982\u679C\u5141\u8BB8\u591A\u9009\u7684\u65F6\u5019\uFF0C\u6587\u4EF6\u4E3A\u591A\u4E2A</span>
    <span class="token keyword">const</span> files <span class="token operator">=</span> fileDom<span class="token punctuation">.</span>files<span class="token punctuation">;</span>
    <span class="token keyword">const</span> file <span class="token operator">=</span> files<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>file<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&#39;\u6CA1\u6709\u83B7\u53D6\u6587\u4EF6&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">const</span> blockCount <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>size <span class="token operator">/</span> chunkSize<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u5206\u7247\u603B\u6570</span>
    <span class="token keyword">const</span> axiosPromiseArray <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// axiosPromise\u6570\u7EC4</span>
    <span class="token keyword">const</span> hash <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">hashFile</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u6587\u4EF6 hash</span>
    <span class="token comment">// \u83B7\u53D6\u6587\u4EF6hash\u4E4B\u540E\uFF0C\u5982\u679C\u9700\u8981\u505A\u65AD\u70B9\u7EED\u4F20\uFF0C\u53EF\u4EE5\u6839\u636Ehash\u503C\u53BB\u540E\u53F0\u8FDB\u884C\u6821\u9A8C\u3002</span>
    <span class="token comment">// \u770B\u770B\u662F\u5426\u5DF2\u7ECF\u4E0A\u4F20\u8FC7\u8BE5\u6587\u4EF6\uFF0C\u5E76\u4E14\u662F\u5426\u5DF2\u7ECF\u4F20\u9001\u5B8C\u6210\u4EE5\u53CA\u5DF2\u7ECF\u4E0A\u4F20\u7684\u5207\u7247\u3002</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>hash<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> blockCount<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> start <span class="token operator">=</span> i <span class="token operator">*</span> chunkSize<span class="token punctuation">;</span>
      <span class="token keyword">const</span> end <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>size<span class="token punctuation">,</span> start <span class="token operator">+</span> chunkSize<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// \u6784\u5EFA\u8868\u5355</span>
      <span class="token keyword">const</span> form <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FormData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      form<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&#39;file&#39;</span><span class="token punctuation">,</span> <span class="token function">blobSlice</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>file<span class="token punctuation">,</span> start<span class="token punctuation">,</span> end<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      form<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span> file<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
      form<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&#39;total&#39;</span><span class="token punctuation">,</span> blockCount<span class="token punctuation">)</span><span class="token punctuation">;</span>
      form<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&#39;index&#39;</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
      form<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&#39;size&#39;</span><span class="token punctuation">,</span> file<span class="token punctuation">.</span>size<span class="token punctuation">)</span><span class="token punctuation">;</span>
      form<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&#39;hash&#39;</span><span class="token punctuation">,</span> hash<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// ajax\u63D0\u4EA4 \u5206\u7247\uFF0C\u6B64\u65F6 content-type \u4E3A multipart/form-data</span>
      <span class="token keyword">const</span> axiosOptions <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token function-variable function">onUploadProgress</span><span class="token operator">:</span> <span class="token parameter">e</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token comment">// \u5904\u7406\u4E0A\u4F20\u7684\u8FDB\u5EA6</span>
          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>blockCount<span class="token punctuation">,</span> i<span class="token punctuation">,</span> e<span class="token punctuation">,</span> file<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">;</span>
      <span class="token comment">// \u52A0\u5165\u5230 Promise \u6570\u7EC4\u4E2D</span>
      axiosPromiseArray<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>axios<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;/file/upload&#39;</span><span class="token punctuation">,</span> form<span class="token punctuation">,</span> axiosOptions<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u6240\u6709\u5206\u7247\u4E0A\u4F20\u540E\uFF0C\u8BF7\u6C42\u5408\u5E76\u5206\u7247\u6587\u4EF6</span>
    <span class="token keyword">await</span> axios<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span>axiosPromiseArray<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5408\u5E76chunks</span>
      <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">size</span><span class="token operator">:</span> file<span class="token punctuation">.</span>size<span class="token punctuation">,</span>
        <span class="token literal-property property">name</span><span class="token operator">:</span> file<span class="token punctuation">.</span>name<span class="token punctuation">,</span>
        <span class="token literal-property property">total</span><span class="token operator">:</span> blockCount<span class="token punctuation">,</span>
        hash
      <span class="token punctuation">}</span><span class="token punctuation">;</span>
      axios<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;/file/merge_chunks&#39;</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u4E0A\u4F20\u6210\u529F&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">,</span> file<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&#39;\u4E0A\u4F20\u6210\u529F&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">err</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u4E0A\u4EE3\u7801\uFF0C\u548C\u6211\u4EEC\u4E0A\u9762\u751F\u6210md5\u4EE3\u7801\u5F88\u7C7B\u4F3C\uFF0C\u4ECE\u6DFB\u52A0\u5230formData\u4E0B\u9762\u7684\u4EE3\u7801\u4E0D\u4E00\u6837\u4E86\uFF0C\u6211\u4EEC\u53EF\u4EE5\u6765\u7B80\u5355\u7684\u5206\u6790\u4E0B\uFF0C\u770B\u4E0B\u4EE3\u7801\u7684\u5177\u4F53\u542B\u4E49\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> blockCount <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>size <span class="token operator">/</span> chunkSize<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u5206\u7247\u603B\u6570</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u4E0A\u9762\u7684\u4EE3\u7801\u7684\u542B\u4E49\u662F\u83B7\u53D6\u5206\u7247\u7684\u603B\u6570\uFF0C\u6211\u4EEC\u4E4B\u524D\u8BB2\u89E3\u8FC7\uFF0C\u7136\u540E\u4F7F\u7528 for\u5FAA\u73AF\u904D\u5386\u5206\u7247\uFF0C\u4F9D\u6B21\u628A\u5BF9\u5E94\u7684\u5206\u7247\u6DFB\u52A0\u5230 formData\u6570\u636E\u91CC\u9762\u53BB\uFF0C\u5982\u4E0B\u6240\u793A\u4EE3\u7801\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> axiosPromiseArray <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> blockCount <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>size <span class="token operator">/</span> chunkSize<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u5206\u7247\u603B\u6570</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> blockCount<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> start <span class="token operator">=</span> i <span class="token operator">*</span> chunkSize<span class="token punctuation">;</span>
  <span class="token keyword">const</span> end <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>size<span class="token punctuation">,</span> start <span class="token operator">+</span> chunkSize<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// \u6784\u5EFA\u8868\u5355</span>
  <span class="token keyword">const</span> form <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FormData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  form<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&#39;file&#39;</span><span class="token punctuation">,</span> <span class="token function">blobSlice</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>file<span class="token punctuation">,</span> start<span class="token punctuation">,</span> end<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  form<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span> file<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
  form<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&#39;total&#39;</span><span class="token punctuation">,</span> blockCount<span class="token punctuation">)</span><span class="token punctuation">;</span>
  form<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&#39;index&#39;</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
  form<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&#39;size&#39;</span><span class="token punctuation">,</span> file<span class="token punctuation">.</span>size<span class="token punctuation">)</span><span class="token punctuation">;</span>
  form<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&#39;hash&#39;</span><span class="token punctuation">,</span> hash<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// ajax\u63D0\u4EA4 \u5206\u7247\uFF0C\u6B64\u65F6 content-type \u4E3A multipart/form-data</span>
  <span class="token keyword">const</span> axiosOptions <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token function-variable function">onUploadProgress</span><span class="token operator">:</span> <span class="token parameter">e</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5904\u7406\u4E0A\u4F20\u7684\u8FDB\u5EA6</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>blockCount<span class="token punctuation">,</span> i<span class="token punctuation">,</span> e<span class="token punctuation">,</span> file<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token comment">// \u52A0\u5165\u5230 Promise \u6570\u7EC4\u4E2D</span>
  axiosPromiseArray<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>axios<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;/file/upload&#39;</span><span class="token punctuation">,</span> form<span class="token punctuation">,</span> axiosOptions<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u6240\u6709\u5206\u7247\u4E0A\u4F20\u540E\uFF0C\u8BF7\u6C42\u5408\u5E76\u5206\u7247\u6587\u4EF6</span>
<span class="token keyword">await</span> axios<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span>axiosPromiseArray<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5408\u5E76chunks</span>
  <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">size</span><span class="token operator">:</span> file<span class="token punctuation">.</span>size<span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> file<span class="token punctuation">.</span>name<span class="token punctuation">,</span>
    <span class="token literal-property property">total</span><span class="token operator">:</span> blockCount<span class="token punctuation">,</span>
    hash
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  axios<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;/file/merge_chunks&#39;</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u4E0A\u4F20\u6210\u529F&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">,</span> file<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&#39;\u4E0A\u4F20\u6210\u529F&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">err</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u4E0A\u4EE3\u7801\uFF0C\u5FAA\u73AF\u5206\u7247\u7684\u603B\u6570\uFF0C\u7136\u540E\u4F9D\u6B21\u5B9E\u5217\u5316formData\u6570\u636E\uFF0C\u4F9D\u6B21\u653E\u5165\u5230formData\u5B9E\u5217\u4E2D\uFF0C\u7136\u540E\u5206\u522B\u4F7F\u7528 &#39;/file/upload&#39; \u8BF7\u6C42\u6570\u636E\uFF0C\u6700\u540E\u628A\u6240\u6709\u8BF7\u6C42\u6210\u529F\u7684\u6570\u636E\u653E\u5165\u5230 axiosPromiseArray \u6570\u7EC4\u4E2D\uFF0C\u5F53\u6240\u6709\u7684\u5206\u7247\u4E0A\u4F20\u5B8C\u6210\u540E\uFF0C\u6211\u4EEC\u4F1A\u4F7F\u7528 await axios.all(axiosPromiseArray).then(() =&gt; {}) \u65B9\u6CD5\uFF0C\u6700\u540E\u6211\u4EEC\u4F1A\u4F7F\u7528 &#39;/file/merge_chunks&#39; \u65B9\u6CD5\u6765\u5408\u5E76\u6587\u4EF6\u3002</p><p>\u4E0B\u9762\u6211\u4EEC\u6765\u770B\u770B app.js \u670D\u52A1\u5668\u7AEF\u7684\u4EE3\u7801\uFF0C\u5982\u4E0B\u6240\u793A\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> Koa <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;koa&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Koa</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> Router <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;koa-router&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> multer <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;koa-multer&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> serve <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;koa-static&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs-extra&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> koaBody <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;koa-body&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> mkdirsSync <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./utils/dir&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> uploadPath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;uploads&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> uploadTempPath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>uploadPath<span class="token punctuation">,</span> <span class="token string">&#39;temp&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> upload <span class="token operator">=</span> <span class="token function">multer</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">dest</span><span class="token operator">:</span> uploadTempPath <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Router</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token function">koaBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token doc-comment comment">/**
 * single(fieldname)
 * Accept a single file with the name fieldname. The single file will be stored in req.file.
 */</span>
router<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;/file/upload&#39;</span><span class="token punctuation">,</span> upload<span class="token punctuation">.</span><span class="token function">single</span><span class="token punctuation">(</span><span class="token string">&#39;file&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;file upload...&#39;</span><span class="token punctuation">)</span>
  <span class="token comment">// \u6839\u636E\u6587\u4EF6hash\u521B\u5EFA\u6587\u4EF6\u5939\uFF0C\u628A\u9ED8\u8BA4\u4E0A\u4F20\u7684\u6587\u4EF6\u79FB\u52A8\u5F53\u524Dhash\u6587\u4EF6\u5939\u4E0B\u3002\u65B9\u4FBF\u540E\u7EED\u6587\u4EF6\u5408\u5E76\u3002</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span>
    name<span class="token punctuation">,</span>
    total<span class="token punctuation">,</span>
    index<span class="token punctuation">,</span>
    size<span class="token punctuation">,</span>
    hash
  <span class="token punctuation">}</span> <span class="token operator">=</span> ctx<span class="token punctuation">.</span>req<span class="token punctuation">.</span>body<span class="token punctuation">;</span>

  <span class="token keyword">const</span> chunksPath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>uploadPath<span class="token punctuation">,</span> hash<span class="token punctuation">,</span> <span class="token string">&#39;/&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>fs<span class="token punctuation">.</span><span class="token function">existsSync</span><span class="token punctuation">(</span>chunksPath<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token function">mkdirsSync</span><span class="token punctuation">(</span>chunksPath<span class="token punctuation">)</span><span class="token punctuation">;</span>
  fs<span class="token punctuation">.</span><span class="token function">renameSync</span><span class="token punctuation">(</span>ctx<span class="token punctuation">.</span>req<span class="token punctuation">.</span>file<span class="token punctuation">.</span>path<span class="token punctuation">,</span> chunksPath <span class="token operator">+</span> hash <span class="token operator">+</span> <span class="token string">&#39;-&#39;</span> <span class="token operator">+</span> index<span class="token punctuation">)</span><span class="token punctuation">;</span>
  ctx<span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token number">200</span><span class="token punctuation">;</span>
  ctx<span class="token punctuation">.</span>res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token string">&#39;Success&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

router<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;/file/merge_chunks&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span>
    size<span class="token punctuation">,</span>
    name<span class="token punctuation">,</span>
    total<span class="token punctuation">,</span>
    hash
  <span class="token punctuation">}</span> <span class="token operator">=</span> ctx<span class="token punctuation">.</span>request<span class="token punctuation">.</span>body<span class="token punctuation">;</span>
  <span class="token comment">// \u6839\u636Ehash\u503C\uFF0C\u83B7\u53D6\u5206\u7247\u6587\u4EF6\u3002</span>
  <span class="token comment">// \u521B\u5EFA\u5B58\u50A8\u6587\u4EF6</span>
  <span class="token comment">// \u5408\u5E76</span>
  <span class="token keyword">const</span> chunksPath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>uploadPath<span class="token punctuation">,</span> hash<span class="token punctuation">,</span> <span class="token string">&#39;/&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> filePath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>uploadPath<span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// \u8BFB\u53D6\u6240\u6709\u7684chunks \u6587\u4EF6\u540D\u5B58\u653E\u5728\u6570\u7EC4\u4E2D</span>
  <span class="token keyword">const</span> chunks <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">readdirSync</span><span class="token punctuation">(</span>chunksPath<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// \u521B\u5EFA\u5B58\u50A8\u6587\u4EF6</span>
  fs<span class="token punctuation">.</span><span class="token function">writeFileSync</span><span class="token punctuation">(</span>filePath<span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>chunks<span class="token punctuation">.</span>length <span class="token operator">!==</span> total <span class="token operator">||</span> chunks<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    ctx<span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token number">200</span><span class="token punctuation">;</span>
    ctx<span class="token punctuation">.</span>res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token string">&#39;\u5207\u7247\u6587\u4EF6\u6570\u91CF\u4E0D\u7B26\u5408&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> total<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u8FFD\u52A0\u5199\u5165\u5230\u6587\u4EF6\u4E2D</span>
    fs<span class="token punctuation">.</span><span class="token function">appendFileSync</span><span class="token punctuation">(</span>filePath<span class="token punctuation">,</span> fs<span class="token punctuation">.</span><span class="token function">readFileSync</span><span class="token punctuation">(</span>chunksPath <span class="token operator">+</span> hash <span class="token operator">+</span> <span class="token string">&#39;-&#39;</span> <span class="token operator">+</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u5220\u9664\u672C\u6B21\u4F7F\u7528\u7684chunk</span>
    fs<span class="token punctuation">.</span><span class="token function">unlinkSync</span><span class="token punctuation">(</span>chunksPath <span class="token operator">+</span> hash <span class="token operator">+</span> <span class="token string">&#39;-&#39;</span> <span class="token operator">+</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  fs<span class="token punctuation">.</span><span class="token function">rmdirSync</span><span class="token punctuation">(</span>chunksPath<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// \u6587\u4EF6\u5408\u5E76\u6210\u529F\uFF0C\u53EF\u4EE5\u628A\u6587\u4EF6\u4FE1\u606F\u8FDB\u884C\u5165\u5E93\u3002</span>
  ctx<span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token number">200</span><span class="token punctuation">;</span>
  ctx<span class="token punctuation">.</span>res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token string">&#39;\u5408\u5E76\u6210\u529F&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>router<span class="token punctuation">.</span><span class="token function">routes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>router<span class="token punctuation">.</span><span class="token function">allowedMethods</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token function">serve</span><span class="token punctuation">(</span>__dirname <span class="token operator">+</span> <span class="token string">&#39;/static&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
app<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">9000</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u670D\u52A19000\u7AEF\u53E3\u5DF2\u7ECF\u542F\u52A8\u4E86&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u4E0A\u4EE3\u7801\uFF1A\u5206\u522B\u5F15\u5165 koa\uFF0C koa-router, koa-multer, koa-static, path, fs-extra, koa-body \u4F9D\u8D56\u5305\u3002</p><p>koa-multer \u7684\u4F5C\u7528\u662F\u4E3A\u4E86\u5904\u7406\u4E0A\u4F20\u6587\u4EF6\u7684\u63D2\u4EF6\u3002</p><p>utils/dir.js \u4EE3\u7801\u5982\u4E0B(\u8BE5\u4EE3\u7801\u7684\u4F5C\u7528\u662F\u5224\u65AD\u662F\u5426\u6709\u8FD9\u4E2A\u76EE\u5F55\uFF0C\u6709\u8FD9\u4E2A\u76EE\u5F55\u7684\u8BDD\uFF0C\u76F4\u63A5\u8FD4\u56DEtrue\uFF0C\u5426\u5219\u7684\u8BDD\uFF0C\u521B\u5EFA\u8BE5\u76EE\u5F55)\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs-extra&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">mkdirsSync</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">dirname</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>fs<span class="token punctuation">.</span><span class="token function">existsSync</span><span class="token punctuation">(</span>dirname<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">mkdirsSync</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">dirname</span><span class="token punctuation">(</span>dirname<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      fs<span class="token punctuation">.</span><span class="token function">mkdirSync</span><span class="token punctuation">(</span>dirname<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  mkdirsSync
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>/file/upload \u8BF7\u6C42\u4EE3\u7801\u5982\u4E0B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>router<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;/file/upload&#39;</span><span class="token punctuation">,</span> upload<span class="token punctuation">.</span><span class="token function">single</span><span class="token punctuation">(</span><span class="token string">&#39;file&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;file upload...&#39;</span><span class="token punctuation">)</span>
  <span class="token comment">// \u6839\u636E\u6587\u4EF6hash\u521B\u5EFA\u6587\u4EF6\u5939\uFF0C\u628A\u9ED8\u8BA4\u4E0A\u4F20\u7684\u6587\u4EF6\u79FB\u52A8\u5F53\u524Dhash\u6587\u4EF6\u5939\u4E0B\u3002\u65B9\u4FBF\u540E\u7EED\u6587\u4EF6\u5408\u5E76\u3002</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span>
    name<span class="token punctuation">,</span>
    total<span class="token punctuation">,</span>
    index<span class="token punctuation">,</span>
    size<span class="token punctuation">,</span>
    hash
  <span class="token punctuation">}</span> <span class="token operator">=</span> ctx<span class="token punctuation">.</span>req<span class="token punctuation">.</span>body<span class="token punctuation">;</span>

  <span class="token keyword">const</span> chunksPath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>uploadPath<span class="token punctuation">,</span> hash<span class="token punctuation">,</span> <span class="token string">&#39;/&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>fs<span class="token punctuation">.</span><span class="token function">existsSync</span><span class="token punctuation">(</span>chunksPath<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token function">mkdirsSync</span><span class="token punctuation">(</span>chunksPath<span class="token punctuation">)</span><span class="token punctuation">;</span>
  fs<span class="token punctuation">.</span><span class="token function">renameSync</span><span class="token punctuation">(</span>ctx<span class="token punctuation">.</span>req<span class="token punctuation">.</span>file<span class="token punctuation">.</span>path<span class="token punctuation">,</span> chunksPath <span class="token operator">+</span> hash <span class="token operator">+</span> <span class="token string">&#39;-&#39;</span> <span class="token operator">+</span> index<span class="token punctuation">)</span><span class="token punctuation">;</span>
  ctx<span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token number">200</span><span class="token punctuation">;</span>
  ctx<span class="token punctuation">.</span>res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token string">&#39;Success&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,23),d={href:"https://www.npmjs.com/package/koa-multer",target:"_blank",rel:"noopener noreferrer"},v=a(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> uploadPath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;uploads&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> chunksPath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>uploadPath<span class="token punctuation">,</span> hash<span class="token punctuation">,</span> <span class="token string">&#39;/&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>fs<span class="token punctuation">.</span><span class="token function">existsSync</span><span class="token punctuation">(</span>chunksPath<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token function">mkdirsSync</span><span class="token punctuation">(</span>chunksPath<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>&#39;/file/merge_chunks&#39;</p><p>\u6700\u540E\u6240\u6709\u7684\u5206\u7247\u8BF7\u6C42\u4E0A\u4F20\u6210\u529F\u540E\uFF0C\u6211\u4EEC\u4F1A\u8C03\u7528 &#39;/file/merge_chunks&#39; \u8FD9\u4E2A\u8BF7\u6C42\u6765\u5408\u5E76\u6240\u6709\u7684\u6587\u4EF6\uFF0C\u6839\u636E\u6211\u4EEC\u7684hash\u503C\uFF0C\u6765\u83B7\u53D6\u6587\u4EF6\u5206\u7247\u3002</p><p>\u5982\u4E0B\u4EE3\u7801\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u6839\u636Ehash\u503C\uFF0C\u83B7\u53D6\u5206\u7247\u6587\u4EF6\u3002</span>
<span class="token comment">// \u521B\u5EFA\u5B58\u50A8\u6587\u4EF6</span>
<span class="token comment">// \u5408\u5E76</span>
<span class="token keyword">const</span> chunksPath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>uploadPath<span class="token punctuation">,</span> hash<span class="token punctuation">,</span> <span class="token string">&#39;/&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> filePath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>uploadPath<span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u8BFB\u53D6\u6240\u6709\u7684chunks \u6587\u4EF6\u540D\u5B58\u653E\u5728\u6570\u7EC4\u4E2D</span>
<span class="token keyword">const</span> chunks <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">readdirSync</span><span class="token punctuation">(</span>chunksPath<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u521B\u5EFA\u5B58\u50A8\u6587\u4EF6</span>
fs<span class="token punctuation">.</span><span class="token function">writeFileSync</span><span class="token punctuation">(</span>filePath<span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span><span class="token punctuation">(</span>chunks<span class="token punctuation">.</span>length <span class="token operator">!==</span> total <span class="token operator">||</span> chunks<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  ctx<span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token number">200</span><span class="token punctuation">;</span>
  ctx<span class="token punctuation">.</span>res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token string">&#39;\u5207\u7247\u6587\u4EF6\u6570\u91CF\u4E0D\u7B26\u5408&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> total<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u8FFD\u52A0\u5199\u5165\u5230\u6587\u4EF6\u4E2D</span>
  fs<span class="token punctuation">.</span><span class="token function">appendFileSync</span><span class="token punctuation">(</span>filePath<span class="token punctuation">,</span> fs<span class="token punctuation">.</span><span class="token function">readFileSync</span><span class="token punctuation">(</span>chunksPath <span class="token operator">+</span> hash <span class="token operator">+</span> <span class="token string">&#39;-&#39;</span> <span class="token operator">+</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// \u5220\u9664\u672C\u6B21\u4F7F\u7528\u7684chunk</span>
  fs<span class="token punctuation">.</span><span class="token function">unlinkSync</span><span class="token punctuation">(</span>chunksPath <span class="token operator">+</span> hash <span class="token operator">+</span> <span class="token string">&#39;-&#39;</span> <span class="token operator">+</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
fs<span class="token punctuation">.</span><span class="token function">rmdirSync</span><span class="token punctuation">(</span>chunksPath<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u6587\u4EF6\u5408\u5E76\u6210\u529F\uFF0C\u53EF\u4EE5\u628A\u6587\u4EF6\u4FE1\u606F\u8FDB\u884C\u5165\u5E93\u3002</span>
ctx<span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token number">200</span><span class="token punctuation">;</span>
ctx<span class="token punctuation">.</span>res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token string">&#39;\u5408\u5E76\u6210\u529F&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u4E0A\u4EE3\u7801\uFF0C\u4F1A\u5FAA\u73AF\u5206\u7247\u7684\u603B\u6570\uFF0C\u7136\u540E\u628A\u6240\u6709\u7684\u5206\u7247\u5199\u5165\u5230\u6211\u4EEC\u7684filePath\u76EE\u5F55\u4E2D\uFF0C\u5982\u8FD9\u53E5\u4EE3\u7801\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>fs<span class="token punctuation">.</span><span class="token function">appendFileSync</span><span class="token punctuation">(</span>filePath<span class="token punctuation">,</span> fs<span class="token punctuation">.</span><span class="token function">readFileSync</span><span class="token punctuation">(</span>chunksPath <span class="token operator">+</span> hash <span class="token operator">+</span> <span class="token string">&#39;-&#39;</span> <span class="token operator">+</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u5176\u4E2D filePath \u7684\u83B7\u53D6 \u662F\u8FD9\u53E5\u4EE3\u7801\uFF1Aconst filePath = path.join(uploadPath, name); \u4E5F\u5C31\u662F\u8BF4\u5728\u6211\u4EEC\u9879\u76EE\u7684\u6839\u76EE\u5F55\u4E0B\u7684uploads\u6587\u4EF6\u5939\u4E0B\uFF0C\u8FD9\u4E48\u505A\u7684\u539F\u56E0\u662F\u4E3A\u4E86\u9632\u6B62\u7F51\u7EDC\u7A81\u7136\u65AD\u5F00\u6216\u670D\u52A1\u5668\u7A81\u7136\u5F02\u5E38\u7684\u60C5\u51B5\u4E0B\uFF0C\u6587\u4EF6\u4E0A\u4F20\u5230\u4E00\u534A\u7684\u65F6\u5019\uFF0C\u6211\u4EEC\u672C\u5730\u4F1A\u4FDD\u5B58\u4E00\u90E8\u5206\u5DF2\u7ECF\u4E0A\u4F20\u7684\u6587\u4EF6\uFF0C\u5982\u679C\u6211\u4EEC\u7EE7\u7EED\u4E0A\u4F20\u7684\u65F6\u5019\uFF0C\u6211\u4EEC\u4F1A\u8DF3\u8FC7\u54EA\u4E9B\u5DF2\u7ECF\u4E0A\u4F20\u540E\u7684\u6587\u4EF6\uFF0C\u7EE7\u7EED\u4E0A\u4F20\u672A\u4E0A\u4F20\u7684\u6587\u4EF6\u3002\u8FD9\u662F\u4E3A\u4E86\u65AD\u70B9\u7EED\u4F20\u505A\u597D\u51C6\u5907\u7684\uFF0C\u4E0B\u6B21\u6211\u4F1A\u5206\u6790\u4E0B\u5982\u4F55\u5B9E\u73B0\u65AD\u70B9\u7EED\u4F20\u7684\u539F\u7406\u4E86\u3002\u5982\u679C\u6211\u4EEC\u628A\u4E0A\u9762\u8FD9\u4E24\u53E5\u4EE3\u7801\u6CE8\u91CA\u6389\uFF0C\u5982\u4E0B\u6240\u793A\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u5220\u9664\u672C\u6B21\u4F7F\u7528\u7684chunk</span>
fs<span class="token punctuation">.</span><span class="token function">unlinkSync</span><span class="token punctuation">(</span>chunksPath <span class="token operator">+</span> hash <span class="token operator">+</span> <span class="token string">&#39;-&#39;</span> <span class="token operator">+</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
fs<span class="token punctuation">.</span><span class="token function">rmdirSync</span><span class="token punctuation">(</span>chunksPath<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><details class="custom-container details"><summary>uniapp \u5FAE\u4FE1\u5C0F\u7A0B\u5E8F \u5206\u7247 \u65AD\u70B9\u7EED\u4F20 \u5927\u6587\u4EF6\u4E0A\u4F20</summary><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> SparkMD5 <span class="token keyword">from</span> <span class="token string">&#39;spark-md5&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">postConsole</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> header <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token operator">...</span>options<span class="token punctuation">.</span>header<span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        uni<span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            <span class="token literal-property property">url</span><span class="token operator">:</span> options<span class="token punctuation">.</span>url <span class="token operator">+</span> <span class="token string">&#39;/console&#39;</span><span class="token punctuation">,</span>
            <span class="token literal-property property">method</span><span class="token operator">:</span> options<span class="token punctuation">.</span>method <span class="token operator">||</span> <span class="token string">&#39;POST&#39;</span><span class="token punctuation">,</span>
            <span class="token literal-property property">data</span><span class="token operator">:</span> options<span class="token punctuation">.</span>data <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token literal-property property">dataType</span><span class="token operator">:</span> <span class="token string">&#39;json&#39;</span><span class="token punctuation">,</span>
            header<span class="token punctuation">,</span>
            <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>code <span class="token operator">===</span> <span class="token string">&#39;0&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token function">resolve</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>data<span class="token punctuation">)</span>
                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                        <span class="token function">reject</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>msg<span class="token punctuation">)</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token function-variable function">fail</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                <span class="token function">reject</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">class</span> <span class="token class-name">BigUpload</span> <span class="token punctuation">{</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">Setting</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>Setting <span class="token operator">=</span> Setting
    <span class="token punctuation">}</span>

    <span class="token function">startUpload</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>chunkSize <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>Setting<span class="token punctuation">.</span>size
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>Setting<span class="token punctuation">.</span>filePath<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>pt_md5 <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>chunks <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>Setting<span class="token punctuation">.</span>byteLength <span class="token operator">/</span> <span class="token keyword">this</span><span class="token punctuation">.</span>chunkSize<span class="token punctuation">)</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>currentChunk <span class="token operator">=</span> <span class="token number">0</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>gowith <span class="token operator">=</span> <span class="token boolean">true</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">fileSlice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>Setting<span class="token punctuation">.</span>byteLength<span class="token punctuation">,</span> <span class="token parameter">file</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">handshake</span><span class="token punctuation">(</span><span class="token parameter">flag</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>flag<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">loadNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    <span class="token keyword">this</span><span class="token punctuation">.</span>Setting<span class="token punctuation">.</span><span class="token function">callback</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span> file<span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token function">handshake</span><span class="token punctuation">(</span><span class="token parameter">cbk<span class="token punctuation">,</span> e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> formData <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
        <span class="token keyword">let</span> md5 <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getDataMd5</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>pt_md5 <span class="token operator">=</span> md5
        formData<span class="token punctuation">.</span>pt_md5 <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>pt_md5
        formData<span class="token punctuation">.</span>chunks <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>chunks
        formData<span class="token punctuation">.</span>size <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>Setting<span class="token punctuation">.</span>byteLength
        formData<span class="token punctuation">.</span>type <span class="token operator">=</span> <span class="token string">&#39;handshake&#39;</span>
        formData<span class="token punctuation">.</span>md5 <span class="token operator">=</span> md5
        formData<span class="token punctuation">.</span>fileName <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>Setting<span class="token punctuation">.</span>fileName
        formData<span class="token punctuation">.</span>contentType <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>Setting<span class="token punctuation">.</span>type
        <span class="token function">postConsole</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>Setting<span class="token punctuation">.</span>url<span class="token punctuation">,</span>
            <span class="token literal-property property">data</span><span class="token operator">:</span> formData
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>res <span class="token operator">===</span> <span class="token string">&#39;success&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">cbk</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> res <span class="token operator">!==</span> <span class="token string">&#39;number&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">this</span><span class="token punctuation">.</span>Setting<span class="token punctuation">.</span><span class="token function">callback</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token keyword">this</span><span class="token punctuation">.</span>currentChunk <span class="token operator">=</span> res
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>currentChunk <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>chunks<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">loadNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    <span class="token keyword">this</span><span class="token punctuation">.</span>currentChunk<span class="token operator">--</span>
                    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">loadNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">err</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
            <span class="token function">cbk</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token function">loadNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> p <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>currentChunk <span class="token operator">*</span> <span class="token number">100</span> <span class="token operator">/</span> <span class="token keyword">this</span><span class="token punctuation">.</span>chunks
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">drowSpeed</span><span class="token punctuation">(</span><span class="token function">parseInt</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> start <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>currentChunk <span class="token operator">*</span> <span class="token keyword">this</span><span class="token punctuation">.</span>chunkSize
        <span class="token keyword">let</span> length <span class="token operator">=</span> start <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>chunkSize <span class="token operator">&gt;=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>Setting<span class="token punctuation">.</span>byteLength <span class="token operator">?</span> <span class="token keyword">this</span><span class="token punctuation">.</span>Setting<span class="token punctuation">.</span>byteLength <span class="token operator">-</span> start <span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>chunkSize
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>gowith<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">fileSlice</span><span class="token punctuation">(</span>start<span class="token punctuation">,</span> length<span class="token punctuation">,</span> <span class="token parameter">file</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">uploadFileBinary</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token function">uploadFileBinary</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> fs <span class="token operator">=</span> uni<span class="token punctuation">.</span><span class="token function">getFileSystemManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">const</span> md5 <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getDataMd5</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
        <span class="token keyword">const</span> tempPath <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>wx<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">USER_DATA_PATH</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/up_temp/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>md5<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.temp</span><span class="token template-punctuation string">\`</span></span>
        fs<span class="token punctuation">.</span><span class="token function">access</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>wx<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">USER_DATA_PATH</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/up_temp</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
            <span class="token function">fail</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                fs<span class="token punctuation">.</span><span class="token function">mkdirSync</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>wx<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">USER_DATA_PATH</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/up_temp</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
        fs<span class="token punctuation">.</span><span class="token function">writeFile</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            <span class="token literal-property property">filePath</span><span class="token operator">:</span> tempPath<span class="token punctuation">,</span>
            <span class="token literal-property property">encoding</span><span class="token operator">:</span> <span class="token string">&#39;binary&#39;</span><span class="token punctuation">,</span>
            <span class="token literal-property property">data</span><span class="token operator">:</span> data<span class="token punctuation">,</span>
            <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                <span class="token keyword">let</span> formData <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
                formData<span class="token punctuation">.</span>currentChunk <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>currentChunk <span class="token operator">+</span> <span class="token number">1</span>
                formData<span class="token punctuation">.</span>pt_md5 <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>pt_md5
                formData<span class="token punctuation">.</span>type <span class="token operator">=</span> <span class="token string">&#39;file&#39;</span>
                formData<span class="token punctuation">.</span>md5 <span class="token operator">=</span> md5
                uni<span class="token punctuation">.</span><span class="token function">uploadFile</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
                    <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>Setting<span class="token punctuation">.</span>url<span class="token punctuation">,</span>
                    <span class="token literal-property property">filePath</span><span class="token operator">:</span> tempPath<span class="token punctuation">,</span>
                    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;file&#39;</span><span class="token punctuation">,</span>
                    <span class="token literal-property property">formData</span><span class="token operator">:</span> formData<span class="token punctuation">,</span>
                    <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token parameter">res2</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                        fs<span class="token punctuation">.</span><span class="token function">unlinkSync</span><span class="token punctuation">(</span>tempPath<span class="token punctuation">)</span>
                        <span class="token keyword">if</span> <span class="token punctuation">(</span>res2<span class="token punctuation">.</span>statusCode <span class="token operator">===</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>res2<span class="token punctuation">.</span>data<span class="token punctuation">)</span>
                            <span class="token keyword">if</span> <span class="token punctuation">(</span>data<span class="token punctuation">.</span>code <span class="token operator">===</span> <span class="token string">&#39;0&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                                <span class="token keyword">this</span><span class="token punctuation">.</span>currentChunk<span class="token operator">++</span>
                                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>currentChunk <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>chunks<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                                    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">loadNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                                    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">callback</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>data<span class="token punctuation">)</span>
                                <span class="token punctuation">}</span>
                            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                                <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">callback</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span>
                            <span class="token punctuation">}</span>
                        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">callback</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span>
                        <span class="token punctuation">}</span>
                    <span class="token punctuation">}</span><span class="token punctuation">,</span>
                    <span class="token function-variable function">fail</span><span class="token operator">:</span> <span class="token parameter">err</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
                        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">callback</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token function-variable function">fail</span><span class="token operator">:</span> <span class="token parameter">err</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
                <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">callback</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token function">drowSpeed</span><span class="token punctuation">(</span><span class="token parameter">p</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>Setting<span class="token punctuation">.</span>drowSpeed <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">typeof</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>Setting<span class="token punctuation">.</span>drowSpeed<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>Setting<span class="token punctuation">.</span><span class="token function">drowSpeed</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token function">getDataMd5</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">let</span> trunkSpark <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SparkMD5</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            trunkSpark<span class="token punctuation">.</span><span class="token function">appendBinary</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
            <span class="token keyword">let</span> md5 <span class="token operator">=</span> trunkSpark<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> md5
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token function">isPlay</span><span class="token punctuation">(</span><span class="token parameter">cbk</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>gowith<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>gowith <span class="token operator">=</span> <span class="token boolean">false</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> <span class="token punctuation">(</span>cbk<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token function">cbk</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>gowith <span class="token operator">=</span> <span class="token boolean">true</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">loadNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> <span class="token punctuation">(</span>cbk<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token function">cbk</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token function">fileSlice</span><span class="token punctuation">(</span><span class="token parameter">start<span class="token punctuation">,</span> length<span class="token punctuation">,</span> cbk</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        uni<span class="token punctuation">.</span><span class="token function">getFileSystemManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            <span class="token literal-property property">filePath</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>Setting<span class="token punctuation">.</span>filePath<span class="token punctuation">,</span>
            <span class="token literal-property property">encoding</span><span class="token operator">:</span> <span class="token string">&#39;binary&#39;</span><span class="token punctuation">,</span>
            <span class="token literal-property property">position</span><span class="token operator">:</span> start<span class="token punctuation">,</span>
            <span class="token literal-property property">length</span><span class="token operator">:</span> length<span class="token punctuation">,</span>
            <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                <span class="token function">cbk</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">)</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token function-variable function">fail</span><span class="token operator">:</span> <span class="token parameter">err</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
                <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">callback</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token function">callback</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>Setting<span class="token punctuation">.</span>callback<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>Setting<span class="token punctuation">.</span><span class="token function">callback</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>`,10);function m(b,f){const t=e("ExternalLinkIcon");return c(),l("div",null,[i,s("p",null,[n("\u5982\u679C fileSize(\u6587\u4EF6\u5927\u5C0F) \u5C0F\u4E8E chunkSize(2\u5146)\u7684\u8BDD\uFF0C\u4F7F\u7528\u5411\u4E0A\u53D6\u6574\uFF0C\u56E0\u6B64\u4E3A1\u4E2A\u5206\u7247\u3002\u540C\u7406\u5982\u679C\u9664\u4EE5\u7684\u7ED3\u679C \u662F 1.2 \u8FD9\u6837\u7684\uFF0C\u90A3\u4E48\u5C31\u662F2\u4E2A\u5206\u7247\u4E86\uFF0C\u4F9D\u6B21\u7C7B\u63A8.... \u7136\u540E\u4F7F\u7528 SparkMD5.ArrayBuffer \u65B9\u6CD5\u4E86\uFF0C\u8BE6\u60C5\u53EF\u4EE5\u770B"),s("a",k,[n("\u5B98\u7F51"),p(t)]),n(". \u5148\u521D\u59CB\u5316\u5F53\u524D\u7684 currentChunk \u5206\u7247\u4E3A0\uFF0C\u7136\u540E reader.onload = function(e) {} \u65B9\u6CD5\uFF0C\u5982\u679C\u5F53\u524D\u7684\u5206\u7247\u6570\u91CF\u5C0F\u4E8E chunks \u7684\u6570\u91CF\u7684\u8BDD\uFF0C\u4F1A\u7EE7\u7EED\u8C03\u7528 loadNext()\u65B9\u6CD5\uFF0C\u8BE5\u65B9\u6CD5\u4F1A\u8BFB\u53D6\u4E0B\u4E00\u4E2A\u5206\u7247\uFF0C\u5F00\u59CB\u7684\u4F4D\u7F6E\u8BA1\u7B97\u65B9\u5F0F\u662F\uFF1Avar start = currentChunk * chunkSize;")]),r,s("p",null,[n("\u5982\u4E0A\u4EE3\u7801\uFF0C\u4F1A\u5904\u7406 '/file/upload' \u8FD9\u4E2A\u8BF7\u6C42\uFF0Cupload.single('file'), \u7684\u542B\u4E49\u662F\uFF1A\u63A5\u53D7\u4E00\u4E2A\u6587\u4EF6\u540D\u79F0\u5B57\u6BB5\u540D\u3002 \u5355\u4E00\u6587\u4EF6\u5C06\u5B58\u50A8\u5728req.file\u4E2D\uFF0C\u8FD9\u662F koa-multer \u63D2\u4EF6\u7684\u7528\u6CD5\uFF0C\u5177\u4F53\u53EF\u4EE5\u770B "),s("a",d,[n("koa-multer\u5B98\u7F51"),p(t)]),n("\u3002 \u83B7\u53D6\u5230\u6587\u4EF6\u540E\uFF0C\u8BF7\u6C42\u6210\u529F\u56DE\u8C03\uFF0C\u7136\u540E\u4F1A\u5728\u9879\u76EE\u4E2D\u7684\u6839\u76EE\u5F55\u4E0B\u521B\u5EFA\u4E00\u4E2A uploads \u8FD9\u4E2A\u76EE\u5F55\uFF0C\u5982\u4E0B\u4EE3\u7801\u53EF\u4EE5\u770B\u5230\uFF1A")]),v])}const h=o(u,[["render",m],["__file","06.html.vue"]]);export{h as default};
