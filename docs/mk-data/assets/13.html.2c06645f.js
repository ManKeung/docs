import{_ as n,o as s,c as a,a as p}from"./app.26f3bee3.js";const t={},e=p(`<h1 id="symbol\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#symbol\u7C7B\u578B" aria-hidden="true">#</a> symbol\u7C7B\u578B</h1><p>\u81EAECMAScript 2015\u8D77\uFF0Csymbol\u6210\u4E3A\u4E86\u4E00\u79CD\u65B0\u7684\u539F\u751F\u7C7B\u578B\uFF0C\u5C31\u50CFnumber\u548Cstring\u4E00\u6837\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> s <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> s2 <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&#39;s2&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="symbol\u7684\u503C\u662F\u552F\u4E00\u7684" tabindex="-1"><a class="header-anchor" href="#symbol\u7684\u503C\u662F\u552F\u4E00\u7684" aria-hidden="true">#</a> Symbol\u7684\u503C\u662F\u552F\u4E00\u7684</h2><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> s <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> s2 <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>s <span class="token operator">===</span> s2<span class="token punctuation">)</span> <span class="token comment">// false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u7528\u4F5C\u5BF9\u8C61\u5C5E\u6027\u7684\u952E" tabindex="-1"><a class="header-anchor" href="#\u7528\u4F5C\u5BF9\u8C61\u5C5E\u6027\u7684\u952E" aria-hidden="true">#</a> \u7528\u4F5C\u5BF9\u8C61\u5C5E\u6027\u7684\u952E</h2><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> s <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token punctuation">[</span>s<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token string">&#39;mk&#39;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u4F7F\u7528symbol\u5B9A\u4E49\u7684\u5C5E\u6027-\u662F\u4E0D\u80FD\u901A\u8FC7\u5982\u4E0B\u65B9\u5F0F\u904D\u5386\u62FF\u5230\u7684" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528symbol\u5B9A\u4E49\u7684\u5C5E\u6027-\u662F\u4E0D\u80FD\u901A\u8FC7\u5982\u4E0B\u65B9\u5F0F\u904D\u5386\u62FF\u5230\u7684" aria-hidden="true">#</a> \u4F7F\u7528symbol\u5B9A\u4E49\u7684\u5C5E\u6027\uFF0C\u662F\u4E0D\u80FD\u901A\u8FC7\u5982\u4E0B\u65B9\u5F0F\u904D\u5386\u62FF\u5230\u7684</h2><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> symbol1 <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&#39;666&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> symbol2 <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&#39;777&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> obj1<span class="token operator">=</span> <span class="token punctuation">{</span>
   <span class="token punctuation">[</span>symbol1<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token string">&#39;mk&#39;</span><span class="token punctuation">,</span>
   <span class="token punctuation">[</span>symbol2<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token string">&#39;mankeung&#39;</span><span class="token punctuation">,</span>
   age<span class="token operator">:</span> <span class="token number">19</span><span class="token punctuation">,</span>
   sex<span class="token operator">:</span> <span class="token string">&#39;\u5973&#39;</span>
<span class="token punctuation">}</span>
<span class="token comment">// 1 for in \u904D\u5386</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> key <span class="token keyword">in</span> obj1<span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token comment">// \u6CE8\u610F\u5728console\u770Bkey,\u662F\u4E0D\u662F\u6CA1\u6709\u904D\u5386\u5230symbol1</span>
   <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token comment">// 2 Object.keys \u904D\u5386</span>
Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>obj1<span class="token punctuation">)</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>obj1<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">// 3 getOwnPropertyNames</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Object<span class="token punctuation">.</span><span class="token function">getOwnPropertyNames</span><span class="token punctuation">(</span>obj1<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">// 4 JSON.stringify</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>obj1<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// 1 \u62FF\u5230\u5177\u4F53\u7684symbol \u5C5E\u6027,\u5BF9\u8C61\u4E2D\u6709\u51E0\u4E2A\u5C31\u4F1A\u62FF\u5230\u51E0\u4E2A</span>
Object<span class="token punctuation">.</span><span class="token function">getOwnPropertySymbols</span><span class="token punctuation">(</span>obj1<span class="token punctuation">)</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Object<span class="token punctuation">.</span><span class="token function">getOwnPropertySymbols</span><span class="token punctuation">(</span>obj1<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">// 2 es6 \u7684 Reflect \u62FF\u5230\u5BF9\u8C61\u7684\u6240\u6709\u5C5E\u6027</span>
Reflect<span class="token punctuation">.</span><span class="token function">ownKeys</span><span class="token punctuation">(</span>obj1<span class="token punctuation">)</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Reflect<span class="token punctuation">.</span><span class="token function">ownKeys</span><span class="token punctuation">(</span>obj1<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="symbol-iterator-\u8FED\u4EE3\u5668-\u548C-\u751F\u6210\u5668-for-of" tabindex="-1"><a class="header-anchor" href="#symbol-iterator-\u8FED\u4EE3\u5668-\u548C-\u751F\u6210\u5668-for-of" aria-hidden="true">#</a> Symbol.iterator \u8FED\u4EE3\u5668 \u548C \u751F\u6210\u5668 for of</h2><p>\u652F\u6301\u904D\u5386\u5927\u90E8\u5206\u7C7B\u578B\u8FED\u4EE3\u5668 arr nodeList arguments set map \u7B49</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span>
<span class="token keyword">const</span> it <span class="token operator">=</span> arr<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span>


<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>it<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//{ value: 1, done: false }</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>it<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//{ value: 2, done: false }</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>it<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//{ value: 3, done: false }</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>it<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//{ value: 4, done: false }</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>it<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//{ value: undefined, done: true }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">Item</span> <span class="token punctuation">{</span>
    age<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token builtin">string</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> array<span class="token operator">:</span> <span class="token builtin">Array</span><span class="token operator">&lt;</span>Item<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> age<span class="token operator">:</span> <span class="token number">123</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token string">&#39;1&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> age<span class="token operator">:</span> <span class="token number">123</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token string">&#39;2&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> age<span class="token operator">:</span> <span class="token number">123</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token string">&#39;3&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">]</span>

<span class="token keyword">type</span> <span class="token class-name">mapTypes</span> <span class="token operator">=</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span>
<span class="token keyword">const</span> map<span class="token operator">:</span>Map<span class="token operator">&lt;</span>mapTypes<span class="token punctuation">,</span>mapTypes<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

map<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;\u738B\u7237&#39;</span><span class="token punctuation">)</span>
map<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;2&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;\u9646\u5317&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
    aaa<span class="token operator">:</span><span class="token number">123</span><span class="token punctuation">,</span>
    bbb<span class="token operator">:</span><span class="token number">456</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> set<span class="token operator">:</span>Set<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token comment">// let it:Iterator&lt;Item&gt; = array[Symbol.iterator]()</span>
<span class="token keyword">const</span> gen <span class="token operator">=</span> <span class="token punctuation">(</span>erg<span class="token operator">:</span><span class="token builtin">any</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> it<span class="token operator">:</span> Iterator<span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span> <span class="token operator">=</span> erg<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">let</span> next<span class="token operator">:</span><span class="token builtin">any</span><span class="token operator">=</span> <span class="token punctuation">{</span> done<span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span>next<span class="token punctuation">.</span>done<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        next <span class="token operator">=</span>  it<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>next<span class="token punctuation">.</span>done<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>next<span class="token punctuation">.</span>value<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token function">gen</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6211\u4EEC\u5E73\u65F6\u5F00\u53D1\u4E2D\u4E0D\u4F1A\u624B\u52A8\u8C03\u7528iterator\u56E0\u4E3A\u4ED6\u662F\u6709\u8BED\u6CD5\u7CD6\u7684\u5C31\u662Ffor of\u8BB0\u4F4Ffor of\u662F\u4E0D\u80FD\u5FAA\u73AF\u5BF9\u8C61\u7684\u5E94\u4E3A\u5BF9\u8C61\u6CA1\u6709iterator</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> value <span class="token keyword">of</span> map<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6570\u7EC4\u89E3\u6784\u7684\u539F\u7406\u5176\u5B9E\u4E5F\u662F\u8C03\u7528\u8FED\u4EE3\u5668\u7684</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> <span class="token punctuation">[</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>

<span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>aa<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u90A3\u6211\u4EEC\u53EF\u4EE5\u81EA\u5DF1\u5B9E\u73B0\u4E00\u4E2A\u8FED\u4EE3\u5668\u8BA9\u5BF9\u8C61\u652F\u6301for-of" tabindex="-1"><a class="header-anchor" href="#\u90A3\u6211\u4EEC\u53EF\u4EE5\u81EA\u5DF1\u5B9E\u73B0\u4E00\u4E2A\u8FED\u4EE3\u5668\u8BA9\u5BF9\u8C61\u652F\u6301for-of" aria-hidden="true">#</a> \u90A3\u6211\u4EEC\u53EF\u4EE5\u81EA\u5DF1\u5B9E\u73B0\u4E00\u4E2A\u8FED\u4EE3\u5668\u8BA9\u5BF9\u8C61\u652F\u6301for of</h2><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
    max<span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>
    current<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">{</span>
            max<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>max<span class="token punctuation">,</span>
            current<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>current<span class="token punctuation">,</span>
            <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>current <span class="token operator">==</span> <span class="token keyword">this</span><span class="token punctuation">.</span>max<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">return</span> <span class="token punctuation">{</span>
                        value<span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span>
                        done<span class="token operator">:</span> <span class="token boolean">true</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    <span class="token keyword">return</span> <span class="token punctuation">{</span>
                        value<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>current<span class="token operator">++</span><span class="token punctuation">,</span>
                        done<span class="token operator">:</span> <span class="token boolean">false</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span>obj<span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> val <span class="token keyword">of</span> obj<span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u4EE5\u4E0B\u4E3A\u8FD9\u4E9Bsymbols\u7684\u5217\u8868" tabindex="-1"><a class="header-anchor" href="#\u4EE5\u4E0B\u4E3A\u8FD9\u4E9Bsymbols\u7684\u5217\u8868" aria-hidden="true">#</a> \u4EE5\u4E0B\u4E3A\u8FD9\u4E9Bsymbols\u7684\u5217\u8868</h2><ul><li>Symbol.hasInstance</li></ul><p>\u65B9\u6CD5\uFF0C\u4F1A\u88ABinstanceof\u8FD0\u7B97\u7B26\u8C03\u7528\u3002\u6784\u9020\u5668\u5BF9\u8C61\u7528\u6765\u8BC6\u522B\u4E00\u4E2A\u5BF9\u8C61\u662F\u5426\u662F\u5176\u5B9E\u4F8B\u3002</p><ul><li>Symbol.isConcatSpreadable</li></ul><p>\u5E03\u5C14\u503C\uFF0C\u8868\u793A\u5F53\u5728\u4E00\u4E2A\u5BF9\u8C61\u4E0A\u8C03\u7528Array.prototype.concat\u65F6\uFF0C\u8FD9\u4E2A\u5BF9\u8C61\u7684\u6570\u7EC4\u5143\u7D20\u662F\u5426\u53EF\u5C55\u5F00\u3002</p><ul><li>Symbol.iterator</li></ul><p>\u65B9\u6CD5\uFF0C\u88ABfor-of\u8BED\u53E5\u8C03\u7528\u3002\u8FD4\u56DE\u5BF9\u8C61\u7684\u9ED8\u8BA4\u8FED\u4EE3\u5668\u3002</p><ul><li>Symbol.match</li></ul><p>\u65B9\u6CD5\uFF0C\u88ABString.prototype.match\u8C03\u7528\u3002\u6B63\u5219\u8868\u8FBE\u5F0F\u7528\u6765\u5339\u914D\u5B57\u7B26\u4E32\u3002</p><ul><li>Symbol.replace</li></ul><p>\u65B9\u6CD5\uFF0C\u88ABString.prototype.replace\u8C03\u7528\u3002\u6B63\u5219\u8868\u8FBE\u5F0F\u7528\u6765\u66FF\u6362\u5B57\u7B26\u4E32\u4E2D\u5339\u914D\u7684\u5B50\u4E32\u3002</p><ul><li>Symbol.search</li></ul><p>\u65B9\u6CD5\uFF0C\u88ABString.prototype.search\u8C03\u7528\u3002\u6B63\u5219\u8868\u8FBE\u5F0F\u8FD4\u56DE\u88AB\u5339\u914D\u90E8\u5206\u5728\u5B57\u7B26\u4E32\u4E2D\u7684\u7D22\u5F15\u3002</p><ul><li>Symbol.species</li></ul><p>\u51FD\u6570\u503C\uFF0C\u4E3A\u4E00\u4E2A\u6784\u9020\u51FD\u6570\u3002\u7528\u6765\u521B\u5EFA\u6D3E\u751F\u5BF9\u8C61\u3002</p><ul><li>Symbol.split</li></ul><p>\u65B9\u6CD5\uFF0C\u88ABString.prototype.split\u8C03\u7528\u3002\u6B63\u5219\u8868\u8FBE\u5F0F\u6765\u7528\u5206\u5272\u5B57\u7B26\u4E32\u3002</p><ul><li>Symbol.toPrimitive</li></ul><p>\u65B9\u6CD5\uFF0C\u88ABToPrimitive\u62BD\u8C61\u64CD\u4F5C\u8C03\u7528\u3002\u628A\u5BF9\u8C61\u8F6C\u6362\u4E3A\u76F8\u5E94\u7684\u539F\u59CB\u503C\u3002</p><ul><li>Symbol.toStringTag</li></ul><p>\u65B9\u6CD5\uFF0C\u88AB\u5185\u7F6E\u65B9\u6CD5Object.prototype.toString\u8C03\u7528\u3002\u8FD4\u56DE\u521B\u5EFA\u5BF9\u8C61\u65F6\u9ED8\u8BA4\u7684\u5B57\u7B26\u4E32\u63CF\u8FF0\u3002</p><ul><li>Symbol.unscopables</li></ul><p>\u5BF9\u8C61\uFF0C\u5B83\u81EA\u5DF1\u62E5\u6709\u7684\u5C5E\u6027\u4F1A\u88ABwith\u4F5C\u7528\u57DF\u6392\u9664\u5728\u5916\u3002</p>`,43),o=[e];function c(l,i){return s(),a("div",null,o)}const r=n(t,[["render",c],["__file","13.html.vue"]]);export{r as default};
