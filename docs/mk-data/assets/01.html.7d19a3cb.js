import{_ as n,o as s,c as a,a as p}from"./app.7b8ed854.js";const t={},e=p(`<h1 id="nodejs-\u4E2D\u7684-lru-\u7F13\u5B58-clock-2-hand-\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#nodejs-\u4E2D\u7684-lru-\u7F13\u5B58-clock-2-hand-\u5B9E\u73B0" aria-hidden="true">#</a> NodeJS \u4E2D\u7684 LRU \u7F13\u5B58\uFF08CLOCK-2-hand\uFF09\u5B9E\u73B0</h1><p>\u5728\u6587\u7AE0\u7684\u5F00\u59CB\u6211\u4EEC\u9700\u8981\u4E86\u89E3\u4EC0\u4E48\u662F\u7F13\u5B58\uFF1F\u7F13\u5B58\u662F\u9884\u5148\u6839\u636E\u6570\u636E\u5217\u8868\u51C6\u5907\u4E00\u4E9B\u91CD\u8981\u6570\u636E\u3002</p><p>\u6CA1\u6709\u7F13\u5B58\u7684\u8BDD\uFF0C\u7CFB\u7EDF\u7684\u541E\u5410\u91CF\u5C31\u53D6\u51B3\u4E8E\u5B58\u50A8\u901F\u5EA6\u6700\u6162\u7684\u6570\u636E\uFF0C\u56E0\u6B64\u4FDD\u6301\u5E94\u7528\u7A0B\u5E8F\u9AD8\u6027\u80FD\u7684\u4E00\u4E2A\u91CD\u8981\u4F18\u5316\u5C31\u662F\u7F13\u5B58\u3002</p><p>web\u5E94\u7528\u7A0B\u5E8F\u4E2D\u6709\u4E24\u9879\u5F88\u91CD\u8981\u7684\u5DE5\u4F5C\uFF0C\u5206\u522B\u662F\u6587\u4EF6\u548C\u89C6\u9891Blob\u7684\u7F13\u5B58\u548C\u5FEB\u901F\u8BBF\u95EE\u9875\u9762\u6A21\u677F\u3002</p><p>\u800C\u5728Nodejs\u4E2D\uFF0C\u975E\u5F02\u6B65\u529F\u80FD\u64CD\u4F5C\u7684\u5EF6\u8FDF\u4F1A\u51B3\u5B9A\u7CFB\u7EDF\u4EC0\u4E48\u65F6\u5019\u4E3A\u5176\u4ED6\u5BA2\u6237\u7AEF\u63D0\u4F9B\u670D\u52A1\uFF0C\u5C3D\u7BA1\u64CD\u4F5C\u7CFB\u7EDF\u6709\u81EA\u5DF1\u7684\u6587\u4EF6\u7F13\u5B58\u673A\u5236\uFF0C\u4F46\u662F\u540C\u4E00\u4E2A\u670D\u52A1\u5668\u4E2D\u6709\u591A\u4E2Aweb\u5E94\u7528\u7A0B\u5E8F\u540C\u65F6\u8FD0\u884C\uFF0C\u4E14\u5176\u4E2D\u4E00\u4E2A\u5E94\u7528\u6B63\u5728\u4F20\u8F93\u5927\u91CF\u89C6\u9891\u6570\u636E\u7684\u65F6\u5019\uFF0C\u5176\u4ED6\u5E94\u7528\u7684\u7F13\u5B58\u5185\u5BB9\u5C31\u53EF\u80FD\u4F1A\u9891\u7E41\u5931\u6548\uFF0C\u6B64\u65F6\u7A0B\u5E8F\u6548\u7387\u4F1A\u5927\u5E45\u964D\u4F4E\u3002</p><p>\u800C\u9488\u5BF9\u5E94\u7528\u7A0B\u5E8F\u8D44\u6E90\u7684LRU\u7B97\u6CD5\u80FD\u6709\u6548\u89E3\u51B3\u8FD9\u4E2A\u95EE\u9898\uFF0C\u4F7F\u5E94\u7528\u7A0B\u5E8F\u4E0D\u88AB\u540C\u4E00\u670D\u52A1\u5668\u4E2D\u7684\u5176\u4ED6\u5E94\u7528\u7A0B\u5E8F\u7F13\u5B58\u6240\u5F71\u54CD\u3002</p><p>\u8003\u8651\u5230\u5B58\u50A8\u901F\u5EA6\u6700\u6162\u6570\u636E\u51B3\u7CFB\u7EDF\u541E\u5410\u91CF\u7684\u8FD9\u4E00\u70B9\uFF0CLRU\u7F13\u5B58\u7684\u5B58\u5728\u80FD\u5C06\u7CFB\u7EDF\u6027\u80FD\u63D0\u9AD82\u500D\u81F3100\u500D\uFF1B\u540C\u65F6\uFF0C\u5F02\u6B65LRU\u4F1A\u9690\u85CF\u5168\u90E8\u9AD8\u901F\u7F13\u5B58\u672A\u547D\u4E2D\u7684\u5EF6\u8FDF\u3002</p><p>\u63A5\u4E0B\u6765\u6211\u4EEC\u4E00\u8D77\u6765\u770B\u5177\u4F53\u5B9E\u73B0\u7684\u5185\u5BB9\u3002</p><h2 id="\u4EE3\u7801\u5C55\u793A" tabindex="-1"><a class="header-anchor" href="#\u4EE3\u7801\u5C55\u793A" aria-hidden="true">#</a> \u4EE3\u7801\u5C55\u793A</h2><p>\u9996\u5148\u6784\u5EFA\u4E00\u4E2A\u7528\u6765\u6784\u9020LRU\u5BF9\u8C61\u6A21\u5757\u7684\u6587\u4EF6\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&#39;use strict&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> <span class="token function-variable function">Lru</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">cacheSize<span class="token punctuation">,</span> callbackBackingStoreLoad<span class="token punctuation">,</span> elementLifeTimeMs <span class="token operator">=</span> <span class="token number">1000</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> me <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> maxWait <span class="token operator">=</span> elementLifeTimeMs<span class="token punctuation">;</span>
    <span class="token keyword">let</span> size <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>cacheSize<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> mapping <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> mappingInFlightMiss <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> buf <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> size<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> rnd <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        mapping<span class="token punctuation">[</span>rnd<span class="token punctuation">]</span> <span class="token operator">=</span> i<span class="token punctuation">;</span>
        buf<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
            <span class="token literal-property property">visited</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
            <span class="token literal-property property">key</span><span class="token operator">:</span> rnd<span class="token punctuation">,</span>
            <span class="token literal-property property">time</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
            <span class="token literal-property property">locked</span><span class="token operator">:</span> <span class="token boolean">false</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">let</span> ctr <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> ctrEvict <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>cacheSize <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> loadData <span class="token operator">=</span> callbackBackingStoreLoad<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function-variable function">get</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">key<span class="token punctuation">,</span> callbackPrm</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token keyword">let</span> callback <span class="token operator">=</span> callbackPrm<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token keyword">in</span> mappingInFlightMiss<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                me<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">newData</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token function">callback</span><span class="token punctuation">(</span>newData<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token keyword">in</span> mapping<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// RAM speed data</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> buf<span class="token punctuation">[</span>mapping<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span>time<span class="token punctuation">)</span> <span class="token operator">&gt;</span> maxWait<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>buf<span class="token punctuation">[</span>mapping<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span>locked<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        me<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">newData</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            <span class="token function">callback</span><span class="token punctuation">(</span>newData<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    <span class="token keyword">delete</span> mapping<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>

                    me<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">newData</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token function">callback</span><span class="token punctuation">(</span>newData<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                buf<span class="token punctuation">[</span>mapping<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span>visited <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                buf<span class="token punctuation">[</span>mapping<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span>time <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token function">callback</span><span class="token punctuation">(</span>buf<span class="token punctuation">[</span>mapping<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token comment">// datastore loading + cache eviction</span>
            <span class="token keyword">let</span> ctrFound <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token keyword">while</span> <span class="token punctuation">(</span>ctrFound <span class="token operator">===</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>buf<span class="token punctuation">[</span>ctr<span class="token punctuation">]</span><span class="token punctuation">.</span>locked <span class="token operator">&amp;&amp;</span> buf<span class="token punctuation">[</span>ctr<span class="token punctuation">]</span><span class="token punctuation">.</span>visited<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    buf<span class="token punctuation">[</span>ctr<span class="token punctuation">]</span><span class="token punctuation">.</span>visited <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                ctr<span class="token operator">++</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>ctr <span class="token operator">&gt;=</span> size<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    ctr <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>

                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>buf<span class="token punctuation">[</span>ctrEvict<span class="token punctuation">]</span><span class="token punctuation">.</span>locked <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>buf<span class="token punctuation">[</span>ctrEvict<span class="token punctuation">]</span><span class="token punctuation">.</span>visited<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">// evict</span>
                    buf<span class="token punctuation">[</span>ctrEvict<span class="token punctuation">]</span><span class="token punctuation">.</span>locked <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                    ctrFound <span class="token operator">=</span> ctrEvict<span class="token punctuation">;</span>
                <span class="token punctuation">}</span>

                ctrEvict<span class="token operator">++</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>ctrEvict <span class="token operator">&gt;=</span> size<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    ctrEvict <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>

            mappingInFlightMiss<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token keyword">let</span> <span class="token function-variable function">f</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">delete</span> mapping<span class="token punctuation">[</span>buf<span class="token punctuation">[</span>ctrFound<span class="token punctuation">]</span><span class="token punctuation">.</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>
                buf<span class="token punctuation">[</span>ctrFound<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
                    <span class="token literal-property property">data</span><span class="token operator">:</span> res<span class="token punctuation">,</span>
                    <span class="token literal-property property">visited</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
                    <span class="token literal-property property">key</span><span class="token operator">:</span> key<span class="token punctuation">,</span>
                    <span class="token literal-property property">time</span><span class="token operator">:</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                    <span class="token literal-property property">locked</span><span class="token operator">:</span> <span class="token boolean">false</span>
                <span class="token punctuation">}</span><span class="token punctuation">;</span>
                mapping<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> ctrFound<span class="token punctuation">;</span>
                <span class="token function">callback</span><span class="token punctuation">(</span>buf<span class="token punctuation">[</span>ctrFound<span class="token punctuation">]</span><span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">delete</span> mappingInFlightMiss<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">;</span>
            <span class="token function">loadData</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> f<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

exports<span class="token punctuation">.</span>Lru <span class="token operator">=</span> Lru<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6587\u4EF6\u7F13\u5B58\u793A\u4F8B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> Lru <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;./lrucache.js&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Lru<span class="token punctuation">;</span>
<span class="token keyword">let</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;fs&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;path&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> fileCache <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Lru</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">key<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// cache-miss data-load algorithm</span>
    fs<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">callback</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
                <span class="token literal-property property">stat</span><span class="token operator">:</span> <span class="token number">404</span><span class="token punctuation">,</span>
                <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token function">callback</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
                <span class="token literal-property property">stat</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span>
                <span class="token literal-property property">data</span><span class="token operator">:</span> data
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span> <span class="token comment">/* cache element lifetime */</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F7F\u7528LRU\u6784\u9020\u51FD\u6570\u83B7\u53D6\u53C2\u6570\uFF08\u9AD8\u901F\u7F13\u5B58\u5927\u5C0F\u3001\u9AD8\u901F\u7F13\u5B58\u672A\u547D\u4E2D\u7684\u5173\u952E\u5B57\u548C\u56DE\u8C03\u3001\u9AD8\u901F\u7F13\u5B58\u8981\u7D20\u751F\u547D\u5468\u671F\uFF09\u6765\u6784\u9020CLOCK\u9AD8\u901F\u7F13\u5B58\u3002</p><p>\u5F02\u6B65\u7F13\u5B58\u672A\u547D\u4E2D\u56DE\u8C03\u7684\u5DE5\u4F5C\u65B9\u5F0F\u5982\u4E0B\uFF1A 1\u3001\u4E00\u4E9Bget()\u5728\u7F13\u5B58\u4E2D\u627E\u4E0D\u5230\u5BC6\u94A5 2\u3001\u7B97\u6CD5\u627E\u5230\u5BF9\u5E94\u63D2\u69FD 3\u3001\u8FD0\u884C\u6B64\u56DE\u8C03\uFF1A \u5728\u56DE\u8C03\u4E2D\uFF0C\u91CD\u8981\u8BA1\u7B97\u5F02\u6B65\u5B8C\u6210 \u56DE\u8C03\u7ED3\u675F\u65F6\uFF0C\u5C06\u56DE\u8C03\u51FD\u6570\u7684\u56DE\u8C03\u8FD4\u56DE\u5230LRU\u7F13\u5B58\u4E2D</p><p>\u518D\u6B21\u8BBF\u95EE\u540C\u4E00\u5BC6\u94A5\u7684\u6570\u636E\u6765\u81EARAM \u8BE5\u4F9D\u8D56\u7684\u552F\u4E00\u5B9E\u73B0\u65B9\u6CD5get()\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>fileCache<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;./test.js&quot;</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">dat</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    httpResponse<span class="token punctuation">.</span><span class="token function">writeHead</span><span class="token punctuation">(</span>dat<span class="token punctuation">.</span>stat<span class="token punctuation">)</span><span class="token punctuation">;</span>
    httpResponse<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span>dat<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7ED3\u679C\u6570\u636E\u8FD8\u6709\u53E6\u4E00\u4E2A\u56DE\u8C03\uFF0C\u56E0\u6B64\u53EF\u4EE5\u5F02\u6B65\u8FD0\u884C</p><h2 id="\u5DE5\u4F5C\u539F\u7406" tabindex="-1"><a class="header-anchor" href="#\u5DE5\u4F5C\u539F\u7406" aria-hidden="true">#</a> \u5DE5\u4F5C\u539F\u7406</h2><p>\u73B0\u5728\u5927\u591ALRU\u7684\u5DE5\u4F5C\u8FC7\u7A0B\u59CB\u7EC8\u5B58\u5728\u4ECE\u952E\u5230\u7F13\u5B58\u69FD\u7684\u201C\u6620\u5C04\u201D\u5BF9\u8C61\uFF0C\u5C31\u7F13\u5B58\u69FD\u7684\u6570\u91CF\u800C\u8A00\u5B9E\u73B0O\uFF081\uFF09\u952E\u641C\u7D22\u65F6\u95F4\u590D\u6742\u5EA6\u3002\u4F46\u662F\u7528JavaScript\u5C31\u7B80\u5355\u591A\u4E86\uFF1A \u6620\u5C04\u5BF9\u8C61\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> mapping <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u5728\u6620\u5C04\u4E2D\u627E\u5230\u4E00\u4E2A\uFF08\u5B57\u7B26\u4E32/\u6574\u6570\uFF09\u952E\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">if</span><span class="token punctuation">(</span>key <span class="token keyword">in</span> mapping<span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token comment">// key found, get data from RAM</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u9AD8\u6548\u4E14\u7B80\u5355</p><p>\u53EA\u8981\u6620\u5C04\u5BF9\u5E94\u4E00\u4E2A\u7F13\u5B58\u63D2\u69FD\uFF0C\u5C31\u53EF\u4EE5\u76F4\u63A5\u4ECE\u5176\u4E2D\u83B7\u53D6\u6570\u636E\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>buf<span class="token punctuation">[</span>mapping<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span>visited <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
buf<span class="token punctuation">[</span>mapping<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span>time <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">callback</span><span class="token punctuation">(</span>buf<span class="token punctuation">[</span>mapping<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>visited\u7528\u6765\u901A\u77E5CLOCK\u6307\u9488\uFF08ctr\u548CctrEvict\uFF09\u4FDD\u5B58\u8BE5\u63D2\u69FD\uFF0C\u907F\u514D\u5B83\u88AB\u9A71\u9010\u3002time\u5B57\u6BB5\u7528\u6765\u7BA1\u7406\u63D2\u69FD\u7684\u751F\u547D\u5468\u671F\u3002\u53EA\u8981\u8BBF\u95EE\u5230\u9AD8\u901F\u7F13\u5B58\u547D\u4E2D\u90FD\u4F1A\u66F4\u65B0time\u5B57\u6BB5\uFF0C\u628A\u5B83\u4FDD\u7559\u5728\u9AD8\u901F\u7F13\u5B58\u4E2D\u3002</p><p>\u7528\u6237\u4F7F\u7528callback\u51FD\u6570\u7ED9get()\u51FD\u6570\u63D0\u4F9B\u7528\u4E8E\u68C0\u7D22\u9AD8\u901F\u7F13\u5B58\u63D2\u69FD\u7684\u6570\u636E\u3002</p><p>\u60F3\u8981\u76F4\u63A5\u4ECE\u6620\u5C04\u63D2\u69FD\u83B7\u53D6\u6570\u636E\u4E4B\u524D\uFF0C\u9700\u8981\u5148\u67E5\u770B\u5B83\u7684\u751F\u547D\u5468\u671F\uFF0C\u5982\u679C\u751F\u547D\u5468\u671F\u5DF2\u7ECF\u7ED3\u675F\uFF0C\u9700\u8981\u5220\u9664\u6620\u5C04\u5E76\u7528\u76F8\u540C\u952E\u91CD\u8BD5\u4F7F\u9AD8\u901F\u7F13\u5B58\u4E22\u5931\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> buf<span class="token punctuation">[</span>mapping<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span>time<span class="token punctuation">)</span> <span class="token operator">&gt;</span> maxWait<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">delete</span> mapping<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>
    me<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">newData</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">callback</span><span class="token punctuation">(</span>newData<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5220\u9664\u6620\u5C04\u540E\u5176\u4ED6\u5F02\u6B65\u8BBF\u95EE\u4E0D\u4F1A\u518D\u5F71\u54CD\u5176\u5185\u90E8\u72B6\u6001</p><p>\u5982\u679C\u5728\u6620\u5C04\u5BF9\u8C61\u4E2D\u6CA1\u627E\u5230\u5BC6\u94A5\uFF0C\u5C31\u8FD0\u884CLRU\u9010\u51FA\u903B\u8F91\u5BFB\u627E\u76EE\u6807\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> ctrFound <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
<span class="token keyword">while</span> <span class="token punctuation">(</span>ctrFound <span class="token operator">===</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>buf<span class="token punctuation">[</span>ctr<span class="token punctuation">]</span><span class="token punctuation">.</span>locked <span class="token operator">&amp;&amp;</span> buf<span class="token punctuation">[</span>ctr<span class="token punctuation">]</span><span class="token punctuation">.</span>visited<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        buf<span class="token punctuation">[</span>ctr<span class="token punctuation">]</span><span class="token punctuation">.</span>visited <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    ctr<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>ctr <span class="token operator">&gt;=</span> size<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        ctr <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>buf<span class="token punctuation">[</span>ctrEvict<span class="token punctuation">]</span><span class="token punctuation">.</span>locked <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>buf<span class="token punctuation">[</span>ctrEvict<span class="token punctuation">]</span><span class="token punctuation">.</span>visited<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// evict</span>
        buf<span class="token punctuation">[</span>ctrEvict<span class="token punctuation">]</span><span class="token punctuation">.</span>locked <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        ctrFound <span class="token operator">=</span> ctrEvict<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    ctrEvict<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>ctrEvict <span class="token operator">&gt;=</span> size<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        ctrEvict <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7B2C\u4E00\u4E2A\u201C if\u201D\u5757\u68C0\u67E5\u201C\u7B2C\u4E8C\u6B21\u673A\u4F1A\u201D\u6307\u9488\uFF08ctr\uFF09\u6307\u5411\u7684\u63D2\u69FD\u72B6\u6001\uFF0C\u5982\u679C\u662F\u672A\u9501\u5B9A\u5E76\u5DF2\u8BBF\u95EE\u4F1A\u5C06\u5176\u6807\u8BB0\u4E3A\u672A\u8BBF\u95EE\uFF0C\u800C\u4E0D\u662F\u9A71\u9010\u5B83\u3002</p><p>\u7B2C\u4E09\u201CIf\u201D\u5757\u68C0\u67E5\u7531ctrEvict\u6307\u9488\u6307\u5411\u7684\u63D2\u69FD\u72B6\u6001\uFF0C\u5982\u679C\u662F\u672A\u9501\u5B9A\u4E14\u672A\u88AB\u8BBF\u95EE\uFF0C\u5219\u5C06\u8BE5\u63D2\u69FD\u6807\u8BB0\u4E3A\u201C locked\u201D\uFF0C\u9632\u6B62\u5F02\u6B65\u8BBF\u95EEget() \u65B9\u6CD5\uFF0C\u5E76\u627E\u5230\u9010\u51FA\u63D2\u69FD\uFF0C\u7136\u540E\u5FAA\u73AF\u7ED3\u675F\u3002</p><p>\u5BF9\u6BD4\u53EF\u4EE5\u53D1\u73B0ctr\u548CctrEvict\u7684\u521D\u59CB\u76F8\u4F4D\u5DEE\u4E3A50\uFF05\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> ctr <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> ctrEvict <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>cacheSize<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5E76\u4E14\u5728\u201C while\u201D\u5FAA\u73AF\u4E2D\u4E8C\u8005\u5747\u7B49\u9012\u589E\u3002\u8FD9\u610F\u5473\u7740\uFF0C\u8FD9\u4E8C\u8005\u5FAA\u73AF\u8DDF\u968F\u53E6\u4E00\u65B9\uFF0C\u4E92\u76F8\u68C0\u67E5\u3002\u9AD8\u901F\u7F13\u5B58\u63D2\u69FD\u8D8A\u591A\uFF0C\u5BF9\u76EE\u6807\u63D2\u69FD\u641C\u7D22\u8D8A\u6709\u5229\u3002\u5BF9\u6BCF\u4E2A\u952E\u800C\u8A00\uFF0C\u6BCF\u4E2A\u952E\u81F3\u5C11\u505C\u7559\u8D85\u8FC7N / 2\u4E2A\u65F6\u9488\u8FD0\u52A8\u624D\u4ECE\u4ECE\u9010\u51FA\u4E2D\u4FDD\u5B58\u3002</p><p>\u627E\u5230\u76EE\u6807\u63D2\u69FD\u540E\uFF0C\u5220\u9664\u6620\u5C04\u9632\u6B62\u5F02\u6B65\u51B2\u7A81\u7684\u53D1\u751F\uFF0C\u5E76\u5728\u52A0\u8F7D\u6570\u636E\u5B58\u50A8\u533A\u540E\u91CD\u65B0\u521B\u5EFA\u6620\u5C04\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>mappingInFlightMiss<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> <span class="token function-variable function">f</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">delete</span> mapping<span class="token punctuation">[</span>buf<span class="token punctuation">[</span>ctrFound<span class="token punctuation">]</span><span class="token punctuation">.</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>
    buf<span class="token punctuation">[</span>ctrFound<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">data</span><span class="token operator">:</span> res<span class="token punctuation">,</span>
        <span class="token literal-property property">visited</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
        <span class="token literal-property property">key</span><span class="token operator">:</span> key<span class="token punctuation">,</span>
        <span class="token literal-property property">time</span><span class="token operator">:</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token literal-property property">locked</span><span class="token operator">:</span> <span class="token boolean">false</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    mapping<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> ctrFound<span class="token punctuation">;</span>
    <span class="token function">callback</span><span class="token punctuation">(</span>buf<span class="token punctuation">[</span>ctrFound<span class="token punctuation">]</span><span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">delete</span> mappingInFlightMiss<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token function">loadData</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> f<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7531\u4E8E\u7528\u6237\u63D0\u4F9B\u7684\u7F13\u5B58\u7F3A\u5931\u6570\u636E\u5B58\u50A8\u52A0\u8F7D\u529F\u80FD\uFF08loadData\uFF09\u53EF\u4EE5\u5F02\u6B65\u8FDB\u884C\uFF0C\u6240\u4EE5\u8BE5\u7F13\u5B58\u5728\u8FD0\u884C\u4E2D\u6700\u591A\u53EF\u4EE5\u5305\u542BN\u4E2A\u7F13\u5B58\u7F3A\u5931\uFF0C\u6700\u591A\u53EF\u4EE5\u9690\u85CFN\u4E2A\u7F13\u5B58\u672A\u547D\u4E2D\u5EF6\u8FDF\u3002</p><p>\u9690\u85CF\u5EF6\u8FDF\u662F\u5F71\u54CD\u541E\u5410\u91CF\u9AD8\u4F4E\u7684\u91CD\u8981\u56E0\u7D20\uFF0C\u8FD9\u4E00\u70B9\u5728web\u5E94\u7528\u4E2D\u5C24\u4E3A\u660E\u663E\u3002</p><p>\u4E00\u65E6\u5E94\u7528\u4E2D\u51FA\u73B0\u4E86\u8D85\u8FC7N\u4E2A\u5F02\u6B65\u7F13\u5B58\u672A\u547D\u4E2D/\u8BBF\u95EE\u5C31\u4F1A\u5BFC\u81F4\u6B7B\u9501\uFF0C\u56E0\u6B64\u5177\u6709100\u4E2A\u63D2\u69FD\u7684\u7F13\u5B58\u53EF\u4EE5\u5F02\u6B65\u670D\u52A1\u591A\u8FBE100\u4E2A\u7528\u6237\uFF0C\u751A\u81F3\u53EF\u4EE5\u5C06\u5176\u9650\u5236\u4E3A\u6BD4N\u66F4\u4F4E\u7684\u503C\uFF08M\uFF09\uFF0C\u5E76\u5728\u591A\u6B21\uFF08K\uFF09\u904D\u4E2D\u8FDB\u884C\u8BA1\u7B97\uFF08\u5176\u4E2DM x K =\u603B\u8BBF\u95EE\u6B21\u6570\uFF09\u3002</p><p>\u6211\u4EEC\u90FD\u77E5\u9053\u9AD8\u901F\u7F13\u5B58\u547D\u4E2D\u5C31\u662FRAM\u7684\u901F\u5EA6\uFF0C\u4F46\u56E0\u4E3A\u9AD8\u901F\u7F13\u5B58\u672A\u547D\u4E2D\u53EF\u4EE5\u9690\u85CF\uFF0C\u6240\u4EE5\u5BF9\u4E8E\u547D\u4E2D\u548C\u672A\u547D\u4E2D\u800C\u8A00\uFF0C\u603B\u4F53\u6027\u80FD\u770B\u8D77\u6765\u7684\u65F6\u95F4\u590D\u6742\u5EA6\u90FD\u662FO\uFF081\uFF09\u3002</p><p>\u5F53\u63D2\u69FD\u5F88\u5C11\u65F6\uFF0C\u6BCF\u4E2A\u8BBF\u95EE\u53EF\u80FD\u6709\u591A\u4E2A\u65F6\u949F\u6307\u9488\u8FED\u4EE3\uFF0C\u4F46\u5982\u679C\u589E\u52A0\u63D2\u69FD\u6570\u65F6\uFF0C\u5B83\u63A5\u8FD1O\uFF081\uFF09\u3002</p><p>\u5728\u6B64loadData\u56DE\u8C03\u4E2D\uFF0C\u5C06\u65B0\u63D2\u69FD\u6570\u636E\u7684locked\u5B57\u6BB5\u8BBE\u7F6E\u4E3Afalse\uFF0C\u53EF\u4EE5\u4F7F\u8BE5\u63D2\u69FD\u7528\u4E8E\u5176\u4ED6\u5F02\u6B65\u8BBF\u95EE\u3002</p><p>\u5982\u679C\u5B58\u5728\u547D\u4E2D\uFF0C\u5E76\u4E14\u627E\u5230\u7684\u63D2\u69FD\u751F\u547D\u5468\u671F\u7ED3\u675F\u4E14\u5DF2\u9501\u5B9A\uFF0C\u5219\u8BBF\u95EE\u64CD\u4F5CsetTimeout\u5C060 time\u53C2\u6570\u5EF6\u8FDF\u5230JavaScript\u6D88\u606F\u961F\u5217\u7684\u672B\u5C3E\u3002</p><p>\u9501\u5B9A\u64CD\u4F5C\uFF08cache-miss\uFF09\u5728setTimeout\u4E4B\u524D\u7ED3\u675F\u7684\u6982\u7387\u4E3A100\uFF05\uFF0C\u5C31\u65F6\u95F4\u590D\u6742\u5EA6\u800C\u8A00\uFF0C\u4ECD\u7B97\u4F5C\u5177\u6709\u8F83\u5927\u7684\u5EF6\u8FDF\u7684O\uFF081\uFF09\uFF0C\u4F46\u5B83\u9690\u85CF\u5728\u9501\u5B9A\u64CD\u4F5C\u5EF6\u8FDF\u7684\u5EF6\u8FDF\u7684\u4E4B\u540E\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>buf<span class="token punctuation">[</span>mapping<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span>locked<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        me<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">newData</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">callback</span><span class="token punctuation">(</span>newData<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6700\u540E\uFF0C\u5982\u679C\u67D0\u4E2A\u952E\u5904\u4E8E\u8FDB\u884C\u4E2D\u7684\u9AD8\u901F\u7F13\u5B58\u672A\u547D\u4E2D\u6620\u5C04\u4E2D\uFF0C\u5219\u901A\u8FC7setTimeout\u5C06\u5176\u63A8\u8FDF\u5230\u6D88\u606F\u961F\u5217\u7684\u672B\u5C3E\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token keyword">in</span> mappingInFlightMiss<span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        me<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">newData</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">callback</span><span class="token punctuation">(</span>newData<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u6837\uFF0C\u5C31\u53EF\u4EE5\u907F\u514D\u6570\u636E\u7684\u91CD\u590D\u3002</p><h2 id="\u6807\u6746\u7BA1\u7406" tabindex="-1"><a class="header-anchor" href="#\u6807\u6746\u7BA1\u7406" aria-hidden="true">#</a> \u6807\u6746\u7BA1\u7406</h2><p>\u5F02\u6B65\u9AD8\u901F\u7F13\u5B58\u672A\u547D\u4E2D\u57FA\u51C6</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&quot;use strict&quot;</span><span class="token punctuation">;</span>
<span class="token comment">// number of asynchronous accessors(1000 here) need to be equal to or less than </span>
<span class="token comment">// cache size(1000 here) or it makes dead-lock</span>
<span class="token keyword">let</span> Lru <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;./lrucache.js&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Lru<span class="token punctuation">;</span>

<span class="token keyword">let</span> cache <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Lru</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">key<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// cache-miss data-load algorithm</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">callback</span><span class="token punctuation">(</span>key <span class="token operator">+</span> <span class="token string">&quot; processed&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span> <span class="token comment">/* cache element lifetime */</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> ctr <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> t1 <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">1000</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    cache<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;data:&quot;</span> <span class="token operator">+</span> data <span class="token operator">+</span> <span class="token string">&quot; key:&quot;</span> <span class="token operator">+</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>i<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; processed&quot;</span> <span class="token operator">!==</span> data<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;error: wrong key-data mapping.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">++</span>ctr <span class="token operator">===</span> <span class="token number">1000</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;benchmark: &quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> t1<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; miliseconds&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E3A\u4E86\u907F\u514D\u6B7B\u9501\u7684\u51FA\u73B0\uFF0C\u53EF\u4EE5\u5C06LRU\u5927\u5C0F\u9009\u62E9\u4E3A1000\uFF0C\u6216\u8005for\u53EA\u5141\u8BB8\u5FAA\u73AF\u8FED\u4EE31000\u6B21\u3002</p><p>\u8F93\u51FA\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token literal-property property">benchmark</span><span class="token operator">:</span> <span class="token number">1127</span> miliseconds
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u7531\u4E8E\u6BCF\u4E2A\u9AD8\u901F\u7F13\u5B58\u672A\u547D\u4E2D\u90FD\u67091000\u6BEB\u79D2\u7684\u5EF6\u8FDF\uFF0C\u56E0\u6B64\u540C\u6B65\u52A0\u8F7D1000\u4E2A\u5143\u7D20\u5C06\u82B1\u8D3915\u5206\u949F\uFF0C\u4F46\u662F\u91CD\u53E0\u7684\u9AD8\u901F\u7F13\u5B58\u672A\u547D\u4E2D\u4F1A\u66F4\u5FEB\u3002\u8FD9\u5728I / O\u7E41\u91CD\u7684\u5DE5\u4F5C\u8D1F\u8F7D\uFF08\u4F8B\u5982\u6765\u81EAHDD\u6216\u7F51\u7EDC\u7684\u6D41\u6570\u636E\uFF09\u4E2D\u7279\u522B\u6709\u7528\u3002</p><p>\u7F13\u5B58\u547D\u4E2D\u7387\u57FA\u51C6</p><p>10\uFF05\u7684\u547D\u4E2D\u7387\uFF1A \u5BC6\u94A5\u751F\u6210\uFF1A\u968F\u673A\uFF0C\u53EF\u80FD\u670910000\u4E2A\u4E0D\u540C\u7684\u503C 1000\u4E2A\u63D2\u69FD</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&quot;use strict&quot;</span><span class="token punctuation">;</span>
<span class="token comment">// number of asynchronous accessors(1000 here) need to be equal to or less than </span>
<span class="token comment">// cache size(1000 here) or it makes dead-lock</span>
<span class="token keyword">let</span> Lru <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;./lrucache.js&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Lru<span class="token punctuation">;</span>

<span class="token keyword">let</span> cacheMiss <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> cache <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Lru</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">key<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    cacheMiss<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token comment">// cache-miss data-load algorithm</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">callback</span><span class="token punctuation">(</span>key <span class="token operator">+</span> <span class="token string">&quot; processed&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">100000000</span> <span class="token comment">/* cache element lifetime */</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> ctr <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> t1 <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> asynchronity <span class="token operator">=</span> <span class="token number">500</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> benchRepeat <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> access <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    ctr <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> asynchronity<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> key <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">10000</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 10% hit ratio</span>
        cache<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            access<span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>key<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; processed&quot;</span> <span class="token operator">!==</span> data<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;error: wrong key-data mapping.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">++</span>ctr <span class="token operator">===</span> asynchronity<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;benchmark: &quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> t1<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; miliseconds&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;cache hit: &quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>access <span class="token operator">-</span> cacheMiss<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;cache miss: &quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>cacheMiss<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;cache hit ratio: &quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>access <span class="token operator">-</span> cacheMiss<span class="token punctuation">)</span> <span class="token operator">/</span> access<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>benchRepeat <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    benchRepeat<span class="token operator">--</span><span class="token punctuation">;</span>
                    <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7ED3\u679C\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token literal-property property">benchmark</span><span class="token operator">:</span> <span class="token number">10498</span> miliseconds
cache hit<span class="token operator">:</span> <span class="token number">6151</span>
cache miss<span class="token operator">:</span> <span class="token number">44349</span>
cache hit ratio<span class="token operator">:</span> <span class="token number">0.1218019801980198</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7531\u4E8E\u57FA\u51C6\u6D4B\u8BD5\u662F\u6309100\u4E2A\u6B65\u9AA4\u8FDB\u884C\u7684\uFF0C\u6BCF\u4E2A\u7F13\u5B58\u4E22\u5931\u7684\u5EF6\u8FDF\u65F6\u95F4\u4E3A100\u6BEB\u79D2\uFF0C\u56E0\u6B64\u4EA7\u751F\u4E8610\u79D2\u7684\u65F6\u95F4\uFF08\u63A5\u8FD1100 x 100\u6BEB\u79D2\uFF09\u3002\u547D\u4E2D\u7387\u63A5\u8FD1\u9884\u671F\u503C10\uFF05\u3002</p><p>50\uFF05\u547D\u4E2D\u7387\u6D4B\u8BD5</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> key <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">2000</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 50% hit ratio</span>

<span class="token literal-property property">Result</span><span class="token operator">:</span>

<span class="token literal-property property">benchmark</span><span class="token operator">:</span> <span class="token number">10418</span> miliseconds
cache hit<span class="token operator">:</span> <span class="token number">27541</span>
cache miss<span class="token operator">:</span> <span class="token number">22959</span>
cache hit ratio<span class="token operator">:</span> <span class="token number">0.5453663366336634</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u547D\u4E2D\u7387\u6D4B\u8BD5</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> key <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">1010</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 99% hit ratio</span>

<span class="token literal-property property">Result</span><span class="token operator">:</span>

<span class="token literal-property property">benchmark</span><span class="token operator">:</span> <span class="token number">10199</span> miliseconds
cache hit<span class="token operator">:</span> <span class="token number">49156</span>
cache miss<span class="token operator">:</span> <span class="token number">1344</span>
cache hit ratio<span class="token operator">:</span> <span class="token number">0.9733861386138614</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7ED3\u679C\u4EA7\u751F\u4E860.9733\u6BD4\u7387\u7684\u952E\u7684\u968F\u673A\u6027</p><p>\uFF05\u547D\u4E2D\u7387\u6D4B\u8BD5</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> key <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">999</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 100% hit ratio</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u7ED3\u679C\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token literal-property property">benchmark</span><span class="token operator">:</span> <span class="token number">1463</span> miliseconds
cache hit<span class="token operator">:</span> <span class="token number">49501</span>
cache miss<span class="token operator">:</span> <span class="token number">999</span>
cache hit ratio<span class="token operator">:</span> <span class="token number">0.9802178217821782</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u57FA\u51C6\u6D4B\u8BD5\u7684\u7B2C\u4E00\u6B65\uFF08\u65E0\u6CD5\u9003\u907F\u7F13\u5B58\u672A\u547D\u4E2D\uFF09\u4E4B\u540E\uFF0C\u6240\u6709\u5185\u5BB9\u90FD\u6765\u81EARAM\uFF0C\u5E76\u5927\u5927\u51CF\u5C11\u4E86\u603B\u5EF6\u8FDF\u3002</p>`,75),o=[e];function c(l,i){return s(),a("div",null,o)}const k=n(t,[["render",c],["__file","01.html.vue"]]);export{k as default};
