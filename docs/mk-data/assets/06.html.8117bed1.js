import{_ as c,r as e,o as l,c as i,b as n,d as s,e as a,w as r,a as p}from"./app.38a67153.js";const u={},k=n("h1",{id:"react-typescript-\u5B9E\u8DF5\u603B\u7ED3\u7BC7",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#react-typescript-\u5B9E\u8DF5\u603B\u7ED3\u7BC7","aria-hidden":"true"},"#"),s(" React + TypeScript \u5B9E\u8DF5\u603B\u7ED3\u7BC7")],-1),d=n("h2",{id:"\u51C6\u5907\u77E5\u8BC6",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u51C6\u5907\u77E5\u8BC6","aria-hidden":"true"},"#"),s(" \u51C6\u5907\u77E5\u8BC6")],-1),v=n("li",null,"\u719F\u6089 React",-1),m={href:"https://2ality.com/2018/04/type-notation-typescript.html",target:"_blank",rel:"noopener noreferrer"},b={href:"https://ts.chibicode.com/todo/",target:"_blank",rel:"noopener noreferrer"},g={href:"https://reactjs.org/docs/static-type-checking.html#typescript",target:"_blank",rel:"noopener noreferrer"},y={href:"http://www.typescriptlang.org/play/index.html?jsx=2&esModuleInterop=true&e=181#example/typescript-with-react",target:"_blank",rel:"noopener noreferrer"},h=p(`<blockquote><p>\u672C\u6587\u6863\u53C2\u8003 TypeScript \u6700\u65B0\u7248\u672C</p></blockquote><h2 id="\u5982\u4F55\u5F15\u5165-react" tabindex="-1"><a class="header-anchor" href="#\u5982\u4F55\u5F15\u5165-react" aria-hidden="true">#</a> \u5982\u4F55\u5F15\u5165 React</h2><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> React <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span>

<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> ReactDOM <span class="token keyword">from</span> <span class="token string">&#39;react-dom&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),f={href:"https://www.reddit.com/r/reactjs/comments/iyehol/import_react_from_react_will_go_away_in_distant/",target:"_blank",rel:"noopener noreferrer"},w=p(`<p>\u800C\u53E6\u5916\u4E00\u79CD\u5F15\u7528\u65B9\u5F0F:</p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span>

<span class="token keyword">import</span> ReactDOM <span class="token keyword">from</span> <span class="token string">&#39;react-dom&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u9700\u8981\u6DFB\u52A0\u989D\u5916\u7684\u914D\u7F6E\uFF1A<code>&quot;allowSyntheticDefaultImports&quot;: true</code></p><h2 id="\u51FD\u6570\u5F0F\u7EC4\u4EF6\u7684\u58F0\u660E\u65B9\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u51FD\u6570\u5F0F\u7EC4\u4EF6\u7684\u58F0\u660E\u65B9\u5F0F" aria-hidden="true">#</a> \u51FD\u6570\u5F0F\u7EC4\u4EF6\u7684\u58F0\u660E\u65B9\u5F0F</h2><p>\u58F0\u660E\u7684\u51E0\u79CD\u65B9\u5F0F</p><p>\u7B2C\u4E00\u79CD\uFF1A\u4E5F\u662F\u6BD4\u8F83<strong>\u63A8\u8350</strong>\u7684\u4E00\u79CD\uFF0C\u4F7F\u7528 <strong>React.FunctionComponent</strong>\uFF0C\u7B80\u5199\u5F62\u5F0F\uFF1A<strong>React.FC</strong>:</p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">type</span> <span class="token class-name">AppProps</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    message<span class="token operator">:</span> <span class="token builtin">string</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token constant">FC</span><span class="token operator">&lt;</span>AppProps<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>message<span class="token punctuation">,</span> children<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
        </span><span class="token punctuation">{</span>message<span class="token punctuation">}</span><span class="token plain-text">
        </span><span class="token punctuation">{</span>children<span class="token punctuation">}</span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F7F\u7528\u7528 React.FC \u58F0\u660E\u51FD\u6570\u7EC4\u4EF6\u548C<strong>\u666E\u901A\u58F0\u660E</strong>\u4EE5\u53CA <strong>PropsWithChildren</strong> \u7684\u533A\u522B\u662F\uFF1A</p>`,8),x=n("li",null,"React.FC \u663E\u5F0F\u5730\u5B9A\u4E49\u4E86\u8FD4\u56DE\u7C7B\u578B\uFF0C\u5176\u4ED6\u65B9\u5F0F\u662F\u9690\u5F0F\u63A8\u5BFC\u7684",-1),R=n("li",null,"React.FC \u5BF9\u9759\u6001\u5C5E\u6027\uFF1AdisplayName\u3001propTypes\u3001defaultProps \u63D0\u4F9B\u4E86\u7C7B\u578B\u68C0\u67E5\u548C\u81EA\u52A8\u8865\u5168",-1),E={href:"https://github.com/DefinitelyTyped/DefinitelyTyped/issues/33006",target:"_blank",rel:"noopener noreferrer"},T=p(`<p>\u6BD4\u5982\u4EE5\u4E0B\u7528\u6CD5 React.FC \u4F1A\u62A5\u7C7B\u578B\u9519\u8BEF:</p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> props <span class="token operator">=&gt;</span> props<span class="token punctuation">.</span>children
<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>
<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token string">&#39;hello&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u89E3\u51B3\u65B9\u6CD5:</p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token constant">FC</span><span class="token operator">&lt;</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token operator">&gt;</span> <span class="token operator">=</span> props <span class="token operator">=&gt;</span> props<span class="token punctuation">.</span>children <span class="token keyword">as</span> <span class="token builtin">any</span>
<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token constant">FC</span><span class="token operator">&lt;</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span> <span class="token keyword">as</span> <span class="token builtin">any</span>
<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token constant">FC</span><span class="token operator">&lt;</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token string">&#39;hello&#39;</span> <span class="token keyword">as</span> <span class="token builtin">any</span>
<span class="token comment">// \u6216\u8005</span>
<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token constant">FC</span><span class="token operator">&lt;</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token operator">&gt;</span> <span class="token operator">=</span> props <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>props<span class="token punctuation">.</span>children <span class="token keyword">as</span> <span class="token builtin">unknown</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token constant">JSX</span><span class="token punctuation">.</span>Element
<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token constant">FC</span><span class="token operator">&lt;</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span> <span class="token keyword">as</span> <span class="token builtin">unknown</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token constant">JSX</span><span class="token punctuation">.</span>Element
<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token constant">FC</span><span class="token operator">&lt;</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token string">&#39;hello&#39;</span> <span class="token keyword">as</span> <span class="token builtin">unknown</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token constant">JSX</span><span class="token punctuation">.</span>Element
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u901A\u5E38\u60C5\u51B5\u4E0B\uFF0C\u4F7F\u7528 <strong>React.FC</strong> \u7684\u65B9\u5F0F\u58F0\u660E\u6700\u7B80\u5355\u6709\u6548\uFF0C\u63A8\u8350\u4F7F\u7528\uFF1B\u5982\u679C\u51FA\u73B0\u7C7B\u578B\u4E0D\u517C\u5BB9\u95EE\u9898\uFF0C\u5EFA\u8BAE\u4F7F\u7528<strong>\u4EE5\u4E0B\u4E24\u79CD\u65B9\u5F0F</strong>\uFF1A</p><p>\u7B2C\u4E8C\u79CD\uFF1A\u4F7F\u7528 <strong>PropsWithChildren</strong>\uFF0C\u8FD9\u79CD\u65B9\u5F0F\u53EF\u4EE5\u4E3A\u4F60\u7701\u53BB\u9891\u7E41\u5B9A\u4E49 children \u7684\u7C7B\u578B\uFF0C\u81EA\u52A8\u8BBE\u7F6E children \u7C7B\u578B\u4E3A ReactNode:</p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">type</span> <span class="token class-name">AppProps</span> <span class="token operator">=</span> React<span class="token punctuation">.</span>PropsWithChildren<span class="token operator">&lt;</span><span class="token punctuation">{</span> message<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span><span class="token operator">&gt;</span>
<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> message<span class="token punctuation">,</span> children <span class="token punctuation">}</span><span class="token operator">:</span> AppProps<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
        </span><span class="token punctuation">{</span>message<span class="token punctuation">}</span><span class="token plain-text">
        </span><span class="token punctuation">{</span>children<span class="token punctuation">}</span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7B2C\u4E09\u79CD\uFF1A\u76F4\u63A5\u58F0\u660E:</p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">type</span> <span class="token class-name">AppProps</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    message<span class="token operator">:</span> <span class="token builtin">string</span>
    children<span class="token operator">?</span><span class="token operator">:</span> React<span class="token punctuation">.</span>ReactNode
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> message<span class="token punctuation">,</span> children <span class="token punctuation">}</span><span class="token operator">:</span> AppProps<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
        </span><span class="token punctuation">{</span>message<span class="token punctuation">}</span><span class="token plain-text">
        </span><span class="token punctuation">{</span>children<span class="token punctuation">}</span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="hooks" tabindex="-1"><a class="header-anchor" href="#hooks" aria-hidden="true">#</a> Hooks</h2><h3 id="usestate-t" tabindex="-1"><a class="header-anchor" href="#usestate-t" aria-hidden="true">#</a> <code>useState&lt;T&gt;</code></h3><p>\u5927\u90E8\u5206\u60C5\u51B5\u4E0B\uFF0CTS \u4F1A\u81EA\u52A8\u4E3A\u4F60\u63A8\u5BFC state \u7684\u7C7B\u578B:</p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token comment">// \`val\`\u4F1A\u63A8\u5BFC\u4E3Aboolean\u7C7B\u578B\uFF0C toggle\u63A5\u6536boolean\u7C7B\u578B\u53C2\u6570</span>
<span class="token keyword">const</span> <span class="token punctuation">[</span>val<span class="token punctuation">,</span> toggle<span class="token punctuation">]</span> <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span>
<span class="token comment">// obj\u4F1A\u81EA\u52A8\u63A8\u5BFC\u4E3A\u7C7B\u578B: {name: string}</span>
<span class="token keyword">const</span> <span class="token punctuation">[</span>obj<span class="token punctuation">]</span> <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&#39;sj&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// arr\u4F1A\u81EA\u52A8\u63A8\u5BFC\u4E3A\u7C7B\u578B: string[]</span>
<span class="token keyword">const</span> <span class="token punctuation">[</span>arr<span class="token punctuation">]</span> <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;One&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Two&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F7F\u7528\u63A8\u5BFC\u7C7B\u578B\u4F5C\u4E3A\u63A5\u53E3/\u7C7B\u578B:</p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// user\u4F1A\u81EA\u52A8\u63A8\u5BFC\u4E3A\u7C7B\u578B: {name: string}</span>
    <span class="token keyword">const</span> <span class="token punctuation">[</span>user<span class="token punctuation">]</span> <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&#39;sj&#39;</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">32</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">const</span> showUser <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">useCallback</span><span class="token punctuation">(</span><span class="token punctuation">(</span>obj<span class="token operator">:</span> <span class="token keyword">typeof</span> user<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">My name is </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>obj<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">, My age is </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>obj<span class="token punctuation">.</span>age<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>App<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">\u7528\u6237: </span><span class="token punctuation">{</span><span class="token function">showUser</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F46\u662F\uFF0C\u4E00\u4E9B\u72B6\u6001\u521D\u59CB\u503C\u4E3A\u7A7A\u65F6\uFF08null\uFF09\uFF0C\u9700\u8981\u663E\u793A\u5730\u58F0\u660E\u7C7B\u578B\uFF1A</p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">type</span> <span class="token class-name">User</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    name<span class="token operator">:</span> <span class="token builtin">string</span>
    age<span class="token operator">:</span> <span class="token builtin">number</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> <span class="token punctuation">[</span>user<span class="token punctuation">,</span> setUser<span class="token punctuation">]</span> <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">useState</span><span class="token generic class-name"><span class="token operator">&lt;</span>User <span class="token operator">|</span> <span class="token keyword">null</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="useref-t" tabindex="-1"><a class="header-anchor" href="#useref-t" aria-hidden="true">#</a> <code>useRef&lt;T&gt;</code></h3><p>\u5F53\u521D\u59CB\u503C\u4E3A null \u65F6\uFF0C\u6709\u4E24\u79CD\u521B\u5EFA\u65B9\u5F0F:</p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">const</span> ref1 <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">useRef</span><span class="token generic class-name"><span class="token operator">&lt;</span>HTMLInputElement<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> ref2 <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">useRef</span><span class="token generic class-name"><span class="token operator">&lt;</span>HTMLInputElement <span class="token operator">|</span> <span class="token keyword">null</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u4E24\u79CD\u7684\u533A\u522B\u5728\u4E8E\uFF1A</p><ul><li>\u7B2C\u4E00\u79CD\u65B9\u5F0F\u7684 ref1.current \u662F\u53EA\u8BFB\u7684\uFF08read-only\uFF09\uFF0C\u5E76\u4E14\u53EF\u4EE5\u4F20\u9012\u7ED9\u5185\u7F6E\u7684 ref \u5C5E\u6027\uFF0C\u7ED1\u5B9A DOM \u5143\u7D20 \uFF1B</li><li>\u7B2C\u4E8C\u79CD\u65B9\u5F0F\u7684 ref2.current \u662F\u53EF\u53D8\u7684\uFF08\u7C7B\u4F3C\u4E8E\u58F0\u660E\u7C7B\u7684\u6210\u5458\u53D8\u91CF\uFF09</li></ul><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">const</span> ref <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">useRef</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
React<span class="token punctuation">.</span><span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    ref<span class="token punctuation">.</span>current <span class="token operator">+=</span> <span class="token number">1</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u4E24\u79CD\u65B9\u5F0F\u5728\u4F7F\u7528\u65F6\uFF0C\u90FD\u9700\u8981\u5BF9\u7C7B\u578B\u8FDB\u884C\u68C0\u67E5:</p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">const</span> <span class="token function-variable function">onButtonClick</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    ref1<span class="token punctuation">.</span>current<span class="token operator">?.</span><span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    ref2<span class="token punctuation">.</span>current<span class="token operator">?.</span><span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u67D0\u79CD\u60C5\u51B5\u4E0B\uFF0C\u53EF\u4EE5\u7701\u53BB\u7C7B\u578B\u68C0\u67E5\uFF0C\u901A\u8FC7\u6DFB\u52A0 <strong>! \u65AD\u8A00\uFF0C\u4E0D\u63A8\u8350</strong>\uFF1A</p>`,26),C=n("div",{class:"language-tsx ext-tsx line-numbers-mode"},[n("pre",{class:"language-tsx"},[n("code",null,[n("span",{class:"token comment"},"// Bad"),s(`
`),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"MyComponent"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"const"),s(" ref1 "),n("span",{class:"token operator"},"="),s(" React"),n("span",{class:"token punctuation"},"."),n("span",{class:"token generic-function"},[n("span",{class:"token function"},"useRef"),n("span",{class:"token generic class-name"},[n("span",{class:"token operator"},"<"),s("HTMLDivElement"),n("span",{class:"token operator"},">")])]),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"null"),n("span",{class:"token operator"},"!"),n("span",{class:"token punctuation"},")"),s(`
    React`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"useEffect"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token comment"},"//  \u4E0D\u9700\u8981\u505A\u7C7B\u578B\u68C0\u67E5\uFF0C\u9700\u8981\u4EBA\u4E3A\u4FDD\u8BC1ref1.current.focus\u4E00\u5B9A\u5B58\u5728"),s(`
        `),n("span",{class:"token function"},"doSomethingWith"),n("span",{class:"token punctuation"},"("),s("ref1"),n("span",{class:"token punctuation"},"."),s("current"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"focus"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("div")]),s(),n("span",{class:"token attr-name"},"ref"),n("span",{class:"token script language-javascript"},[n("span",{class:"token script-punctuation punctuation"},"="),n("span",{class:"token punctuation"},"{"),s("ref1"),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token punctuation"},">")]),n("span",{class:"token plain-text"}," etc "),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("div")]),n("span",{class:"token punctuation"},">")]),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),P=p(`<h3 id="useeffect" tabindex="-1"><a class="header-anchor" href="#useeffect" aria-hidden="true">#</a> useEffect</h3><p>useEffect \u9700\u8981\u6CE8\u610F\u56DE\u8C03\u51FD\u6570\u7684\u8FD4\u56DE\u503C\u53EA\u80FD\u662F\u51FD\u6570\u6216\u8005 undefined</p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// undefined\u4F5C\u4E3A\u56DE\u8C03\u51FD\u6570\u7684\u8FD4\u56DE\u503C</span>
    React<span class="token punctuation">.</span><span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token comment">// do something...</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token comment">// \u8FD4\u56DE\u503C\u662F\u4E00\u4E2A\u51FD\u6570</span>
    React<span class="token punctuation">.</span><span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token comment">// do something...</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="usememo-t-usecallback-t" tabindex="-1"><a class="header-anchor" href="#usememo-t-usecallback-t" aria-hidden="true">#</a> <code>useMemo&lt;T&gt; / useCallback&lt;T&gt;</code></h3><p>useMemo \u548C useCallback \u90FD\u53EF\u4EE5\u76F4\u63A5\u4ECE\u5B83\u4EEC\u8FD4\u56DE\u7684\u503C\u4E2D\u63A8\u65AD\u51FA\u5B83\u4EEC\u7684\u7C7B\u578B</p><p>useCallback \u7684\u53C2\u6570\u5FC5\u987B\u5236\u5B9A\u7C7B\u578B\uFF0C\u5426\u5219 ts \u4E0D\u4F1A\u62A5\u9519\uFF0C\u9ED8\u8BA4\u6307\u5B9A\u4E3A any</p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">const</span> value <span class="token operator">=</span> <span class="token number">10</span>
<span class="token comment">// \u81EA\u52A8\u63A8\u65AD\u8FD4\u56DE\u503C\u4E3A number</span>
<span class="token keyword">const</span> result <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">useMemo</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> value <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>value<span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token comment">// \u81EA\u52A8\u63A8\u65AD (value: number) =&gt; number</span>
<span class="token keyword">const</span> multiply <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">useCallback</span><span class="token punctuation">(</span><span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> value <span class="token operator">*</span> multiplier<span class="token punctuation">,</span> <span class="token punctuation">[</span>
    multiplier<span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u540C\u65F6\u4E5F\u652F\u6301\u4F20\u5165\u6CDB\u578B\uFF0C useMemo \u7684\u6CDB\u578B\u6307\u5B9A\u4E86\u8FD4\u56DE\u503C\u7C7B\u578B\uFF0CuseCallback \u7684\u6CDB\u578B\u6307\u5B9A\u4E86\u53C2\u6570\u7C7B\u578B</p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token comment">// \u4E5F\u53EF\u4EE5\u663E\u5F0F\u7684\u6307\u5B9A\u8FD4\u56DE\u503C\u7C7B\u578B\uFF0C\u8FD4\u56DE\u503C\u4E0D\u4E00\u81F4\u4F1A\u62A5\u9519</span>
<span class="token keyword">const</span> result <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">useMemo</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token comment">// \u7C7B\u578B\u201C() =&gt; number\u201D\u7684\u53C2\u6570\u4E0D\u80FD\u8D4B\u7ED9\u7C7B\u578B\u201C() =&gt; string\u201D\u7684\u53C2\u6570\u3002</span>
<span class="token keyword">const</span> handleChange <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">useCallback</span><span class="token generic class-name"><span class="token operator">&lt;</span>
    React<span class="token punctuation">.</span>ChangeEventHandler<span class="token operator">&lt;</span>HTMLInputElement<span class="token operator">&gt;</span>
<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>evt <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>evt<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u81EA\u5B9A\u4E49-hooks" tabindex="-1"><a class="header-anchor" href="#\u81EA\u5B9A\u4E49-hooks" aria-hidden="true">#</a> \u81EA\u5B9A\u4E49 Hooks</h3><p>\u9700\u8981\u6CE8\u610F\uFF0C\u81EA\u5B9A\u4E49 Hook \u7684\u8FD4\u56DE\u503C\u5982\u679C\u662F<strong>\u6570\u7EC4\u7C7B\u578B</strong>\uFF0CTS \u4F1A\u81EA\u52A8\u63A8\u5BFC\u4E3A <strong>Union</strong> \u7C7B\u578B\uFF0C\u800C\u6211\u4EEC\u5B9E\u9645\u9700\u8981\u7684\u662F\u6570\u7EC4\u91CC\u91CC\u6BCF\u4E00\u9879\u7684\u5177\u4F53\u7C7B\u578B\uFF0C\u9700\u8981\u624B\u52A8\u6DFB\u52A0 <strong>const \u65AD\u8A00</strong> \u8FDB\u884C\u5904\u7406\uFF1A</p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">function</span> <span class="token function">useLoading</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">[</span>isLoading<span class="token punctuation">,</span> setState<span class="token punctuation">]</span> <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span>
    <span class="token keyword">const</span> <span class="token function-variable function">load</span> <span class="token operator">=</span> <span class="token punctuation">(</span>aPromise<span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">setState</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> aPromise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u5B9E\u9645\u9700\u8981: [boolean, typeof load] \u7C7B\u578B</span>
    <span class="token comment">// \u800C\u4E0D\u662F\u81EA\u52A8\u63A8\u5BFC\u7684\uFF1A(boolean | typeof load)[]</span>
    <span class="token keyword">return</span> <span class="token punctuation">[</span>isLoading<span class="token punctuation">,</span> load<span class="token punctuation">]</span> <span class="token keyword">as</span> <span class="token keyword">const</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,12),_={href:"https://github.com/babel/babel/issues/9800",target:"_blank",rel:"noopener noreferrer"},S=p(`<div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">useLoading</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token builtin">boolean</span><span class="token punctuation">,</span>
    <span class="token punctuation">(</span>aPromise<span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span>
    <span class="token punctuation">]</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">[</span>isLoading<span class="token punctuation">,</span> setState<span class="token punctuation">]</span> <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span>
    <span class="token keyword">const</span> <span class="token function-variable function">load</span> <span class="token operator">=</span> <span class="token punctuation">(</span>aPromise<span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">setState</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> aPromise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token punctuation">[</span>isLoading<span class="token punctuation">,</span> load<span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u6709\u5927\u91CF\u7684\u81EA\u5B9A\u4E49 Hook \u9700\u8981\u5904\u7406\uFF0C\u8FD9\u91CC\u6709\u4E00\u4E2A\u65B9\u4FBF\u7684\u5DE5\u5177\u65B9\u6CD5\u53EF\u4EE5\u5904\u7406 tuple \u8FD4\u56DE\u503C:</p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">tuplify</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token operator">...</span>elements<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> elements
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">useLoading</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">[</span>isLoading<span class="token punctuation">,</span> setState<span class="token punctuation">]</span> <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span>
    <span class="token keyword">const</span> <span class="token function-variable function">load</span> <span class="token operator">=</span> <span class="token punctuation">(</span>aPromise<span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">setState</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> aPromise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// (boolean | typeof load)[]</span>
    <span class="token keyword">return</span> <span class="token punctuation">[</span>isLoading<span class="token punctuation">,</span> load<span class="token punctuation">]</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">useTupleLoading</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">[</span>isLoading<span class="token punctuation">,</span> setState<span class="token punctuation">]</span> <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span>
    <span class="token keyword">const</span> <span class="token function-variable function">load</span> <span class="token operator">=</span> <span class="token punctuation">(</span>aPromise<span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">setState</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> aPromise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// [boolean, typeof load]</span>
    <span class="token keyword">return</span> <span class="token function">tuplify</span><span class="token punctuation">(</span>isLoading<span class="token punctuation">,</span> load<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u9ED8\u8BA4\u5C5E\u6027-defaultprops" tabindex="-1"><a class="header-anchor" href="#\u9ED8\u8BA4\u5C5E\u6027-defaultprops" aria-hidden="true">#</a> \u9ED8\u8BA4\u5C5E\u6027 defaultProps</h2>`,4),H=n("strong",null,"\u4E0D\u63A8\u8350",-1),A={href:"https://twitter.com/hswolff/status/1133759319571345408",target:"_blank",rel:"noopener noreferrer"},F=p(`<p>\u63A8\u8350\u65B9\u5F0F\uFF1A\u4F7F\u7528<strong>\u9ED8\u8BA4\u53C2\u6570\u503C</strong>\u6765\u4EE3\u66FF<strong>\u9ED8\u8BA4\u5C5E\u6027</strong>\uFF1A</p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">type</span> <span class="token class-name">GreetProps</span> <span class="token operator">=</span> <span class="token punctuation">{</span> age<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">}</span>
<span class="token keyword">const</span> <span class="token function-variable function">Greet</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> age <span class="token operator">=</span> <span class="token number">21</span> <span class="token punctuation">}</span><span class="token operator">:</span> GreetProps<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">/* ... */</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="defaultprops-\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#defaultprops-\u7C7B\u578B" aria-hidden="true">#</a> defaultProps \u7C7B\u578B</h3>`,3),q={href:"https://www.typescriptlang.org/docs/handbook/release-notes/typescript-3-0.html",target:"_blank",rel:"noopener noreferrer"},j={href:"https://github.com/typescript-cheatsheets/react-typescript-cheatsheet/issues/61",target:"_blank",rel:"noopener noreferrer"},M=p(`<div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">type</span> <span class="token class-name">IProps</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    name<span class="token operator">:</span> <span class="token builtin">string</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> defaultProps <span class="token operator">=</span> <span class="token punctuation">{</span>
    age<span class="token operator">:</span> <span class="token number">25</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u7C7B\u578B\u5B9A\u4E49</span>
<span class="token keyword">type</span> <span class="token class-name">GreetProps</span> <span class="token operator">=</span> IProps <span class="token operator">&amp;</span> <span class="token keyword">typeof</span> defaultProps
<span class="token keyword">const</span> <span class="token function-variable function">Greet</span> <span class="token operator">=</span> <span class="token punctuation">(</span>props<span class="token operator">:</span> GreetProps<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
Greet<span class="token punctuation">.</span>defaultProps <span class="token operator">=</span> defaultProps
<span class="token comment">// \u4F7F\u7528</span>
<span class="token keyword">const</span> <span class="token function-variable function">TestComponent</span> <span class="token operator">=</span> <span class="token punctuation">(</span>props<span class="token operator">:</span> React<span class="token punctuation">.</span>ComponentProps<span class="token operator">&lt;</span><span class="token keyword">typeof</span> Greet<span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token punctuation">/&gt;</span></span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> el <span class="token operator">=</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">TestComponent</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>foo<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="types-or-interfaces" tabindex="-1"><a class="header-anchor" href="#types-or-interfaces" aria-hidden="true">#</a> Types or Interfaces</h2><p>\u5728\u65E5\u5E38\u7684 react \u5F00\u53D1\u4E2D <strong>interface</strong> \u548C <strong>type</strong> \u7684\u4F7F\u7528\u573A\u666F\u5341\u5206\u7C7B\u4F3C</p><p><strong>implements</strong> \u4E0E <strong>extends</strong> \u9759\u6001\u64CD\u4F5C\uFF0C\u4E0D\u5141\u8BB8\u5B58\u5728\u4E00\u79CD\u6216\u53E6\u4E00\u79CD\u5B9E\u73B0\u7684\u60C5\u51B5\uFF0C\u6240\u4EE5<strong>\u4E0D\u652F\u6301\u4F7F\u7528\u8054\u5408\u7C7B\u578B</strong>\uFF1A</p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">class</span> <span class="token class-name">Point</span> <span class="token punctuation">{</span>
    x<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=</span> <span class="token number">2</span>
    y<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=</span> <span class="token number">3</span>
<span class="token punctuation">}</span>
<span class="token keyword">interface</span> <span class="token class-name">IShape</span> <span class="token punctuation">{</span>
    <span class="token function">area</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span>
<span class="token punctuation">}</span>
<span class="token keyword">type</span> <span class="token class-name">Perimeter</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token function">perimeter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span>
<span class="token punctuation">}</span>
<span class="token keyword">type</span> <span class="token class-name">RectangleShape</span> <span class="token operator">=</span> <span class="token punctuation">(</span>IShape <span class="token operator">|</span> Perimeter<span class="token punctuation">)</span> <span class="token operator">&amp;</span> Point

<span class="token keyword">class</span> <span class="token class-name">Rectangle</span> <span class="token keyword">implements</span> <span class="token class-name">RectangleShape</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u7C7B\u53EA\u80FD\u5B9E\u73B0\u5177\u6709\u9759\u6001\u5DF2\u77E5\u6210\u5458\u7684\u5BF9\u8C61\u7C7B\u578B\u6216\u5BF9\u8C61\u7C7B\u578B\u7684\u4EA4\u96C6\u3002</span>
    x <span class="token operator">=</span> <span class="token number">2</span>
    y <span class="token operator">=</span> <span class="token number">3</span>
    <span class="token function">area</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>y
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">interface</span> <span class="token class-name">ShapeOrPerimeter</span> <span class="token keyword">extends</span> <span class="token class-name">RectangleShape</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token comment">// \u63A5\u53E3\u53EA\u80FD\u6269\u5C55\u4F7F\u7528\u9759\u6001\u5DF2\u77E5\u6210\u5458\u7684\u5BF9\u8C61\u7C7B\u578B\u6216\u5BF9\u8C61\u7C7B\u578B\u7684\u4EA4\u96C6</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u4F7F\u7528-type-\u8FD8\u662F-interface" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528-type-\u8FD8\u662F-interface" aria-hidden="true">#</a> \u4F7F\u7528 Type \u8FD8\u662F Interface\uFF1F</h3><ul><li>\u6709\u51E0\u79CD\u5E38\u7528\u89C4\u5219\uFF1A</li></ul><ul><li>\u5728\u5B9A\u4E49\u516C\u5171 API \u65F6(\u6BD4\u5982\u7F16\u8F91\u4E00\u4E2A\u5E93\uFF09\u4F7F\u7528 interface\uFF0C\u8FD9\u6837\u53EF\u4EE5\u65B9\u4FBF\u4F7F\u7528\u8005\u7EE7\u627F\u63A5\u53E3</li><li>\u5728\u5B9A\u4E49\u7EC4\u4EF6\u5C5E\u6027\uFF08Props\uFF09\u548C\u72B6\u6001\uFF08State\uFF09\u65F6\uFF0C\u5EFA\u8BAE\u4F7F\u7528 type\uFF0C\u56E0\u4E3A type\u7684\u7EA6\u675F\u6027\u66F4\u5F3A</li></ul><p>interface \u548C type \u5728 ts \u4E2D\u662F\u4E24\u4E2A\u4E0D\u540C\u7684\u6982\u5FF5\uFF0C\u4F46\u5728 React \u5927\u90E8\u5206\u4F7F\u7528\u7684 case \u4E2D\uFF0Cinterface \u548C type \u53EF\u4EE5\u8FBE\u5230\u76F8\u540C\u7684\u529F\u80FD\u6548\u679C\uFF0Ctype \u548C interface \u6700\u5927\u7684\u533A\u522B\u662F\uFF1A</p><ul><li>type \u7C7B\u578B\u4E0D\u80FD\u4E8C\u6B21\u7F16\u8F91\uFF0C\u800C interface \u53EF\u4EE5\u968F\u65F6\u6269\u5C55</li></ul><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">interface</span> <span class="token class-name">Animal</span> <span class="token punctuation">{</span>
    name<span class="token operator">:</span> <span class="token builtin">string</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u53EF\u4EE5\u7EE7\u7EED\u5728\u539F\u6709\u5C5E\u6027\u57FA\u7840\u4E0A\uFF0C\u6DFB\u52A0\u65B0\u5C5E\u6027\uFF1Acolor</span>
<span class="token keyword">interface</span> <span class="token class-name">Animal</span> <span class="token punctuation">{</span>
    color<span class="token operator">:</span> <span class="token builtin">string</span>
<span class="token punctuation">}</span>
<span class="token comment">/********************************/</span>
<span class="token keyword">type</span> <span class="token class-name">Animal</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    name<span class="token operator">:</span> <span class="token builtin">string</span>
<span class="token punctuation">}</span>
<span class="token comment">// type\u7C7B\u578B\u4E0D\u652F\u6301\u5C5E\u6027\u6269\u5C55</span>
<span class="token comment">// Error: Duplicate identifier &#39;Animal&#39;</span>
<span class="token keyword">type</span> <span class="token class-name">Animal</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    color<span class="token operator">:</span> <span class="token builtin">string</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u83B7\u53D6\u672A\u5BFC\u51FA\u7684-type" tabindex="-1"><a class="header-anchor" href="#\u83B7\u53D6\u672A\u5BFC\u51FA\u7684-type" aria-hidden="true">#</a> \u83B7\u53D6\u672A\u5BFC\u51FA\u7684 Type</h3><p>\u67D0\u4E9B\u573A\u666F\u4E0B\u6211\u4EEC\u5728\u5F15\u5165\u7B2C\u4E09\u65B9\u7684\u5E93\u65F6\u4F1A\u53D1\u73B0\u60F3\u8981\u4F7F\u7528\u7684\u7EC4\u4EF6\u5E76\u6CA1\u6709\u5BFC\u51FA\u6211\u4EEC\u9700\u8981\u7684\u7EC4\u4EF6\u53C2\u6570\u7C7B\u578B\u6216\u8005\u8FD4\u56DE\u503C\u7C7B\u578B\uFF0C\u8FD9\u65F6\u5019\u6211\u4EEC\u53EF\u4EE5\u901A\u8FC7 ComponentProps/ ReturnType \u6765\u83B7\u53D6\u5230\u60F3\u8981\u7684\u7C7B\u578B\u3002</p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token comment">// \u83B7\u53D6\u53C2\u6570\u7C7B\u578B</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Button <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;library&#39;</span> <span class="token comment">// \u4F46\u662F\u672A\u5BFC\u51FAprops type</span>
<span class="token class-name"><span class="token keyword">type</span></span> ButtonProps <span class="token operator">=</span> React<span class="token punctuation">.</span>ComponentProps<span class="token operator">&lt;</span><span class="token keyword">typeof</span> Button<span class="token operator">&gt;</span> <span class="token comment">// \u83B7\u53D6props</span>
<span class="token keyword">type</span> <span class="token class-name">AlertButtonProps</span> <span class="token operator">=</span> Omit<span class="token operator">&lt;</span>ButtonProps<span class="token punctuation">,</span> <span class="token string">&#39;onClick&#39;</span><span class="token operator">&gt;</span> <span class="token comment">// \u53BB\u9664onClick</span>
<span class="token keyword">const</span> AlertButton<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token constant">FC</span><span class="token operator">&lt;</span>AlertButtonProps<span class="token operator">&gt;</span> <span class="token operator">=</span> props <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token comment">// \u83B7\u53D6\u8FD4\u56DE\u503C\u7C7B\u578B</span>
<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span> baz<span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">type</span> <span class="token class-name">FooReturn</span> <span class="token operator">=</span> ReturnType<span class="token operator">&lt;</span><span class="token keyword">typeof</span> foo<span class="token operator">&gt;</span> <span class="token comment">// { baz: number }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="props" tabindex="-1"><a class="header-anchor" href="#props" aria-hidden="true">#</a> Props</h2><p>\u901A\u5E38\u6211\u4EEC\u4F7F\u7528 <strong>type</strong> \u6765\u5B9A\u4E49 <strong>Props</strong>\uFF0C\u4E3A\u4E86\u63D0\u9AD8\u53EF\u7EF4\u62A4\u6027\u548C\u4EE3\u7801\u53EF\u8BFB\u6027\uFF0C\u5728\u65E5\u5E38\u7684\u5F00\u53D1\u8FC7\u7A0B\u4E2D\u6211\u4EEC\u5E0C\u671B\u53EF\u4EE5\u6DFB\u52A0\u6E05\u6670\u7684\u6CE8\u91CA\u3002</p><p>\u73B0\u5728\u6709\u8FD9\u6837\u4E00\u4E2A <strong>type</strong></p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">type</span> <span class="token class-name">OtherProps</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    name<span class="token operator">:</span> <span class="token builtin">string</span>
    color<span class="token operator">:</span> <span class="token builtin">string</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u4F7F\u7528\u7684\u8FC7\u7A0B\u4E2D\uFF0Chover \u5BF9\u5E94\u7C7B\u578B\u4F1A\u6709\u5982\u4E0B\u5C55\u793A</p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token comment">// type OtherProps = {</span>
<span class="token comment">//   name: string;</span>
<span class="token comment">//   color: string;</span>
<span class="token comment">// }</span>
<span class="token keyword">const</span> OtherHeading<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token constant">FC</span><span class="token operator">&lt;</span>OtherProps<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> name<span class="token punctuation">,</span> color <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">My Website Heading</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u589E\u52A0\u76F8\u5BF9\u8BE6\u7EC6\u7684\u6CE8\u91CA\uFF0C\u4F7F\u7528\u65F6\u4F1A\u66F4\u6E05\u6670\uFF0C\u9700\u8981\u6CE8\u610F\uFF0C<strong>\u6CE8\u91CA\u9700\u8981\u4F7F\u7528 /**/</strong> \uFF0C <strong>// \u65E0\u6CD5\u88AB vscode \u8BC6\u522B</strong></p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token comment">// Great</span>
<span class="token comment">/**
 * @param color color
 * @param children children
 * @param onClick onClick
 */</span>

<span class="token keyword">type</span> <span class="token class-name">Props</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token comment">/** color */</span>
    color<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span>
    <span class="token comment">/** children */</span>
    children<span class="token operator">:</span> React<span class="token punctuation">.</span>ReactNode
    <span class="token comment">/** onClick */</span>
    <span class="token function-variable function">onClick</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>
<span class="token punctuation">}</span>

<span class="token comment">// type Props</span>
<span class="token comment">// @param color \u2014 color</span>
<span class="token comment">// @param children \u2014 children</span>
<span class="token comment">// @param onClick \u2014 onClick</span>
<span class="token keyword">const</span> Button<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token constant">FC</span><span class="token operator">&lt;</span>Props<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> children<span class="token punctuation">,</span> color <span class="token operator">=</span> <span class="token string">&#39;tomato&#39;</span><span class="token punctuation">,</span> onClick <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> backgroundColor<span class="token operator">:</span> color <span class="token punctuation">}</span><span class="token punctuation">}</span></span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>onClick<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
        </span><span class="token punctuation">{</span>children<span class="token punctuation">}</span><span class="token plain-text">
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
    <span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5E38\u7528-props-ts-\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u5E38\u7528-props-ts-\u7C7B\u578B" aria-hidden="true">#</a> \u5E38\u7528 Props ts \u7C7B\u578B</h2><h3 id="\u57FA\u7840\u5C5E\u6027\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u57FA\u7840\u5C5E\u6027\u7C7B\u578B" aria-hidden="true">#</a> \u57FA\u7840\u5C5E\u6027\u7C7B\u578B</h3><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">type</span> <span class="token class-name">AppProps</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    message<span class="token operator">:</span> <span class="token builtin">string</span>
    count<span class="token operator">:</span> <span class="token builtin">number</span>
    disabled<span class="token operator">:</span> <span class="token builtin">boolean</span>
    <span class="token comment">/** array of a type! */</span>
    names<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token comment">/** string literals to specify exact string values, with a union type to join them together */</span>
    status<span class="token operator">:</span> <span class="token string">&#39;waiting&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;success&#39;</span>
    <span class="token comment">/** \u4EFB\u610F\u9700\u8981\u4F7F\u7528\u5176\u5C5E\u6027\u7684\u5BF9\u8C61\uFF08\u4E0D\u63A8\u8350\u4F7F\u7528\uFF0C\u4F46\u662F\u4F5C\u4E3A\u5360\u4F4D\u5F88\u6709\u7528\uFF09 */</span>
    obj<span class="token operator">:</span> object
    <span class="token comment">/** \u4F5C\u7528\u548C\`object\`\u51E0\u4E4E\u4E00\u6837\uFF0C\u548C \`Object\`\u5B8C\u5168\u4E00\u6837 */</span>
    obj2<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token comment">/** \u5217\u51FA\u5BF9\u8C61\u5168\u90E8\u6570\u91CF\u7684\u5C5E\u6027 \uFF08\u63A8\u8350\u4F7F\u7528\uFF09 */</span>
    obj3<span class="token operator">:</span> <span class="token punctuation">{</span>
        id<span class="token operator">:</span> <span class="token builtin">string</span>
        title<span class="token operator">:</span> <span class="token builtin">string</span>
    <span class="token punctuation">}</span>
    <span class="token comment">/** array of objects! (common) */</span>
    objArr<span class="token operator">:</span> <span class="token punctuation">{</span>
        id<span class="token operator">:</span> <span class="token builtin">string</span>
        title<span class="token operator">:</span> <span class="token builtin">string</span>
    <span class="token punctuation">}</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token comment">/** \u4EFB\u610F\u6570\u91CF\u5C5E\u6027\u7684\u5B57\u5178\uFF0C\u5177\u6709\u76F8\u540C\u7C7B\u578B*/</span>
    dict1<span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token punctuation">[</span>key<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span> MyTypeHere
    <span class="token punctuation">}</span>
    <span class="token comment">/** \u4F5C\u7528\u548Cdict1\u5B8C\u5168\u76F8\u540C */</span>
    dict2<span class="token operator">:</span> Record<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> MyTypeHere<span class="token operator">&gt;</span>
    <span class="token comment">/** \u4EFB\u610F\u5B8C\u5168\u4E0D\u4F1A\u8C03\u7528\u7684\u51FD\u6570 */</span>
    onSomething<span class="token operator">:</span> <span class="token builtin">Function</span>
    <span class="token comment">/** \u6CA1\u6709\u53C2\u6570&amp;\u8FD4\u56DE\u503C\u7684\u51FD\u6570 */</span>
    <span class="token function-variable function">onClick</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>
    <span class="token comment">/** \u643A\u5E26\u53C2\u6570\u7684\u51FD\u6570 */</span>
    <span class="token function-variable function">onChange</span><span class="token operator">:</span> <span class="token punctuation">(</span>id<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>
    <span class="token comment">/** \u643A\u5E26\u70B9\u51FB\u4E8B\u4EF6\u7684\u51FD\u6570 */</span>
    <span class="token function">onClick</span><span class="token punctuation">(</span>event<span class="token operator">:</span> React<span class="token punctuation">.</span>MouseEvent<span class="token operator">&lt;</span>HTMLButtonElement<span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span>
    <span class="token comment">/** \u53EF\u9009\u7684\u5C5E\u6027 */</span>
    optional<span class="token operator">?</span><span class="token operator">:</span> OptionalType
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5E38\u7528-react-\u5C5E\u6027\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u5E38\u7528-react-\u5C5E\u6027\u7C7B\u578B" aria-hidden="true">#</a> \u5E38\u7528 React \u5C5E\u6027\u7C7B\u578B</h3><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">export</span> <span class="token keyword">declare</span> <span class="token keyword">interface</span> <span class="token class-name">AppBetterProps</span> <span class="token punctuation">{</span>
    children<span class="token operator">:</span> React<span class="token punctuation">.</span>ReactNode <span class="token comment">// \u4E00\u822C\u60C5\u51B5\u4E0B\u63A8\u8350\u4F7F\u7528\uFF0C\u652F\u6301\u6240\u6709\u7C7B\u578B Great</span>
    <span class="token function-variable function">functionChildren</span><span class="token operator">:</span> <span class="token punctuation">(</span>name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> React<span class="token punctuation">.</span>ReactNode
    style<span class="token operator">?</span><span class="token operator">:</span> React<span class="token punctuation">.</span>CSSProperties <span class="token comment">// \u4F20\u9012style\u5BF9\u8C61</span>
    onChange<span class="token operator">?</span><span class="token operator">:</span> React<span class="token punctuation">.</span>FormEventHandler<span class="token operator">&lt;</span>HTMLInputElement<span class="token operator">&gt;</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">declare</span> <span class="token keyword">interface</span> <span class="token class-name">AppProps</span> <span class="token punctuation">{</span>
    children1<span class="token operator">:</span> <span class="token constant">JSX</span><span class="token punctuation">.</span>Element <span class="token comment">// \u5DEE, \u4E0D\u652F\u6301\u6570\u7EC4</span>
    children2<span class="token operator">:</span> <span class="token constant">JSX</span><span class="token punctuation">.</span>Element <span class="token operator">|</span> <span class="token constant">JSX</span><span class="token punctuation">.</span>Element<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token comment">// \u4E00\u822C, \u4E0D\u652F\u6301\u5B57\u7B26\u4E32</span>
    children3<span class="token operator">:</span> React<span class="token punctuation">.</span>ReactChildren <span class="token comment">// \u5FFD\u7565\u547D\u540D\uFF0C\u4E0D\u662F\u4E00\u4E2A\u5408\u9002\u7684\u7C7B\u578B\uFF0C\u5DE5\u5177\u7C7B\u7C7B\u578B</span>
    children4<span class="token operator">:</span> React<span class="token punctuation">.</span>ReactChild<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token comment">// \u5F88\u597D</span>
    children<span class="token operator">:</span> React<span class="token punctuation">.</span>ReactNode <span class="token comment">// \u6700\u4F73\uFF0C\u652F\u6301\u6240\u6709\u7C7B\u578B \u63A8\u8350\u4F7F\u7528</span>
    <span class="token function-variable function">functionChildren</span><span class="token operator">:</span> <span class="token punctuation">(</span>name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> React<span class="token punctuation">.</span>ReactNode <span class="token comment">// recommended function as a child render prop type</span>
    <span class="token class-name">style</span><span class="token operator">?</span><span class="token operator">:</span> React<span class="token punctuation">.</span>CSSProperties <span class="token comment">// \u4F20\u9012style\u5BF9\u8C61</span>
    onChange<span class="token operator">?</span><span class="token operator">:</span> React<span class="token punctuation">.</span>FormEventHandler<span class="token operator">&lt;</span>HTMLInputElement<span class="token operator">&gt;</span> <span class="token comment">// \u8868\u5355\u4E8B\u4EF6, \u6CDB\u578B\u53C2\u6570\u662Fevent.target\u7684\u7C7B\u578B</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="forms-and-events" tabindex="-1"><a class="header-anchor" href="#forms-and-events" aria-hidden="true">#</a> Forms and Events</h2><h3 id="onchange" tabindex="-1"><a class="header-anchor" href="#onchange" aria-hidden="true">#</a> onChange</h3><p>change \u4E8B\u4EF6\uFF0C\u6709\u4E24\u4E2A\u5B9A\u4E49\u53C2\u6570\u7C7B\u578B\u7684\u65B9\u6CD5\u3002</p><p>\u7B2C\u4E00\u79CD\u65B9\u6CD5\u4F7F\u7528\u63A8\u65AD\u7684\u65B9\u6CD5\u7B7E\u540D\uFF08\u4F8B\u5982\uFF1A<code>React.FormEvent &lt;HTMLInputElement&gt; \uFF1Avoid</code>\uFF09</p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> React <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span>

<span class="token keyword">type</span> <span class="token class-name">changeFn</span> <span class="token operator">=</span> <span class="token punctuation">(</span>e<span class="token operator">:</span> React<span class="token punctuation">.</span>FormEvent<span class="token operator">&lt;</span>HTMLInputElement<span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>
<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">[</span>state<span class="token punctuation">,</span> setState<span class="token punctuation">]</span> <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">const</span> onChange<span class="token operator">:</span> <span class="token function-variable function">changeFn</span> <span class="token operator">=</span> e <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">setState</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>currentTarget<span class="token punctuation">.</span>value<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>state<span class="token punctuation">}</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>onChange<span class="token punctuation">}</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text">
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7B2C\u4E8C\u79CD\u65B9\u6CD5\u5F3A\u5236\u4F7F\u7528 @types / react \u63D0\u4F9B\u7684\u59D4\u6258\u7C7B\u578B\uFF0C\u4E24\u79CD\u65B9\u6CD5\u5747\u53EF\u3002</p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> React <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span>
<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">[</span>state<span class="token punctuation">,</span> setState<span class="token punctuation">]</span> <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">const</span> onChange<span class="token operator">:</span> React<span class="token punctuation">.</span>ChangeEventHandler<span class="token operator">&lt;</span>HTMLInputElement<span class="token operator">&gt;</span> <span class="token operator">=</span> e <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">setState</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>currentTarget<span class="token punctuation">.</span>value<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>state<span class="token punctuation">}</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>onChange<span class="token punctuation">}</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text">
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="onsubmit" tabindex="-1"><a class="header-anchor" href="#onsubmit" aria-hidden="true">#</a> onSubmit</h2><p>\u5982\u679C\u4E0D\u592A\u5173\u5FC3\u4E8B\u4EF6\u7684\u7C7B\u578B\uFF0C\u53EF\u4EE5\u76F4\u63A5\u4F7F\u7528 <strong>React.SyntheticEvent</strong>\uFF0C\u5982\u679C\u76EE\u6807\u8868\u5355\u6709\u60F3\u8981\u8BBF\u95EE\u7684\u81EA\u5B9A\u4E49\u547D\u540D\u8F93\u5165\uFF0C\u53EF\u4EE5\u4F7F\u7528\u7C7B\u578B\u6269\u5C55</p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> React <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span>

<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token function-variable function">onSubmit</span> <span class="token operator">=</span> <span class="token punctuation">(</span>e<span class="token operator">:</span> React<span class="token punctuation">.</span>SyntheticEvent<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        e<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">const</span> target <span class="token operator">=</span> e<span class="token punctuation">.</span>target <span class="token keyword">as</span> <span class="token keyword">typeof</span> e<span class="token punctuation">.</span>target <span class="token operator">&amp;</span> <span class="token punctuation">{</span>
        password<span class="token operator">:</span> <span class="token punctuation">{</span> value<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token comment">// \u7C7B\u578B\u6269\u5C55</span>
        <span class="token keyword">const</span> password <span class="token operator">=</span> target<span class="token punctuation">.</span>password<span class="token punctuation">.</span>value
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">onSubmit</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>onSubmit<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
            Password:
            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>password<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>password<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text">
            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>submit<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Log in<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text">
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span>
    <span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="operators" tabindex="-1"><a class="header-anchor" href="#operators" aria-hidden="true">#</a> Operators</h2><p>\u5E38\u7528\u7684\u64CD\u4F5C\u7B26\uFF0C\u5E38\u7528\u4E8E\u7C7B\u578B\u5224\u65AD</p><ul><li>typeof and instanceof: \u7528\u4E8E\u7C7B\u578B\u533A\u5206</li><li>keyof: \u83B7\u53D6 object \u7684 key</li><li>O[K]: \u5C5E\u6027\u67E5\u627E</li><li></li><li>+ or - or readonly or ?: \u52A0\u6CD5\u3001\u51CF\u6CD5\u3001\u53EA\u8BFB\u548C\u53EF\u9009\u4FEE\u9970\u7B26</li><li>x ? Y : Z: \u7528\u4E8E\u6CDB\u578B\u7C7B\u578B\u3001\u7C7B\u578B\u522B\u540D\u3001\u51FD\u6570\u53C2\u6570\u7C7B\u578B\u7684\u6761\u4EF6\u7C7B\u578B</li><li>!: \u53EF\u7A7A\u7C7B\u578B\u7684\u7A7A\u65AD\u8A00</li><li>as: \u7C7B\u578B\u65AD\u8A00 is: \u51FD\u6570\u8FD4\u56DE\u7C7B\u578B\u7684\u7C7B\u578B\u4FDD\u62A4</li></ul><h2 id="tips" tabindex="-1"><a class="header-anchor" href="#tips" aria-hidden="true">#</a> Tips</h2><h3 id="\u4F7F\u7528\u67E5\u627E\u7C7B\u578B\u8BBF\u95EE\u7EC4\u4EF6\u5C5E\u6027\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528\u67E5\u627E\u7C7B\u578B\u8BBF\u95EE\u7EC4\u4EF6\u5C5E\u6027\u7C7B\u578B" aria-hidden="true">#</a> \u4F7F\u7528\u67E5\u627E\u7C7B\u578B\u8BBF\u95EE\u7EC4\u4EF6\u5C5E\u6027\u7C7B\u578B</h3><p>\u901A\u8FC7\u67E5\u627E\u7C7B\u578B\u51CF\u5C11 type \u7684\u975E\u5FC5\u8981\u5BFC\u51FA\uFF0C\u5982\u679C\u9700\u8981\u63D0\u4F9B\u590D\u6742\u7684 type\uFF0C\u5E94\u5F53\u63D0\u53D6\u5230\u4F5C\u4E3A\u516C\u5171 API \u5BFC\u51FA\u7684\u6587\u4EF6\u4E2D\u3002</p><p>\u73B0\u5728\u6211\u4EEC\u6709\u4E00\u4E2A Counter \u7EC4\u4EF6\uFF0C\u9700\u8981 name \u8FD9\u4E2A\u5FC5\u4F20\u53C2\u6570\uFF1A</p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token comment">// counter.tsx</span>
<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> React <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span>
<span class="token keyword">export</span> <span class="token keyword">type</span> <span class="token class-name">Props</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    name<span class="token operator">:</span> <span class="token builtin">string</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> Counter<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token constant">FC</span><span class="token operator">&lt;</span>Props<span class="token operator">&gt;</span> <span class="token operator">=</span> props <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">&gt;</span></span>
<span class="token punctuation">}</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> Counter
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u5176\u4ED6\u5F15\u7528\u5B83\u7684\u7EC4\u4EF6\u4E2D\u6211\u4EEC\u6709\u4E24\u79CD\u65B9\u5F0F\u83B7\u53D6\u5230 Counter \u7684\u53C2\u6570\u7C7B\u578B</p><p>\u7B2C\u4E00\u79CD\u662F\u901A\u8FC7 <strong>typeof</strong> \u64CD\u4F5C\u7B26\uFF08<strong>\u63A8\u8350</strong>\uFF09</p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token comment">// Great</span>
<span class="token keyword">import</span> Counter <span class="token keyword">from</span> <span class="token string">&#39;./d-tips1&#39;</span>
<span class="token keyword">type</span> <span class="token class-name">PropsNew</span> <span class="token operator">=</span> React<span class="token punctuation">.</span>ComponentProps<span class="token operator">&lt;</span><span class="token keyword">typeof</span> Counter<span class="token operator">&gt;</span> <span class="token operator">&amp;</span> <span class="token punctuation">{</span>
    age<span class="token operator">:</span> <span class="token builtin">number</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token constant">FC</span><span class="token operator">&lt;</span>PropsNew<span class="token operator">&gt;</span> <span class="token operator">=</span> props <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Counter</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token punctuation">}</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> App
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7B2C\u4E8C\u79CD\u662F\u901A\u8FC7\u5728\u539F\u7EC4\u4EF6\u8FDB\u884C\u5BFC\u51FA</p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">import</span> Counter<span class="token punctuation">,</span> <span class="token punctuation">{</span> Props <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./d-tips1&#39;</span>
<span class="token keyword">type</span> <span class="token class-name">PropsNew</span> <span class="token operator">=</span> Props <span class="token operator">&amp;</span> <span class="token punctuation">{</span>
    age<span class="token operator">:</span> <span class="token builtin">number</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token constant">FC</span><span class="token operator">&lt;</span>PropsNew<span class="token operator">&gt;</span> <span class="token operator">=</span> props <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Counter</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text">
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> App
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u4E0D\u8981\u5728-type-\u6216-interface-\u4E2D\u4F7F\u7528\u51FD\u6570\u58F0\u660E" tabindex="-1"><a class="header-anchor" href="#\u4E0D\u8981\u5728-type-\u6216-interface-\u4E2D\u4F7F\u7528\u51FD\u6570\u58F0\u660E" aria-hidden="true">#</a> \u4E0D\u8981\u5728 type \u6216 interface \u4E2D\u4F7F\u7528\u51FD\u6570\u58F0\u660E</h3><p>\u4FDD\u6301\u4E00\u81F4\u6027\uFF0C\u7C7B\u578B/\u63A5\u53E3\u7684\u6240\u6709\u6210\u5458\u90FD\u901A\u8FC7\u76F8\u540C\u7684\u8BED\u6CD5\u5B9A\u4E49\u3002</p><p><strong>--strictFunctionTypes</strong> \u5728\u6BD4\u8F83\u51FD\u6570\u7C7B\u578B\u65F6\u5F3A\u5236\u6267\u884C\u66F4\u4E25\u683C\u7684\u7C7B\u578B\u68C0\u67E5\uFF0C\u4F46\u7B2C\u4E00\u79CD\u58F0\u660E\u65B9\u5F0F\u4E0B\u4E25\u683C\u68C0\u67E5\u4E0D\u751F\u6548\u3002</p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code>\u2705

<span class="token keyword">interface</span> <span class="token class-name">ICounter</span> <span class="token punctuation">{</span>
    <span class="token function-variable function">start</span><span class="token operator">:</span> <span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">string</span>
<span class="token punctuation">}</span>

\u274C

<span class="token keyword">interface</span> <span class="token class-name">ICounter1</span> <span class="token punctuation">{</span>
    <span class="token function">start</span><span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span>
<span class="token punctuation">}</span>


\u{1F330}

<span class="token keyword">interface</span> <span class="token class-name">Animal</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">interface</span> <span class="token class-name">Dog</span> <span class="token keyword">extends</span> <span class="token class-name">Animal</span> <span class="token punctuation">{</span>
    <span class="token function-variable function">wow</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>
<span class="token punctuation">}</span>
<span class="token keyword">interface</span> <span class="token class-name">Comparer<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token function-variable function">compare</span><span class="token operator">:</span> <span class="token punctuation">(</span>a<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> b<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">number</span>
<span class="token punctuation">}</span>
<span class="token keyword">declare</span> <span class="token keyword">let</span> animalComparer<span class="token operator">:</span> Comparer<span class="token operator">&lt;</span>Animal<span class="token operator">&gt;</span>
<span class="token keyword">declare</span> <span class="token keyword">let</span> dogComparer<span class="token operator">:</span> Comparer<span class="token operator">&lt;</span>Dog<span class="token operator">&gt;</span>
animalComparer <span class="token operator">=</span> dogComparer <span class="token comment">// Error</span>
dogComparer <span class="token operator">=</span> animalComparer <span class="token comment">// Ok</span>
<span class="token keyword">interface</span> <span class="token class-name">Comparer1<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token function">compare</span><span class="token punctuation">(</span>a<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> b<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span>
<span class="token punctuation">}</span>
<span class="token keyword">declare</span> <span class="token keyword">let</span> animalComparer1<span class="token operator">:</span> Comparer1<span class="token operator">&lt;</span>Animal<span class="token operator">&gt;</span>
<span class="token keyword">declare</span> <span class="token keyword">let</span> dogComparer1<span class="token operator">:</span> Comparer1<span class="token operator">&lt;</span>Dog<span class="token operator">&gt;</span>
animalComparer1 <span class="token operator">=</span> dogComparer <span class="token comment">// Ok</span>
dogComparer1 <span class="token operator">=</span> animalComparer <span class="token comment">// Ok</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u4E8B\u4EF6\u5904\u7406" tabindex="-1"><a class="header-anchor" href="#\u4E8B\u4EF6\u5904\u7406" aria-hidden="true">#</a> \u4E8B\u4EF6\u5904\u7406</h3><p>\u6211\u4EEC\u5728\u8FDB\u884C\u4E8B\u4EF6\u6CE8\u518C\u65F6\u7ECF\u5E38\u4F1A\u5728\u4E8B\u4EF6\u5904\u7406\u51FD\u6570\u4E2D\u4F7F\u7528 event \u4E8B\u4EF6\u5BF9\u8C61\uFF0C\u4F8B\u5982\u5F53\u4F7F\u7528\u9F20\u6807\u4E8B\u4EF6\u65F6\u6211\u4EEC\u901A\u8FC7 clientX\u3001clientY \u53BB\u83B7\u53D6\u6307\u9488\u7684\u5750\u6807\u3002</p><p>\u5927\u5BB6\u53EF\u80FD\u4F1A\u60F3\u5230\u76F4\u63A5\u628A event \u8BBE\u7F6E\u4E3A any \u7C7B\u578B\uFF0C\u4F46\u662F\u8FD9\u6837\u5C31\u5931\u53BB\u4E86\u6211\u4EEC\u5BF9\u4EE3\u7801\u8FDB\u884C\u9759\u6001\u68C0\u67E5\u7684\u610F\u4E49\u3002</p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">function</span> <span class="token function">handleEvent</span><span class="token punctuation">(</span>event<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>clientY<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8BD5\u60F3\u4E0B\u5F53\u6211\u4EEC\u6CE8\u518C\u4E00\u4E2A Touch \u4E8B\u4EF6\uFF0C\u7136\u540E\u9519\u8BEF\u7684\u901A\u8FC7\u4E8B\u4EF6\u5904\u7406\u51FD\u6570\u4E2D\u7684 event \u5BF9\u8C61\u53BB\u83B7\u53D6\u5176 clientY \u5C5E\u6027\u7684\u503C\uFF0C\u5728\u8FD9\u91CC\u6211\u4EEC\u5DF2\u7ECF\u5C06 event \u8BBE\u7F6E\u4E3A any \u7C7B\u578B\uFF0C\u5BFC\u81F4 TypeScript \u5728\u7F16\u8BD1\u65F6\u5E76\u4E0D\u4F1A\u63D0\u793A\u6211\u4EEC\u9519\u8BEF\uFF0C \u5F53\u6211\u4EEC\u901A\u8FC7 event.clientY \u8BBF\u95EE\u65F6\u5C31\u6709\u95EE\u9898\u4E86\uFF0C\u56E0\u4E3A Touch \u4E8B\u4EF6\u7684 event \u5BF9\u8C61\u5E76\u6CA1\u6709 clientY \u8FD9\u4E2A\u5C5E\u6027\u3002</p><p>\u901A\u8FC7 interface \u5BF9 event \u5BF9\u8C61\u8FDB\u884C\u7C7B\u578B\u58F0\u660E\u7F16\u5199\u7684\u8BDD\u53C8\u5341\u5206\u6D6A\u8D39\u65F6\u95F4\uFF0C\u5E78\u8FD0\u7684\u662F React \u7684\u58F0\u660E\u6587\u4EF6\u63D0\u4F9B\u4E86 Event \u5BF9\u8C61\u7684\u7C7B\u578B\u58F0\u660E\u3002</p><h4 id="event-\u4E8B\u4EF6\u5BF9\u8C61\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#event-\u4E8B\u4EF6\u5BF9\u8C61\u7C7B\u578B" aria-hidden="true">#</a> Event \u4E8B\u4EF6\u5BF9\u8C61\u7C7B\u578B</h4><ul><li><code>ClipboardEvent&lt;T = Element&gt;</code> \u526A\u5207\u677F\u4E8B\u4EF6\u5BF9\u8C61</li><li><code>DragEvent&lt;T =Element&gt;</code> \u62D6\u62FD\u4E8B\u4EF6\u5BF9\u8C61</li><li><code>ChangeEvent&lt;T = Element&gt;</code> Change \u4E8B\u4EF6\u5BF9\u8C61</li><li><code>KeyboardEvent&lt;T = Element&gt;</code> \u952E\u76D8\u4E8B\u4EF6\u5BF9\u8C61</li><li><code>MouseEvent&lt;T = Element&gt;</code> \u9F20\u6807\u4E8B\u4EF6\u5BF9\u8C61</li><li><code>TouchEvent&lt;T = Element&gt;</code> \u89E6\u6478\u4E8B\u4EF6\u5BF9\u8C61</li><li><code>WheelEvent&lt;T = Element&gt;</code> \u6EDA\u8F6E\u65F6\u95F4\u5BF9\u8C61</li><li><code>AnimationEvent&lt;T = Element&gt;</code> \u52A8\u753B\u4E8B\u4EF6\u5BF9\u8C61</li><li><code>TransitionEvent&lt;T = Element&gt;</code> \u8FC7\u6E21\u4E8B\u4EF6\u5BF9\u8C61</li></ul><h4 id="\u4E8B\u4EF6\u5904\u7406\u51FD\u6570\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u4E8B\u4EF6\u5904\u7406\u51FD\u6570\u7C7B\u578B" aria-hidden="true">#</a> \u4E8B\u4EF6\u5904\u7406\u51FD\u6570\u7C7B\u578B</h4><p>\u5F53\u6211\u4EEC\u5B9A\u4E49\u4E8B\u4EF6\u5904\u7406\u51FD\u6570\u65F6\u6709\u6CA1\u6709\u66F4\u65B9\u4FBF\u5B9A\u4E49\u5176\u51FD\u6570\u7C7B\u578B\u7684\u65B9\u5F0F\u5462\uFF1F\u7B54\u6848\u662F\u4F7F\u7528 <strong>React</strong> \u58F0\u660E\u6587\u4EF6\u6240\u63D0\u4F9B\u7684 <strong>EventHandler</strong> \u7C7B\u578B\u522B\u540D\uFF0C\u901A\u8FC7\u4E0D\u540C\u4E8B\u4EF6\u7684 <strong>EventHandler</strong> \u7684\u7C7B\u578B\u522B\u540D\u6765\u5B9A\u4E49\u4E8B\u4EF6\u5904\u7406\u51FD\u6570\u7684\u7C7B\u578B</p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">type</span> <span class="token class-name">EventHandler<span class="token operator">&lt;</span><span class="token constant">E</span> <span class="token keyword">extends</span> React<span class="token punctuation">.</span>SyntheticEvent<span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token function">bivarianceHack</span><span class="token punctuation">(</span>event<span class="token operator">:</span> <span class="token constant">E</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span>
<span class="token punctuation">}</span><span class="token punctuation">[</span><span class="token string">&#39;bivarianceHack&#39;</span><span class="token punctuation">]</span>
<span class="token keyword">type</span> <span class="token class-name">ReactEventHandler<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token operator">=</span> Element<span class="token operator">&gt;</span></span> <span class="token operator">=</span> EventHandler<span class="token operator">&lt;</span>React<span class="token punctuation">.</span>SyntheticEvent<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;&gt;</span>
<span class="token keyword">type</span> <span class="token class-name">ClipboardEventHandler<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token operator">=</span> Element<span class="token operator">&gt;</span></span> <span class="token operator">=</span> EventHandler<span class="token operator">&lt;</span>React<span class="token punctuation">.</span>ClipboardEvent<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;&gt;</span>
<span class="token keyword">type</span> <span class="token class-name">DragEventHandler<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token operator">=</span> Element<span class="token operator">&gt;</span></span> <span class="token operator">=</span> EventHandler<span class="token operator">&lt;</span>React<span class="token punctuation">.</span>DragEvent<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;&gt;</span>
<span class="token keyword">type</span> <span class="token class-name">FocusEventHandler<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token operator">=</span> Element<span class="token operator">&gt;</span></span> <span class="token operator">=</span> EventHandler<span class="token operator">&lt;</span>React<span class="token punctuation">.</span>FocusEvent<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;&gt;</span>
<span class="token keyword">type</span> <span class="token class-name">FormEventHandler<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token operator">=</span> Element<span class="token operator">&gt;</span></span> <span class="token operator">=</span> EventHandler<span class="token operator">&lt;</span>React<span class="token punctuation">.</span>FormEvent<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;&gt;</span>
<span class="token keyword">type</span> <span class="token class-name">ChangeEventHandler<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token operator">=</span> Element<span class="token operator">&gt;</span></span> <span class="token operator">=</span> EventHandler<span class="token operator">&lt;</span>React<span class="token punctuation">.</span>ChangeEvent<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;&gt;</span>
<span class="token keyword">type</span> <span class="token class-name">KeyboardEventHandler<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token operator">=</span> Element<span class="token operator">&gt;</span></span> <span class="token operator">=</span> EventHandler<span class="token operator">&lt;</span>React<span class="token punctuation">.</span>KeyboardEvent<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;&gt;</span>
<span class="token keyword">type</span> <span class="token class-name">MouseEventHandler<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token operator">=</span> Element<span class="token operator">&gt;</span></span> <span class="token operator">=</span> EventHandler<span class="token operator">&lt;</span>React<span class="token punctuation">.</span>MouseEvent<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;&gt;</span>
<span class="token keyword">type</span> <span class="token class-name">TouchEventHandler<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token operator">=</span> Element<span class="token operator">&gt;</span></span> <span class="token operator">=</span> EventHandler<span class="token operator">&lt;</span>React<span class="token punctuation">.</span>TouchEvent<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;&gt;</span>
<span class="token keyword">type</span> <span class="token class-name">PointerEventHandler<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token operator">=</span> Element<span class="token operator">&gt;</span></span> <span class="token operator">=</span> EventHandler<span class="token operator">&lt;</span>React<span class="token punctuation">.</span>PointerEvent<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;&gt;</span>
<span class="token keyword">type</span> <span class="token class-name">UIEventHandler<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token operator">=</span> Element<span class="token operator">&gt;</span></span> <span class="token operator">=</span> EventHandler<span class="token operator">&lt;</span>React<span class="token punctuation">.</span>UIEvent<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;&gt;</span>
<span class="token keyword">type</span> <span class="token class-name">WheelEventHandler<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token operator">=</span> Element<span class="token operator">&gt;</span></span> <span class="token operator">=</span> EventHandler<span class="token operator">&lt;</span>React<span class="token punctuation">.</span>WheelEvent<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;&gt;</span>
<span class="token keyword">type</span> <span class="token class-name">AnimationEventHandler<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token operator">=</span> Element<span class="token operator">&gt;</span></span> <span class="token operator">=</span> EventHandler<span class="token operator">&lt;</span>React<span class="token punctuation">.</span>AnimationEvent<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;&gt;</span>
<span class="token keyword">type</span> <span class="token class-name">TransitionEventHandler<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token operator">=</span> Element<span class="token operator">&gt;</span></span> <span class="token operator">=</span> EventHandler<span class="token operator">&lt;</span>
    React<span class="token punctuation">.</span>TransitionEvent<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span>
<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>bivarianceHack</strong> \u4E3A\u4E8B\u4EF6\u5904\u7406\u51FD\u6570\u7684\u7C7B\u578B\u5B9A\u4E49\uFF0C\u51FD\u6570\u63A5\u6536\u4E00\u4E2A <strong>event</strong> \u5BF9\u8C61\uFF0C\u5E76\u4E14\u5176\u7C7B\u578B\u4E3A\u63A5\u6536\u5230\u7684\u6CDB\u578B\u53D8\u91CF <strong>E</strong> \u7684\u7C7B\u578B, \u8FD4\u56DE\u503C\u4E3A <strong>void</strong></p><blockquote><p>\u5173\u4E8E\u4E3A\u4F55\u662F\u7528 bivarianceHack \u800C\u4E0D\u662F(event: E): void\uFF0C\u8FD9\u4E0E strictfunctionTypes \u9009\u9879\u4E0B\u7684\u529F\u80FD\u517C\u5BB9\u6027\u6709\u5173\u3002(event: E): void\uFF0C\u5982\u679C\u8BE5\u53C2\u6570\u662F\u6D3E\u751F\u7C7B\u578B\uFF0C\u5219\u4E0D\u80FD\u5C06\u5176\u4F20\u9012\u7ED9\u53C2\u6570\u662F\u57FA\u7C7B\u7684\u51FD\u6570\u3002</p></blockquote><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">class</span> <span class="token class-name">Animal</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> x<span class="token operator">:</span> <span class="token keyword">undefined</span>
<span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name">Dog</span> <span class="token keyword">extends</span> <span class="token class-name">Animal</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> d<span class="token operator">:</span> <span class="token keyword">undefined</span>
<span class="token punctuation">}</span>
<span class="token keyword">type</span> <span class="token class-name">EventHandler<span class="token operator">&lt;</span><span class="token constant">E</span> <span class="token keyword">extends</span> Animal<span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">(</span>event<span class="token operator">:</span> <span class="token constant">E</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>
<span class="token keyword">let</span> z<span class="token operator">:</span> EventHandler<span class="token operator">&lt;</span>Animal<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">(</span>o<span class="token operator">:</span> Dog<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token comment">// fails under strictFunctionTyes</span>
<span class="token keyword">type</span> <span class="token class-name">BivariantEventHandler<span class="token operator">&lt;</span><span class="token constant">E</span> <span class="token keyword">extends</span> Animal<span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token function">bivarianceHack</span><span class="token punctuation">(</span>event<span class="token operator">:</span> <span class="token constant">E</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span>
<span class="token punctuation">}</span><span class="token punctuation">[</span><span class="token string">&#39;bivarianceHack&#39;</span><span class="token punctuation">]</span>
<span class="token keyword">let</span> y<span class="token operator">:</span> BivariantEventHandler<span class="token operator">&lt;</span>Animal<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">(</span>o<span class="token operator">:</span> Dog<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="promise-\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#promise-\u7C7B\u578B" aria-hidden="true">#</a> Promise \u7C7B\u578B</h3><p>\u5728\u505A\u5F02\u6B65\u64CD\u4F5C\u65F6\u6211\u4EEC\u7ECF\u5E38\u4F7F\u7528 <strong>async</strong> \u51FD\u6570\uFF0C\u51FD\u6570\u8C03\u7528\u65F6\u4F1A <strong>return</strong> \u4E00\u4E2A <strong>Promise</strong> \u5BF9\u8C61\uFF0C\u53EF\u4EE5\u4F7F\u7528 <strong>then</strong> \u65B9\u6CD5\u6DFB\u52A0\u56DE\u8C03\u51FD\u6570\u3002<strong><code>Promise&lt;T&gt;</code></strong> \u662F\u4E00\u4E2A\u6CDB\u578B\u7C7B\u578B\uFF0C<strong>T</strong> \u6CDB\u578B\u53D8\u91CF\u7528\u4E8E\u786E\u5B9A <strong>then</strong> \u65B9\u6CD5\u65F6\u63A5\u6536\u7684\u7B2C\u4E00\u4E2A\u56DE\u8C03\u51FD\u6570\u7684\u53C2\u6570\u7C7B\u578B\u3002</p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">type</span> <span class="token class-name">IResponse<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    message<span class="token operator">:</span> <span class="token builtin">string</span>
    result<span class="token operator">:</span> <span class="token constant">T</span>
    success<span class="token operator">:</span> <span class="token builtin">boolean</span>
<span class="token punctuation">}</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">getResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>IResponse<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
        message<span class="token operator">:</span> <span class="token string">&#39;\u83B7\u53D6\u6210\u529F&#39;</span><span class="token punctuation">,</span>
        result<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        success<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token function">getResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>response <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>result<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u9996\u5148\u58F0\u660E <strong>IResponse</strong> \u7684\u6CDB\u578B\u63A5\u53E3\u7528\u4E8E\u5B9A\u4E49 <strong>response</strong> \u7684\u7C7B\u578B\uFF0C\u901A\u8FC7 <strong>T</strong> \u6CDB\u578B\u53D8\u91CF\u6765\u786E\u5B9A <strong>result</strong> \u7684\u7C7B\u578B\u3002\u7136\u540E\u58F0\u660E\u4E86\u4E00\u4E2A \u5F02\u6B65\u51FD\u6570 <strong>getResponse</strong> \u5E76\u4E14\u5C06\u51FD\u6570\u8FD4\u56DE\u503C\u7684\u7C7B\u578B\u5B9A\u4E49\u4E3A <strong><code>Promise&lt;IResponse&lt;number[]&gt;&gt;</code></strong> \u3002\u6700\u540E\u8C03\u7528 <strong>getResponse</strong> \u65B9\u6CD5\u4F1A\u8FD4\u56DE\u4E00\u4E2A <strong>promise</strong> \u7C7B\u578B\uFF0C\u901A\u8FC7 <strong>then</strong> \u8C03\u7528\uFF0C\u6B64\u65F6 <strong>then</strong> \u65B9\u6CD5\u63A5\u6536\u7684\u7B2C\u4E00\u4E2A\u56DE\u8C03\u51FD\u6570\u7684\u53C2\u6570 <strong>response</strong> \u7684\u7C7B\u578B\u4E3A\uFF0C<strong>{ message: string, result: number[], success: boolean}</strong> \u3002</p><h3 id="\u6CDB\u578B\u53C2\u6570\u7684\u7EC4\u4EF6" tabindex="-1"><a class="header-anchor" href="#\u6CDB\u578B\u53C2\u6570\u7684\u7EC4\u4EF6" aria-hidden="true">#</a> \u6CDB\u578B\u53C2\u6570\u7684\u7EC4\u4EF6</h3><p>\u4E0B\u9762\u8FD9\u4E2A\u7EC4\u4EF6\u7684 name \u5C5E\u6027\u90FD\u662F\u6307\u5B9A\u4E86\u4F20\u53C2\u683C\u5F0F\uFF0C\u5982\u679C\u60F3\u4E0D\u6307\u5B9A\uFF0C\u800C\u662F\u60F3\u901A\u8FC7\u4F20\u5165\u53C2\u6570\u7684\u7C7B\u578B\u53BB\u63A8\u5BFC\u5B9E\u9645\u7C7B\u578B\uFF0C\u8FD9\u5C31\u8981\u7528\u5230\u6CDB\u578B\u3002</p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">const</span> <span class="token function-variable function">TestB</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> name<span class="token punctuation">,</span> name2 <span class="token punctuation">}</span><span class="token operator">:</span> <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span> name2<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>test-b<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
        TestB--</span><span class="token punctuation">{</span>name<span class="token punctuation">}</span><span class="token plain-text">
        </span><span class="token punctuation">{</span>name2<span class="token punctuation">}</span><span class="token plain-text">
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u9700\u8981\u5916\u90E8\u4F20\u5165\u53C2\u6570\u7C7B\u578B</p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">type</span> <span class="token class-name">Props<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    name<span class="token operator">:</span> <span class="token constant">T</span>
    name2<span class="token operator">?</span><span class="token operator">:</span> <span class="token constant">T</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> TestC<span class="token operator">:</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">T</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">(props: Props&lt;T&gt;) =&gt; React.ReactElement = (</span><span class="token punctuation">{</span> name<span class="token punctuation">,</span> name2 <span class="token punctuation">}</span><span class="token plain-text">) =&gt; </span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>test-b<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
        TestB--</span><span class="token punctuation">{</span>name<span class="token punctuation">}</span><span class="token plain-text">
        </span><span class="token punctuation">{</span>name2<span class="token punctuation">}</span><span class="token plain-text">
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token plain-text">

const TestD = () =&gt; </span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
        &lt;TestC&lt;string&gt; name=&quot;123&quot; /&gt;
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token plain-text">
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u4EC0\u4E48\u65F6\u5019\u4F7F\u7528\u6CDB\u578B" tabindex="-1"><a class="header-anchor" href="#\u4EC0\u4E48\u65F6\u5019\u4F7F\u7528\u6CDB\u578B" aria-hidden="true">#</a> \u4EC0\u4E48\u65F6\u5019\u4F7F\u7528\u6CDB\u578B</h3><ul><li>\u5F53\u4F60\u7684\u51FD\u6570\uFF0C\u63A5\u53E3\u6216\u8005\u7C7B\uFF1A <ul><li>\u9700\u8981\u4F5C\u7528\u5230\u5F88\u591A\u7C7B\u578B\u7684\u65F6\u5019\uFF0C\u4E3E\u4E2A \u{1F330}</li></ul></li></ul><p>\u5F53\u6211\u4EEC\u9700\u8981\u4E00\u4E2A id \u51FD\u6570\uFF0C\u51FD\u6570\u7684\u53C2\u6570\u53EF\u4EE5\u662F\u4EFB\u4F55\u503C\uFF0C\u8FD4\u56DE\u503C\u5C31\u662F\u5C06\u53C2\u6570\u539F\u6837\u8FD4\u56DE\uFF0C\u5E76\u4E14\u5176\u53EA\u80FD\u63A5\u53D7\u4E00\u4E2A\u53C2\u6570\uFF0C\u5728 js \u65F6\u4EE3\u6211\u4EEC\u4F1A\u5F88\u8F7B\u6613\u5730\u7529\u51FA\u4E00\u884C</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">id</span> <span class="token operator">=</span> <span class="token parameter">arg</span> <span class="token operator">=&gt;</span> arg
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u7531\u4E8E\u5176\u53EF\u4EE5\u63A5\u53D7\u4EFB\u610F\u503C\uFF0C\u4E5F\u5C31\u662F\u8BF4\u6211\u4EEC\u7684\u51FD\u6570\u7684\u5165\u53C2\u548C\u8FD4\u56DE\u503C\u90FD\u5E94\u8BE5\u53EF\u4EE5\u662F\u4EFB\u610F\u7C7B\u578B\uFF0C\u5982\u679C\u4E0D\u4F7F\u7528\u6CDB\u578B\uFF0C\u6211\u4EEC\u53EA\u80FD\u91CD\u590D\u7684\u8FDB\u884C\u5B9A\u4E49</p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">type</span> <span class="token class-name">idBoolean</span> <span class="token operator">=</span> <span class="token punctuation">(</span>arg<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">boolean</span>
<span class="token keyword">type</span> <span class="token class-name">idNumber</span> <span class="token operator">=</span> <span class="token punctuation">(</span>arg<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">number</span>
<span class="token keyword">type</span> <span class="token class-name">idString</span> <span class="token operator">=</span> <span class="token punctuation">(</span>arg<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">string</span>
<span class="token comment">// ...</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u4F7F\u7528\u6CDB\u578B\uFF0C\u6211\u4EEC\u53EA\u9700\u8981</p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">id</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>arg<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> arg
<span class="token punctuation">}</span>

<span class="token comment">// \u6216</span>
<span class="token keyword">const</span> id1<span class="token operator">:</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">T</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">(arg: T) =&gt; T = arg =&gt; </span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> arg
<span class="token punctuation">}</span><span class="token plain-text">
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u9700\u8981\u88AB\u7528\u5230\u5F88\u591A\u5730\u65B9\u7684\u65F6\u5019\uFF0C\u6BD4\u5982\u5E38\u7528\u7684\u5DE5\u5177\u6CDB\u578B <strong>Partial</strong>\u3002</li></ul><p>\u529F\u80FD\u662F\u5C06\u7C7B\u578B\u7684\u5C5E\u6027<strong>\u53D8\u6210\u53EF\u9009</strong>\uFF0C \u6CE8\u610F\u8FD9\u662F\u6D45 <strong>Partial</strong>\u3002</p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">type</span> <span class="token class-name">Partial<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span><span class="token constant">P</span> <span class="token keyword">in</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token punctuation">]</span><span class="token operator">?</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">P</span><span class="token punctuation">]</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u5982\u679C\u9700\u8981\u6DF1 Partial \u6211\u4EEC\u53EF\u4EE5\u901A\u8FC7\u6CDB\u578B\u9012\u5F52\u6765\u5B9E\u73B0</p><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token keyword">type</span> <span class="token class-name">DeepPartial<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">Function</span></span>
    <span class="token operator">?</span> <span class="token constant">T</span>
    <span class="token operator">:</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name">object</span>
    <span class="token operator">?</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span><span class="token constant">P</span> <span class="token keyword">in</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token punctuation">]</span><span class="token operator">?</span><span class="token operator">:</span> DeepPartial<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">P</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> <span class="token punctuation">}</span>
    <span class="token operator">:</span> <span class="token constant">T</span>
<span class="token keyword">type</span> <span class="token class-name">PartialedWindow</span> <span class="token operator">=</span> DeepPartial<span class="token operator">&lt;</span>Window<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,91);function I(L,B){const t=e("ExternalLinkIcon"),o=e("CodeType");return l(),i("div",null,[k,d,n("ul",null,[v,n("li",null,[s("\u719F\u6089 TypeScript (\u53C2\u8003\u4E66\u7C4D\uFF1A"),n("a",m,[s("2ality's guide"),a(t)]),s(", \u521D\u5B66\u8005\u5EFA\u8BAE\u9605\u8BFB\uFF1A"),n("a",b,[s("chibicode's tutorial"),a(t)]),s("\uFF09")]),n("li",null,[s("\u719F\u8BFB React \u5B98\u65B9\u6587\u6863 "),n("a",g,[s("TS \u90E8\u5206"),a(t)])])]),n("p",null,[s("\u719F\u8BFB TypeScript playground "),n("a",y,[s("React \u90E8\u5206"),a(t)])]),h,n("p",null,[s("\u8FD9\u79CD\u5F15\u7528\u65B9\u5F0F"),n("a",f,[s("\u88AB\u8BC1\u660E"),a(t)]),s("\u662F\u6700\u53EF\u9760\u7684\u4E00\u79CD\u65B9\u5F0F\uFF0C \u63A8\u8350\u4F7F\u7528\u3002")]),w,n("ul",null,[x,R,n("li",null,[s("React.FC \u4E3A children \u63D0\u4F9B\u4E86\u9690\u5F0F\u7684\u7C7B\u578B\uFF08ReactElement | null\uFF09\uFF0C\u4F46\u662F\u76EE\u524D\uFF0C\u63D0\u4F9B\u7684\u7C7B\u578B\u5B58\u5728\u4E00\u4E9B"),n("a",E,[s("issue"),a(t)]),s("\uFF08\u95EE\u9898\uFF09")])]),T,a(o,{bad:""},{default:r(()=>[C]),_:1}),P,n("p",null,[s("\u5982\u679C\u4F7F\u7528 const \u65AD\u8A00\u9047\u5230"),n("a",_,[s("\u95EE\u9898"),a(t)]),s("\uFF0C\u4E5F\u53EF\u4EE5\u76F4\u63A5\u5B9A\u4E49\u8FD4\u56DE\u7C7B\u578B:")]),S,n("p",null,[s("\u5927\u90E8\u5206\u6587\u7AE0\u90FD"),H,s("\u4F7F\u7528 defaultProps , \u76F8\u5173\u8BA8\u8BBA\u53EF\u4EE5\u70B9\u51FB"),n("a",A,[s("\u53C2\u8003\u94FE\u63A5"),a(t)])]),F,n("p",null,[n("a",q,[s("TypeScript3.0+"),a(t)]),s(" \u5728\u9ED8\u8BA4\u5C5E\u6027 \u7684\u7C7B\u578B\u63A8\u5BFC\u4E0A\u6709\u4E86\u6781\u5927\u7684\u6539\u8FDB\uFF0C\u867D\u7136\u5C1A\u4E14"),n("a",j,[s("\u5B58\u5728\u4E00\u4E9B\u8FB9\u754C case \u4ECD\u7136\u5B58\u5728\u95EE\u9898"),a(t)]),s("\uFF0C\u4E0D\u63A8\u8350\u4F7F\u7528\uFF0C\u5982\u679C\u6709\u9700\u8981\u4F7F\u7528\u7684\u573A\u666F\uFF0C\u53EF\u53C2\u7167\u5982\u4E0B\u65B9\u5F0F\uFF1A")]),M])}const N=c(u,[["render",I],["__file","06.html.vue"]]);export{N as default};
