import{_ as n,o as s,c as a,a as t}from"./app.cf2d5c41.js";const p={},e=t(`<h1 id="\u865A\u62DF\u6EDA\u52A8\u76843\u79CD\u5B9E\u73B0\u65B9\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u865A\u62DF\u6EDA\u52A8\u76843\u79CD\u5B9E\u73B0\u65B9\u5F0F" aria-hidden="true">#</a> \u865A\u62DF\u6EDA\u52A8\u76843\u79CD\u5B9E\u73B0\u65B9\u5F0F</h1><h2 id="\u5143\u7D20\u56FA\u5B9A\u9AD8\u5EA6\u7684\u865A\u62DF\u5217\u8868" tabindex="-1"><a class="header-anchor" href="#\u5143\u7D20\u56FA\u5B9A\u9AD8\u5EA6\u7684\u865A\u62DF\u5217\u8868" aria-hidden="true">#</a> \u5143\u7D20\u56FA\u5B9A\u9AD8\u5EA6\u7684\u865A\u62DF\u5217\u8868</h2><ul><li>\u4F7F\u7528</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">Row</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> index<span class="token punctuation">,</span> style<span class="token punctuation">,</span> forwardRef <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>div className<span class="token operator">=</span><span class="token punctuation">{</span>index <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">?</span> <span class="token string">&#39;list-item-odd&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;list-item-even&#39;</span><span class="token punctuation">}</span> style<span class="token operator">=</span><span class="token punctuation">{</span>style<span class="token punctuation">}</span> ref<span class="token operator">=</span><span class="token punctuation">{</span>forwardRef<span class="token punctuation">}</span><span class="token operator">&gt;</span>
      <span class="token punctuation">{</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Row </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>index<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">}</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>FixedSizeList
      className<span class="token operator">=</span><span class="token string">&quot;list&quot;</span>
      height<span class="token operator">=</span><span class="token punctuation">{</span><span class="token number">200</span><span class="token punctuation">}</span>
      width<span class="token operator">=</span><span class="token punctuation">{</span><span class="token number">200</span><span class="token punctuation">}</span>
      itemSize<span class="token operator">=</span><span class="token punctuation">{</span><span class="token number">50</span><span class="token punctuation">}</span>
      itemCount<span class="token operator">=</span><span class="token punctuation">{</span><span class="token number">1000</span><span class="token punctuation">}</span>
    <span class="token operator">&gt;</span>
      <span class="token punctuation">{</span>Row<span class="token punctuation">}</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>FixedSizeList<span class="token operator">&gt;</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u5B9E\u73B0</li></ul><p>\uFF081\uFF09\u9996\u5148\u5148\u8BA1\u7B97\u51FA\u75311000\u4E2A\u5143\u7D20\u6491\u8D77\u7684\u76D2\u5B50(\u79F0\u4E4B\u4E3Acontainer)\u7684\u9AD8\u5EA6\uFF0C\u6491\u5F00\u76D2\u5B50\uFF0C\u8BA9\u7528\u6237\u80FD\u8FDB\u884C\u6EDA\u52A8\u64CD\u4F5C\u3002</p><p>\uFF082\uFF09\u8BA1\u7B97\u51FA\u53EF\u89C6\u533A\u7684\u8D77\u59CB\u7D22\u5F15\u3001\u4E0A\u7F13\u51B2\u533A\u7684\u8D77\u59CB\u7D22\u5F15\u4EE5\u53CA\u4E0B\u7F13\u51B2\u533A\u7684\u7ED3\u675F\u7D22\u5F15\uFF08\u5C31\u50CF\u4E0A\u56FE\u6EDA\u52A8\u540E\uFF0C\u4E0A\u7F13\u51B2\u533A\u7684\u8D77\u59CB\u7D22\u5F15\u4E3A2\uFF0C\u53EF\u89C6\u533A\u8D77\u59CB\u7D22\u5F15\u4E3A4\uFF0C\u4E0B\u7F13\u51B2\u533A\u7ED3\u675F\u7D22\u5F15\u4E3A9\uFF09\u3002</p><p>\uFF083\uFF09\u91C7\u7528\u7EDD\u5BF9\u5B9A\u4F4D\uFF0C\u8BA1\u7B97\u4E0A\u7F13\u51B2\u533A\u5230\u4E0B\u7F13\u51B2\u533A\u4E4B\u95F4\u7684\u6BCF\u4E00\u4E2A\u5143\u7D20\u5728contianer\u4E2D\u7684top\u503C\uFF0C\u53EA\u6709\u77E5\u9053top\u503C\u624D\u80FD\u8BA9\u5143\u7D20\u51FA\u73B0\u5728\u53EF\u89C6\u533A\u5185\u3002</p><p>\uFF084\uFF09\u5C06\u4E0A\u7F13\u51B2\u533A\u5230\u4E0B\u7F13\u51B2\u533A\u7684\u5143\u7D20\u585E\u5230container\u4E2D\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">FixedSizeList</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> height<span class="token punctuation">,</span> width<span class="token punctuation">,</span> itemSize<span class="token punctuation">,</span> itemCount<span class="token punctuation">,</span> <span class="token literal-property property">children</span><span class="token operator">:</span> Child <span class="token punctuation">}</span> <span class="token operator">=</span> props<span class="token punctuation">;</span>
  <span class="token comment">// \u8BB0\u5F55\u6EDA\u52A8\u6389\u7684\u9AD8\u5EA6</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>scrollOffset<span class="token punctuation">,</span> setScrollOffset<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// \u5916\u90E8\u5BB9\u5668\u9AD8\u5EA6</span>
  <span class="token keyword">const</span> containerStyle <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">position</span><span class="token operator">:</span> <span class="token string">&#39;relative&#39;</span><span class="token punctuation">,</span>
    width<span class="token punctuation">,</span>
    height<span class="token punctuation">,</span>
    <span class="token literal-property property">overflow</span><span class="token operator">:</span> <span class="token string">&#39;auto&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token comment">// 1000\u4E2A\u5143\u7D20\u6491\u8D77\u76D2\u5B50\u7684\u5B9E\u9645\u9AD8\u5EA6</span>
  <span class="token keyword">const</span> contentStyle <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">height</span><span class="token operator">:</span> itemSize <span class="token operator">*</span> itemCount<span class="token punctuation">,</span>
    <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token string">&#39;100%&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">getCurrentChildren</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u53EF\u89C6\u533A\u8D77\u59CB\u7D22\u5F15</span>
    <span class="token keyword">const</span> startIndex <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>scrollOffset <span class="token operator">/</span> itemSize<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u4E0A\u7F13\u51B2\u533A\u8D77\u59CB\u7D22\u5F15</span>
    <span class="token keyword">const</span> finialStartIndex <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> startIndex <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u53EF\u89C6\u533A\u80FD\u5C55\u793A\u7684\u5143\u7D20\u7684\u6700\u5927\u4E2A\u6570</span>
    <span class="token keyword">const</span> numVisible <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span>height <span class="token operator">/</span> itemSize<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u4E0B\u7F13\u51B2\u533A\u7ED3\u675F\u7D22\u5F15</span>
    <span class="token keyword">const</span> endIndex <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>itemCount <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> startIndex <span class="token operator">+</span> numVisible <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> items <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token comment">// \u6839\u636E\u4E0A\u9762\u8BA1\u7B97\u7684\u7D22\u5F15\u503C\uFF0C\u4E0D\u65AD\u6DFB\u52A0\u5143\u7D20\u7ED9container</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> finialStartIndex<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> endIndex<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> itemStyle <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">position</span><span class="token operator">:</span> <span class="token string">&#39;absolute&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">height</span><span class="token operator">:</span> itemSize<span class="token punctuation">,</span>
        <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token string">&#39;100%&#39;</span><span class="token punctuation">,</span>
        <span class="token comment">// \u8BA1\u7B97\u6BCF\u4E2A\u5143\u7D20\u5728container\u4E2D\u7684top\u503C</span>
        <span class="token literal-property property">top</span><span class="token operator">:</span> itemSize <span class="token operator">*</span> i<span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">;</span>
      items<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>
        <span class="token operator">&lt;</span>Child key<span class="token operator">=</span><span class="token punctuation">{</span>i<span class="token punctuation">}</span> index<span class="token operator">=</span><span class="token punctuation">{</span>i<span class="token punctuation">}</span> style<span class="token operator">=</span><span class="token punctuation">{</span>itemStyle<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
      <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> items<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u5F53\u89E6\u53D1\u6EDA\u52A8\u5C31\u91CD\u65B0\u8BA1\u7B97</span>
  <span class="token keyword">const</span> <span class="token function-variable function">scrollHandle</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> scrollTop <span class="token punctuation">}</span> <span class="token operator">=</span> event<span class="token punctuation">.</span>currentTarget<span class="token punctuation">;</span>
    <span class="token function">setScrollOffset</span><span class="token punctuation">(</span>scrollTop<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>div style<span class="token operator">=</span><span class="token punctuation">{</span>containerStyle<span class="token punctuation">}</span> onScroll<span class="token operator">=</span><span class="token punctuation">{</span>scrollHandle<span class="token punctuation">}</span><span class="token operator">&gt;</span>
       <span class="token operator">&lt;</span>div style<span class="token operator">=</span><span class="token punctuation">{</span>contentStyle<span class="token punctuation">}</span><span class="token operator">&gt;</span>
          <span class="token punctuation">{</span><span class="token function">getCurrentChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span>
       <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> FixedSizeList<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5143\u7D20\u4E0D\u5B9A\u9AD8\u5EA6\u7684\u865A\u62DF\u5217\u8868" tabindex="-1"><a class="header-anchor" href="#\u5143\u7D20\u4E0D\u5B9A\u9AD8\u5EA6\u7684\u865A\u62DF\u5217\u8868" aria-hidden="true">#</a> \u5143\u7D20\u4E0D\u5B9A\u9AD8\u5EA6\u7684\u865A\u62DF\u5217\u8868</h2><ul><li>\u4F7F\u7528</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> rowSizes <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token number">25</span> <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">55</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> <span class="token function-variable function">getItemSize</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> rowSizes<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">Row</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> index<span class="token punctuation">,</span> style <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>div className<span class="token operator">=</span><span class="token punctuation">{</span>index <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">?</span> <span class="token string">&#39;list-item-odd&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;list-item-even&#39;</span><span class="token punctuation">}</span> style<span class="token operator">=</span><span class="token punctuation">{</span>style<span class="token punctuation">}</span> <span class="token operator">&gt;</span>
      Row <span class="token punctuation">{</span>index<span class="token punctuation">}</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>VariableSizeList
      className<span class="token operator">=</span><span class="token string">&quot;list&quot;</span>
      height<span class="token operator">=</span><span class="token punctuation">{</span><span class="token number">200</span><span class="token punctuation">}</span>
      width<span class="token operator">=</span><span class="token punctuation">{</span><span class="token number">200</span><span class="token punctuation">}</span>
      itemSize<span class="token operator">=</span><span class="token punctuation">{</span>getItemSize<span class="token punctuation">}</span>
      itemCount<span class="token operator">=</span><span class="token punctuation">{</span><span class="token number">1000</span><span class="token punctuation">}</span>
    <span class="token operator">&gt;</span>
      <span class="token punctuation">{</span>Row<span class="token punctuation">}</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>VariableSizeList<span class="token operator">&gt;</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4ECE\u4EE3\u7801\u53EF\u4EE5\u770B\u51FA\uFF0CRow\u6BCF\u4E00\u4E2A\u9AD8\u5EA6\u90FD\u662F\u968F\u673A\u7684\uFF0C\u5C31\u4E0D\u80FD\u50CF\u7B2C\u4E00\u79CD\u865A\u62DF\u5217\u8868\u90A3\u6837\u7B80\u5355\u5F97\u901A\u8FC7itemSize * index\u8BA1\u7B97\u51FAtop\u503C\u4E86\u3002</p><ul><li>\u601D\u8DEF</li></ul><p><strong>\u96BE\u70B9\u4E00\uFF1A</strong></p><p>\u7531\u4E8E\u6BCF\u4E2A\u5143\u7D20\u9AD8\u5EA6\u4E0D\u4E00\uFF0C\u6211\u4EEC\u8D77\u5148\u65E0\u6CD5\u76F4\u63A5\u8BA1\u7B97\u51FAcontainer\u7684\u603B\u9AD8\u5EA6\u3002</p><p><strong>\u96BE\u70B9\u4E8C\uFF1A</strong></p><p>\u6BCF\u4E2A\u5143\u7D20\u9AD8\u5EA6\u4E0D\u4E00\uFF0C\u6BCF\u4E2A\u5143\u7D20\u7684top\u503C\u4E0D\u80FD\u901A\u8FC7itemSize * index\u76F4\u63A5\u8BA1\u7B97\u51FAtop\u503C\u3002</p><p><strong>\u96BE\u70B9\u4E09\uFF1A</strong></p><p>\u6BCF\u4E2A\u5143\u7D20\u9AD8\u5EA6\u4E0D\u4E00\uFF0C\u4E0D\u80FD\u76F4\u63A5\u901A\u8FC7scrollOffset / itemSize\u8BA1\u7B97\u51FA\u5DF2\u88AB\u6EDA\u52A8\u6389\u7684\u5143\u7D20\u7684\u4E2A\u6570\uFF0C\u5F88\u96BE\u83B7\u53D6\u5230\u53EF\u89C6\u533A\u7684\u8D77\u59CB\u7D22\u5F15\u3002</p><ul><li>\u96BE\u70B9\u4E00\u7684\u89E3\u51B3\u65B9\u6848</li></ul><p>\u53EF\u4EE5\u901A\u8FC7\u904D\u5386\u6240\u6709\u7684Row\u8BA1\u7B97\u51FA\u603B\u9AD8\u5EA6\uFF0C\u4F46\u6211\u8BA4\u4E3A\u8BA1\u7B97\u51FA\u7CBE\u786E\u603B\u9AD8\u5EA6\u7684\u5FC5\u8981\u6027\u4E0D\u5927\uFF0C\u540C\u65F6\u4E5F\u4E3A\u4E86\u517C\u5BB9\u7B2C\u4E09\u79CD\u865A\u62DF\u5217\u8868\uFF0C\u6211\u4EEC\u4E0D\u53BB\u8BA1\u7B97\u7CBE\u786E\u7684\u603B\u9AD8\u5EA6\u3002\u73B0\u5728\u6211\u4EEC\u56DE\u5230\u51FA\u53D1\u70B9\uFF0C\u601D\u8003container\u7684\u9AD8\u5EA6\u7684\u4F5C\u7528\u662F\u4EC0\u4E48\uFF1F\u5176\u5B9E\u5C31\u662F\u4E3A\u4E86\u8DB3\u591F\u5927\uFF0C\u8BA9\u7528\u6237\u80FD\u8FDB\u884C\u6EDA\u52A8\u64CD\u4F5C\uFF0C\u90A3\u6211\u4EEC\u53EF\u4EE5\u81EA\u5DF1\u5047\u8BBE\u6BCF\u4E00\u4E2A\u5143\u7D20\u7684\u9AD8\u5EA6\uFF0C\u5728\u4E58\u4E0A\u4E2A\u6570\uFF0C\u5F04\u51FA\u4E00\u4E2A\u5047\u7684\u4F46\u8DB3\u591F\u9AD8\u7684container\u8BA9\u7528\u6237\u53BB\u89E6\u53D1\u6EDA\u52A8\u4E8B\u4EF6\u3002\u5F53\u7136\u8FD9\u79CD\u65B9\u6848\u4F1A\u5E26\u6765\u4E00\u4E9B\u5C0Fbug\uFF08\u8FD9\u4E2Abug\u7684\u5F71\u54CD\u5927\uFF0C\u6211\u8BA4\u4E3A\u662F\u53EF\u4EE5\u5FFD\u7565\u7684\uFF09\u3002</p><ul><li>\u96BE\u70B9\u4E8C\u548C\u96BE\u70B9\u4E09\u7684\u89E3\u51B3\u65B9\u6848</li></ul><p>\u5176\u5B9E\u96BE\u70B9\u4E8C\u548C\u96BE\u70B9\u4E09\u672C\u8D28\u90FD\u4E00\u6837\uFF0C\u5143\u7D20\u9AD8\u5EA6\u4E0D\u4E00\uFF0C\u5BFC\u81F4\u4E0D\u77E5\u9053\u88AB\u6EDA\u52A8\u6389\u4E86\u591A\u5C11\u5143\u7D20\uFF0C\u53EA\u8981\u77E5\u9053\u88AB\u6EDA\u52A8\u6389\u7684\u5143\u7D20\u7684\u4E2A\u6570\uFF0Ctop\u503C\u548C\u7D22\u5F15\u90FD\u8FCE\u5203\u800C\u89E3\u3002</p><p>\u6211\u4EEC\u53EF\u4EE5\u91C7\u7528\u8FD9\u79CD\u89E3\u51B3\u65B9\u6848\uFF0C\u90A3\u5C31\u662F\u6BCF\u6B21\u53EA\u8BA1\u7B97\u9700\u8981\u4E0A\u7F13\u51B2\u533A\u5230\u4E0B\u7F13\u51B2\u533A\u4E4B\u95F4\u7684\u5143\u7D20\uFF0C\u5E76\u8BB0\u5F55\u4ED6\u4EEC\uFF0C\u5E76\u4E14\u8BB0\u5F55\u4E0B\u6700\u5E95\u4E0B\u7684\u90A3\u4E2A\u5143\u7D20\u7684\u7D22\u5F15\uFF0C\u5F53\u7528\u6237\u8FDB\u884C\u6EDA\u52A8\u65F6\uFF0C\u5982\u679C\u6211\u4EEC\u662F\u5411\u4E0A\u6EDA\u52A8\uFF0C\u5C31\u53EF\u4EE5\u76F4\u63A5\u4ECE\u5DF2\u7ECF\u8BA1\u7B97\u597D\u7684\u8BB0\u5F55\u91CC\u53D6\uFF0C\u5982\u679C\u5411\u4E0B\u6EDA\u52A8\uFF0C\u6211\u4EEC\u6839\u636E\u4E0A\u4E00\u6B21\u8BB0\u5F55\u7684\u6700\u5927\u7684\u7D22\u5F15\u7684\u90A3\u4E2A\u5143\u7D20\u4E0D\u65AD\u7D2F\u52A0\u65B0\u5143\u7D20\u7684\u9AD8\u5EA6\uFF0C\u76F4\u5230\u5B83\u5927\u4E8E\u5DF2\u7ECF\u6EDA\u52A8\u6389\u7684\u9AD8\u5EA6\uFF0C\u6B64\u65F6\u7684\u7D22\u5F15\u503C\u5C31\u662F\u53EF\u89C6\u533A\u7684\u8D77\u59CB\u7D22\u5F15\u4E86\uFF0C\u8FD9\u4E2A\u8D77\u59CB\u7D22\u5F15\u6240\u5BF9\u5E94\u7684top\u5C31\u662F\u7D2F\u52A0\u7684\u9AD8\u5EA6\u3002</p><p>\u6BCF\u4E00\u4E2A\u5143\u7D20\u7684top\u503C\u90FD\u80FD\u901A\u8FC7\u4E0A\u4E00\u4E2A\u5143\u7D20\u7684top\u503C + \u4E0A\u4E00\u4E2A\u5143\u7D20\u7684height\u8BA1\u7B97\u51FA\u6765\u3002</p><p>\u4E3E\u4E2A\u4F8B\u5B50\uFF0C\u5047\u8BBE\u6211\u4EEC\u9700\u8981\u77E5\u9053item14\u7684top\u503C</p><p>\uFF081\uFF09\u6211\u4EEC\u5148\u5728\u8BB0\u5F55\u91CC\u627E\u6709\u6CA1\u6709item13\u7684\u6570\u636E\uFF0C\u5982\u679C\u6709\uFF0C\u6211\u4EEC\u5C31\u62FFitem13.top + item13.heighht\u5F97\u5230item14\u7684top\u3002</p><p>\uFF082\uFF09\u5982\u679C\u8BB0\u5F55\u4E2D\uFF08\u7531\u4E0A\u56FE\u5F97\u77E5\u6211\u4EEC\u53EA\u8BB0\u5F55\u4E86item1-item10\u7684\u6570\u636E\uFF09\u6CA1\u6709\uFF0C\u6211\u4EEC\u5C31\u62FF\u5230\u8BB0\u5F55\u4E2D\u6700\u540E\u4E00\u4E2A\u5143\u7D20\u7684\u6570\u636E\uFF08item10\uFF09\u8FDB\u884C\u7D2F\u52A0\uFF0C\u5148\u8BA1\u7B97\u5E76\u8BB0\u5F55item11\u7684\uFF0C\u518D\u8BA1\u7B97\u5E76\u8BB0\u5F55item12\u7684\uFF0C\u518D\u8BA1\u7B97\u5E76\u8BB0\u5F55item13\u7684\uFF0C\u6700\u540E\u5C31\u662Fitem14\u7684\u4E86\u3002</p><ul><li>\u5B9E\u73B0</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span><span class="token punctuation">;</span>

<span class="token comment">// \u5143\u6570\u636E</span>
<span class="token keyword">const</span> measuredData <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">measuredDataMap</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">LastMeasuredItemIndex</span><span class="token operator">:</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">estimatedHeight</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">defaultEstimatedItemSize <span class="token operator">=</span> <span class="token number">50</span><span class="token punctuation">,</span> itemCount</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> measuredHeight <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> measuredDataMap<span class="token punctuation">,</span> LastMeasuredItemIndex <span class="token punctuation">}</span> <span class="token operator">=</span> measuredData<span class="token punctuation">;</span>
  <span class="token comment">// \u8BA1\u7B97\u5DF2\u7ECF\u83B7\u53D6\u8FC7\u771F\u5B9E\u9AD8\u5EA6\u7684\u9879\u7684\u9AD8\u5EA6\u4E4B\u548C</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>LastMeasuredItemIndex <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> lastMeasuredItem <span class="token operator">=</span> measuredDataMap<span class="token punctuation">[</span>LastMeasuredItemIndex<span class="token punctuation">]</span><span class="token punctuation">;</span>
    measuredHeight <span class="token operator">=</span> lastMeasuredItem<span class="token punctuation">.</span>offset <span class="token operator">+</span> lastMeasuredItem<span class="token punctuation">.</span>size<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u672A\u8BA1\u7B97\u8FC7\u771F\u5B9E\u9AD8\u5EA6\u7684\u9879\u6570</span>
  <span class="token keyword">const</span> unMeasuredItemsCount <span class="token operator">=</span> itemCount <span class="token operator">-</span> measuredData<span class="token punctuation">.</span>LastMeasuredItemIndex <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token comment">// \u9884\u6D4B\u603B\u9AD8\u5EA6</span>
  <span class="token keyword">const</span> totalEstimatedHeight <span class="token operator">=</span> measuredHeight <span class="token operator">+</span> unMeasuredItemsCount <span class="token operator">*</span> defaultEstimatedItemSize<span class="token punctuation">;</span>
  <span class="token keyword">return</span> totalEstimatedHeight<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token function-variable function">getItemMetaData</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">props<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> itemSize <span class="token punctuation">}</span> <span class="token operator">=</span> props<span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> measuredDataMap<span class="token punctuation">,</span> LastMeasuredItemIndex <span class="token punctuation">}</span> <span class="token operator">=</span> measuredData<span class="token punctuation">;</span>
  <span class="token comment">// \u5982\u679C\u5F53\u524D\u7D22\u5F15\u6BD4\u5DF2\u8BB0\u5F55\u7684\u7D22\u5F15\u8981\u5927\uFF0C\u8BF4\u660E\u8981\u8BA1\u7B97\u5F53\u524D\u7D22\u5F15\u7684\u9879\u7684size\u548Coffset</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">&gt;</span> LastMeasuredItemIndex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> offset <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token comment">// \u8BA1\u7B97\u5F53\u524D\u80FD\u8BA1\u7B97\u51FA\u6765\u7684\u6700\u5927offset\u503C</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>LastMeasuredItemIndex <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> lastMeasuredItem <span class="token operator">=</span> measuredDataMap<span class="token punctuation">[</span>LastMeasuredItemIndex<span class="token punctuation">]</span><span class="token punctuation">;</span>
      offset <span class="token operator">+=</span> lastMeasuredItem<span class="token punctuation">.</span>offset <span class="token operator">+</span> lastMeasuredItem<span class="token punctuation">.</span>size<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u8BA1\u7B97\u76F4\u5230index\u4E3A\u6B62\uFF0C\u6240\u6709\u672A\u8BA1\u7B97\u8FC7\u7684\u9879</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> LastMeasuredItemIndex <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> index<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> currentItemSize <span class="token operator">=</span> <span class="token function">itemSize</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
      measuredDataMap<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">size</span><span class="token operator">:</span> currentItemSize<span class="token punctuation">,</span> offset <span class="token punctuation">}</span><span class="token punctuation">;</span>
      offset <span class="token operator">+=</span> currentItemSize<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u66F4\u65B0\u5DF2\u8BA1\u7B97\u7684\u9879\u7684\u7D22\u5F15\u503C</span>
    measuredData<span class="token punctuation">.</span>LastMeasuredItemIndex <span class="token operator">=</span> index<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> measuredDataMap<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">getStartIndex</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">props<span class="token punctuation">,</span> scrollOffset</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> currentOffset <span class="token operator">=</span> <span class="token function">getItemMetaData</span><span class="token punctuation">(</span>props<span class="token punctuation">,</span> index<span class="token punctuation">)</span><span class="token punctuation">.</span>offset<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>currentOffset <span class="token operator">&gt;=</span> scrollOffset<span class="token punctuation">)</span> <span class="token keyword">return</span> index<span class="token punctuation">;</span>
    index<span class="token operator">++</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token function-variable function">getEndIndex</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">props<span class="token punctuation">,</span> startIndex</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> height <span class="token punctuation">}</span> <span class="token operator">=</span> props<span class="token punctuation">;</span>
  <span class="token comment">// \u83B7\u53D6\u53EF\u89C6\u533A\u5185\u5F00\u59CB\u7684\u9879</span>
  <span class="token keyword">const</span> startItem <span class="token operator">=</span> <span class="token function">getItemMetaData</span><span class="token punctuation">(</span>props<span class="token punctuation">,</span> startIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// \u53EF\u89C6\u533A\u5185\u6700\u5927\u7684offset\u503C</span>
  <span class="token keyword">const</span> maxOffset <span class="token operator">=</span> startItem<span class="token punctuation">.</span>offset <span class="token operator">+</span> height<span class="token punctuation">;</span>
  <span class="token comment">// \u5F00\u59CB\u9879\u7684\u4E0B\u4E00\u9879\u7684offset\uFF0C\u4E4B\u540E\u4E0D\u65AD\u7D2F\u52A0\u6B64offset\uFF0C\u77E5\u9053\u7B49\u4E8E\u6216\u8D85\u8FC7\u6700\u5927offset\uFF0C\u5C31\u662F\u627E\u5230\u7ED3\u675F\u7D22\u5F15\u4E86</span>
  <span class="token keyword">let</span> offset <span class="token operator">=</span> startItem<span class="token punctuation">.</span>offset <span class="token operator">+</span> startItem<span class="token punctuation">.</span>size<span class="token punctuation">;</span>
  <span class="token comment">// \u7ED3\u675F\u7D22\u5F15</span>
  <span class="token keyword">let</span> endIndex <span class="token operator">=</span> startIndex<span class="token punctuation">;</span>
  <span class="token comment">// \u7D2F\u52A0offset</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>offset <span class="token operator">&lt;=</span> maxOffset<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    endIndex<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> currentItem <span class="token operator">=</span> <span class="token function">getItemMetaData</span><span class="token punctuation">(</span>props<span class="token punctuation">,</span> endIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>
    offset <span class="token operator">+=</span> currentItem<span class="token punctuation">.</span>size<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> endIndex<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">getRangeToRender</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">props<span class="token punctuation">,</span> scrollOffset</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> itemCount <span class="token punctuation">}</span> <span class="token operator">=</span> props<span class="token punctuation">;</span>
  <span class="token keyword">const</span> startIndex <span class="token operator">=</span> <span class="token function">getStartIndex</span><span class="token punctuation">(</span>props<span class="token punctuation">,</span> scrollOffset<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> endIndex <span class="token operator">=</span> <span class="token function">getEndIndex</span><span class="token punctuation">(</span>props<span class="token punctuation">,</span> startIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">[</span>
    Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> startIndex <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>itemCount <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> endIndex <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    startIndex<span class="token punctuation">,</span>
    endIndex<span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">VariableSizeList</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> height<span class="token punctuation">,</span> width<span class="token punctuation">,</span> itemCount<span class="token punctuation">,</span> itemEstimatedSize<span class="token punctuation">,</span> <span class="token literal-property property">children</span><span class="token operator">:</span> Child <span class="token punctuation">}</span> <span class="token operator">=</span> props<span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>scrollOffset<span class="token punctuation">,</span> setScrollOffset<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> containerStyle <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">position</span><span class="token operator">:</span> <span class="token string">&#39;relative&#39;</span><span class="token punctuation">,</span>
    width<span class="token punctuation">,</span>
    height<span class="token punctuation">,</span>
    <span class="token literal-property property">overflow</span><span class="token operator">:</span> <span class="token string">&#39;auto&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">willChange</span><span class="token operator">:</span> <span class="token string">&#39;transform&#39;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> contentStyle <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token function">estimatedHeight</span><span class="token punctuation">(</span>itemEstimatedSize<span class="token punctuation">,</span> itemCount<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token string">&#39;100%&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
    
  <span class="token keyword">const</span> <span class="token function-variable function">getCurrentChildren</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">[</span>startIndex<span class="token punctuation">,</span> endIndex<span class="token punctuation">,</span> originStartIndex<span class="token punctuation">,</span> originEndIndex<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">getRangeToRender</span><span class="token punctuation">(</span>props<span class="token punctuation">,</span> scrollOffset<span class="token punctuation">)</span>
    <span class="token keyword">const</span> items <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> startIndex<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> endIndex<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> item <span class="token operator">=</span> <span class="token function">getItemMetaData</span><span class="token punctuation">(</span>props<span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">const</span> itemStyle <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">position</span><span class="token operator">:</span> <span class="token string">&#39;absolute&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">height</span><span class="token operator">:</span> item<span class="token punctuation">.</span>size<span class="token punctuation">,</span>
        <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token string">&#39;100%&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">top</span><span class="token operator">:</span> item<span class="token punctuation">.</span>offset<span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">;</span>
      items<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>
        <span class="token operator">&lt;</span>Child key<span class="token operator">=</span><span class="token punctuation">{</span>i<span class="token punctuation">}</span> index<span class="token operator">=</span><span class="token punctuation">{</span>i<span class="token punctuation">}</span> style<span class="token operator">=</span><span class="token punctuation">{</span>itemStyle<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
      <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> items<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">const</span> <span class="token function-variable function">scrollHandle</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> scrollTop <span class="token punctuation">}</span> <span class="token operator">=</span> event<span class="token punctuation">.</span>currentTarget<span class="token punctuation">;</span>
    <span class="token function">setScrollOffset</span><span class="token punctuation">(</span>scrollTop<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>div style<span class="token operator">=</span><span class="token punctuation">{</span>containerStyle<span class="token punctuation">}</span> onScroll<span class="token operator">=</span><span class="token punctuation">{</span>scrollHandle<span class="token punctuation">}</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>div style<span class="token operator">=</span><span class="token punctuation">{</span>contentStyle<span class="token punctuation">}</span><span class="token operator">&gt;</span>
        <span class="token punctuation">{</span><span class="token function">getCurrentChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span>
      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> VariableSizeList<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u96BE\u70B9\u7684\u5730\u65B9\u90FD\u7ED9\u4E86\u6CE8\u91CA\uFF0C\u5982\u679C\u4E00\u904D\u770B\u4E0D\u61C2\u7684\u8BDD\uFF0C\u53EF\u4EE5\u53BB\u8C03\u8BD5\u8C03\u8BD5\u3002</p><p>\u4EE5\u4E0A\u4EE3\u7801\u4E3B\u8981\u5199\u4E86\u4E2A\u601D\u8DEF\u548C\u529F\u80FD\uFF0C\u5176\u5B9E\u4F18\u5316\u70B9\u662F\u5F88\u591A\u7684\uFF0C\u8FD9\u91CC\u7ED9\u51FA\u4E24\u4E2A\u663E\u800C\u6613\u89C1\u7684\u4F18\u5316\u70B9\u3002</p><p>\u7F13\u5B58\u6BCF\u4E00\u4E2A\u5DF2\u7ECF\u8BA1\u7B97\u5B8C\u6210\u7684item\u7684\u6837\u5F0F\uFF0C\u8FD9\u6837\u56DE\u6EDA\u7684\u65F6\u5019\u4E0D\u7528\u91CD\u65B0\u8BA1\u7B97\u6837\u5F0F\u3002 getStartIndex\u53EF\u4EE5\u901A\u8FC7\u4E8C\u5206\u6CD5\u53BB\u4F18\u5316\u3002</p><h2 id="\u5143\u7D20\u52A8\u6001\u9AD8\u5EA6\u7684\u865A\u62DF\u5217\u8868" tabindex="-1"><a class="header-anchor" href="#\u5143\u7D20\u52A8\u6001\u9AD8\u5EA6\u7684\u865A\u62DF\u5217\u8868" aria-hidden="true">#</a> \u5143\u7D20\u52A8\u6001\u9AD8\u5EA6\u7684\u865A\u62DF\u5217\u8868</h2><p>\u6700\u540E\u8FD9\u4E00\u79CD\u865A\u62DF\u5217\u8868\u5176\u5B9E\u5C31\u662F\u57FA\u4E8E\u7B2C\u4E8C\u79CD\u6765\u5B9E\u73B0\u7684\uFF0C\u53EA\u4E0D\u8FC7\u589E\u52A0\u76D1\u542C\u5143\u7D20\u9AD8\u5EA6\u53D8\u5316\u4E8B\u4EF6\uFF0C\u5728\u67D0\u4E2A\u5143\u7D20\u53D1\u751F\u53D8\u5316\u7684\u65F6\u5019\u91CD\u65B0\u8BA1\u7B97\u5404\u79CD\u6570\u636E\u3002</p><ul><li>\u4F7F\u7528</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> items <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> itemCount <span class="token operator">=</span> <span class="token number">1000</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> itemCount<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> height <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">30</span> <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> style <span class="token operator">=</span> <span class="token punctuation">{</span>
        height<span class="token punctuation">,</span>
        <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token string">&#39;100%&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
    items<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>
        <span class="token operator">&lt;</span>div className<span class="token operator">=</span><span class="token punctuation">{</span>i <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">?</span> <span class="token string">&#39;list-item-odd&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;list-item-even&#39;</span><span class="token punctuation">}</span> style<span class="token operator">=</span><span class="token punctuation">{</span>style<span class="token punctuation">}</span><span class="token operator">&gt;</span>Row <span class="token punctuation">{</span>i<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
    <span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token function-variable function">Row</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> index <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> items<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u6CE8\u610F\uFF1A\u8FD9\u91CC\u6211\u6CA1\u6709\u628AitemSize\u4F20\u8FC7\u53BB</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>
        <span class="token operator">&lt;</span>VariableSizeList
          className<span class="token operator">=</span><span class="token string">&quot;list&quot;</span>
          height<span class="token operator">=</span><span class="token punctuation">{</span><span class="token number">200</span><span class="token punctuation">}</span>
          width<span class="token operator">=</span><span class="token punctuation">{</span><span class="token number">200</span><span class="token punctuation">}</span>
          itemCount<span class="token operator">=</span><span class="token punctuation">{</span>itemCount<span class="token punctuation">}</span>
          isDynamic
        <span class="token operator">&gt;</span>
            <span class="token punctuation">{</span>Row<span class="token punctuation">}</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>VariableSizeList<span class="token operator">&gt;</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4ECE\u4E0A\u9762\u4EE3\u7801\u53EF\u4EE5\u770B\u51FA\uFF0C\u6211\u4EEC\u6CA1\u5C06itemSize\u4F20\u8FC7\u53BB\uFF0C\u865A\u62DF\u5217\u8868\u662F\u4E0D\u77E5\u9053\u6BCF\u4E00\u4E2A\u5143\u7D20\u7684\u9AD8\u5EA6\u7684\uFF0C\u53EA\u6709\u5728\u6E32\u67D3\u7684\u65F6\u5019\u6267\u884C\u4E86Row\u624D\u77E5\u9053\u3002</p><ul><li>\u5B9E\u73B0</li></ul><p>\u5728\u4E0A\u9762\u90A3\u79CD\u865A\u62DF\u5217\u8868\u8FDB\u884C\u6539\u52A8</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u4FEE\u6539getCurrentChildren\u51FD\u6570</span>
<span class="token keyword">const</span> <span class="token function-variable function">getCurrentChildren</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>startIndex<span class="token punctuation">,</span> endIndex<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">getRangeToRender</span><span class="token punctuation">(</span>props<span class="token punctuation">,</span> scrollOffset<span class="token punctuation">)</span>
  <span class="token keyword">const</span> items <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> startIndex<span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> endIndex<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> item <span class="token operator">=</span> <span class="token function">getItemMetaData</span><span class="token punctuation">(</span>props<span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> itemStyle <span class="token operator">=</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">position</span><span class="token operator">:</span> <span class="token string">&#39;absolute&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">height</span><span class="token operator">:</span> item<span class="token punctuation">.</span>size<span class="token punctuation">,</span>
      <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token string">&#39;100%&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">top</span><span class="token operator">:</span> item<span class="token punctuation">.</span>offset<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    items<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>
      <span class="token operator">&lt;</span>ListItem key<span class="token operator">=</span><span class="token punctuation">{</span>i<span class="token punctuation">}</span> index<span class="token operator">=</span><span class="token punctuation">{</span>i<span class="token punctuation">}</span> style<span class="token operator">=</span><span class="token punctuation">{</span>itemStyle<span class="token punctuation">}</span> ComponentType<span class="token operator">=</span><span class="token punctuation">{</span>Child<span class="token punctuation">}</span> onSizeChange<span class="token operator">=</span><span class="token punctuation">{</span>sizeChangeHandle<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> items<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u589E\u52A0sizeChangeHandle</span>
<span class="token keyword">const</span> <span class="token function-variable function">sizeChangeHandle</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">index<span class="token punctuation">,</span> domNode</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> height <span class="token operator">=</span> domNode<span class="token punctuation">.</span>offsetHeight<span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> measuredDataMap<span class="token punctuation">,</span> lastMeasuredItemIndex <span class="token punctuation">}</span> <span class="token operator">=</span> measuredData<span class="token punctuation">;</span>
  <span class="token keyword">const</span> itemMetaData <span class="token operator">=</span> measuredDataMap<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">;</span>
  itemMetaData<span class="token punctuation">.</span>size <span class="token operator">=</span> height<span class="token punctuation">;</span>
  <span class="token keyword">let</span> offset <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> lastMeasuredItemIndex<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> itemMetaData <span class="token operator">=</span> measuredDataMap<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    itemMetaData<span class="token punctuation">.</span>offset <span class="token operator">=</span> offset<span class="token punctuation">;</span>
    offset <span class="token operator">+=</span> itemMetaData<span class="token punctuation">.</span>size<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u589E\u52A0\u4E00\u4E2AListItem\u7EC4\u4EF6</span>
<span class="token keyword">class</span> <span class="token class-name">ListItem</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>domRef <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">createRef</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>resizeObserver <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">componentDidMount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>domRef<span class="token punctuation">.</span>current<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> domNode <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>domRef<span class="token punctuation">.</span>current<span class="token punctuation">.</span>firstChild<span class="token punctuation">;</span>
      <span class="token keyword">const</span> <span class="token punctuation">{</span> index<span class="token punctuation">,</span> onSizeChange <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">;</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>resizeObserver <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ResizeObserver</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">onSizeChange</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> domNode<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>resizeObserver<span class="token punctuation">.</span><span class="token function">observe</span><span class="token punctuation">(</span>domNode<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token function">componentWillUnmount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>resizeObserver <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>domRef<span class="token punctuation">.</span>current<span class="token punctuation">.</span>firstChild<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>resizeObserver<span class="token punctuation">.</span><span class="token function">unobserve</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>domRef<span class="token punctuation">.</span>current<span class="token punctuation">.</span>firstChild<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> index<span class="token punctuation">,</span> style<span class="token punctuation">,</span> ComponentType <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>
      <span class="token operator">&lt;</span>div style<span class="token operator">=</span><span class="token punctuation">{</span>style<span class="token punctuation">}</span> ref<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>domRef<span class="token punctuation">}</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>ComponentType index<span class="token operator">=</span><span class="token punctuation">{</span>index<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
    <span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u5B8C\u6574\u4EE3\u7801</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span><span class="token punctuation">;</span>

<span class="token comment">// \u5143\u6570\u636E</span>
<span class="token keyword">const</span> measuredData <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">measuredDataMap</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">lastMeasuredItemIndex</span><span class="token operator">:</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">estimatedHeight</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">defaultEstimatedItemSize <span class="token operator">=</span> <span class="token number">50</span><span class="token punctuation">,</span> itemCount</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> measuredHeight <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> measuredDataMap<span class="token punctuation">,</span> lastMeasuredItemIndex <span class="token punctuation">}</span> <span class="token operator">=</span> measuredData<span class="token punctuation">;</span>
  <span class="token comment">// \u8BA1\u7B97\u5DF2\u7ECF\u83B7\u53D6\u8FC7\u771F\u5B9E\u9AD8\u5EA6\u7684\u9879\u7684\u9AD8\u5EA6\u4E4B\u548C</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>lastMeasuredItemIndex <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> lastMeasuredItem <span class="token operator">=</span> measuredDataMap<span class="token punctuation">[</span>lastMeasuredItemIndex<span class="token punctuation">]</span><span class="token punctuation">;</span>
    measuredHeight <span class="token operator">=</span> lastMeasuredItem<span class="token punctuation">.</span>offset <span class="token operator">+</span> lastMeasuredItem<span class="token punctuation">.</span>size<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u672A\u8BA1\u7B97\u8FC7\u771F\u5B9E\u9AD8\u5EA6\u7684\u9879\u6570</span>
  <span class="token keyword">const</span> unMeasuredItemsCount <span class="token operator">=</span> itemCount <span class="token operator">-</span> measuredData<span class="token punctuation">.</span>lastMeasuredItemIndex <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token comment">// \u9884\u6D4B\u603B\u9AD8\u5EA6</span>
  <span class="token keyword">const</span> totalEstimatedHeight <span class="token operator">=</span> measuredHeight <span class="token operator">+</span> unMeasuredItemsCount <span class="token operator">*</span> defaultEstimatedItemSize<span class="token punctuation">;</span>
  <span class="token keyword">return</span> totalEstimatedHeight<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token function-variable function">getItemMetaData</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">props<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> itemSize <span class="token punctuation">}</span> <span class="token operator">=</span> props<span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> measuredDataMap<span class="token punctuation">,</span> lastMeasuredItemIndex <span class="token punctuation">}</span> <span class="token operator">=</span> measuredData<span class="token punctuation">;</span>
  <span class="token comment">// \u5982\u679C\u5F53\u524D\u7D22\u5F15\u6BD4\u5DF2\u8BB0\u5F55\u7684\u7D22\u5F15\u8981\u5927\uFF0C\u8BF4\u660E\u8981\u8BA1\u7B97\u5F53\u524D\u7D22\u5F15\u7684\u9879\u7684size\u548Coffset</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">&gt;</span> lastMeasuredItemIndex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> offset <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token comment">// \u8BA1\u7B97\u5F53\u524D\u80FD\u8BA1\u7B97\u51FA\u6765\u7684\u6700\u5927offset\u503C</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>lastMeasuredItemIndex <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> lastMeasuredItem <span class="token operator">=</span> measuredDataMap<span class="token punctuation">[</span>lastMeasuredItemIndex<span class="token punctuation">]</span><span class="token punctuation">;</span>
      offset <span class="token operator">+=</span> lastMeasuredItem<span class="token punctuation">.</span>offset <span class="token operator">+</span> lastMeasuredItem<span class="token punctuation">.</span>size<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u8BA1\u7B97\u76F4\u5230index\u4E3A\u6B62\uFF0C\u6240\u6709\u672A\u8BA1\u7B97\u8FC7\u7684\u9879</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> lastMeasuredItemIndex <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> index<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> currentItemSize <span class="token operator">=</span> itemSize <span class="token operator">?</span> <span class="token function">itemSize</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token number">50</span><span class="token punctuation">;</span>
      measuredDataMap<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">size</span><span class="token operator">:</span> currentItemSize<span class="token punctuation">,</span> offset <span class="token punctuation">}</span><span class="token punctuation">;</span>
      offset <span class="token operator">+=</span> currentItemSize<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u66F4\u65B0\u5DF2\u8BA1\u7B97\u7684\u9879\u7684\u7D22\u5F15\u503C</span>
    measuredData<span class="token punctuation">.</span>lastMeasuredItemIndex <span class="token operator">=</span> index<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> measuredDataMap<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">getStartIndex</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">props<span class="token punctuation">,</span> scrollOffset</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> currentOffset <span class="token operator">=</span> <span class="token function">getItemMetaData</span><span class="token punctuation">(</span>props<span class="token punctuation">,</span> index<span class="token punctuation">)</span><span class="token punctuation">.</span>offset<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>currentOffset <span class="token operator">&gt;=</span> scrollOffset<span class="token punctuation">)</span> <span class="token keyword">return</span> index<span class="token punctuation">;</span>
    index<span class="token operator">++</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token function-variable function">getEndIndex</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">props<span class="token punctuation">,</span> startIndex</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> height <span class="token punctuation">}</span> <span class="token operator">=</span> props<span class="token punctuation">;</span>
  <span class="token comment">// \u83B7\u53D6\u53EF\u89C6\u533A\u5185\u5F00\u59CB\u7684\u9879</span>
  <span class="token keyword">const</span> startItem <span class="token operator">=</span> <span class="token function">getItemMetaData</span><span class="token punctuation">(</span>props<span class="token punctuation">,</span> startIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// \u53EF\u89C6\u533A\u5185\u6700\u5927\u7684offset\u503C</span>
  <span class="token keyword">const</span> maxOffset <span class="token operator">=</span> startItem<span class="token punctuation">.</span>offset <span class="token operator">+</span> height<span class="token punctuation">;</span>
  <span class="token comment">// \u5F00\u59CB\u9879\u7684\u4E0B\u4E00\u9879\u7684offset\uFF0C\u4E4B\u540E\u4E0D\u65AD\u7D2F\u52A0\u6B64offset\uFF0C\u77E5\u9053\u7B49\u4E8E\u6216\u8D85\u8FC7\u6700\u5927offset\uFF0C\u5C31\u662F\u627E\u5230\u7ED3\u675F\u7D22\u5F15\u4E86</span>
  <span class="token keyword">let</span> offset <span class="token operator">=</span> startItem<span class="token punctuation">.</span>offset <span class="token operator">+</span> startItem<span class="token punctuation">.</span>size<span class="token punctuation">;</span>
  <span class="token comment">// \u7ED3\u675F\u7D22\u5F15</span>
  <span class="token keyword">let</span> endIndex <span class="token operator">=</span> startIndex<span class="token punctuation">;</span>
  <span class="token comment">// \u7D2F\u52A0offset</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>offset <span class="token operator">&lt;=</span> maxOffset<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    endIndex<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> currentItem <span class="token operator">=</span> <span class="token function">getItemMetaData</span><span class="token punctuation">(</span>props<span class="token punctuation">,</span> endIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>
    offset <span class="token operator">+=</span> currentItem<span class="token punctuation">.</span>size<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> endIndex<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">getRangeToRender</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">props<span class="token punctuation">,</span> scrollOffset</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> itemCount <span class="token punctuation">}</span> <span class="token operator">=</span> props<span class="token punctuation">;</span>
  <span class="token keyword">const</span> startIndex <span class="token operator">=</span> <span class="token function">getStartIndex</span><span class="token punctuation">(</span>props<span class="token punctuation">,</span> scrollOffset<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> endIndex <span class="token operator">=</span> <span class="token function">getEndIndex</span><span class="token punctuation">(</span>props<span class="token punctuation">,</span> startIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">[</span>
    Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> startIndex <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>itemCount <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> endIndex <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    startIndex<span class="token punctuation">,</span>
    endIndex<span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name">ListItem</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>domRef <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">createRef</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>resizeObserver <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">componentDidMount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>domRef<span class="token punctuation">.</span>current<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> domNode <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>domRef<span class="token punctuation">.</span>current<span class="token punctuation">.</span>firstChild<span class="token punctuation">;</span>
      <span class="token keyword">const</span> <span class="token punctuation">{</span> index<span class="token punctuation">,</span> onSizeChange <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">;</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>resizeObserver <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ResizeObserver</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">onSizeChange</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> domNode<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>resizeObserver<span class="token punctuation">.</span><span class="token function">observe</span><span class="token punctuation">(</span>domNode<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token function">componentWillUnmount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>resizeObserver <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>domRef<span class="token punctuation">.</span>current<span class="token punctuation">.</span>firstChild<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>resizeObserver<span class="token punctuation">.</span><span class="token function">unobserve</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>domRef<span class="token punctuation">.</span>current<span class="token punctuation">.</span>firstChild<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> index<span class="token punctuation">,</span> style<span class="token punctuation">,</span> ComponentType <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>
      <span class="token operator">&lt;</span>div style<span class="token operator">=</span><span class="token punctuation">{</span>style<span class="token punctuation">}</span> ref<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>domRef<span class="token punctuation">}</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>ComponentType index<span class="token operator">=</span><span class="token punctuation">{</span>index<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
    <span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token function-variable function">VariableSizeList</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> height<span class="token punctuation">,</span> width<span class="token punctuation">,</span> itemCount<span class="token punctuation">,</span> itemEstimatedSize<span class="token punctuation">,</span> <span class="token literal-property property">children</span><span class="token operator">:</span> Child <span class="token punctuation">}</span> <span class="token operator">=</span> props<span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>scrollOffset<span class="token punctuation">,</span> setScrollOffset<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span><span class="token punctuation">,</span> setState<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> containerStyle <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">position</span><span class="token operator">:</span> <span class="token string">&#39;relative&#39;</span><span class="token punctuation">,</span>
    width<span class="token punctuation">,</span>
    height<span class="token punctuation">,</span>
    <span class="token literal-property property">overflow</span><span class="token operator">:</span> <span class="token string">&#39;auto&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">willChange</span><span class="token operator">:</span> <span class="token string">&#39;transform&#39;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> contentStyle <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token function">estimatedHeight</span><span class="token punctuation">(</span>itemEstimatedSize<span class="token punctuation">,</span> itemCount<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token string">&#39;100%&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">sizeChangeHandle</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">index<span class="token punctuation">,</span> domNode</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> height <span class="token operator">=</span> domNode<span class="token punctuation">.</span>offsetHeight<span class="token punctuation">;</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> measuredDataMap<span class="token punctuation">,</span> lastMeasuredItemIndex <span class="token punctuation">}</span> <span class="token operator">=</span> measuredData<span class="token punctuation">;</span>
    <span class="token keyword">const</span> itemMetaData <span class="token operator">=</span> measuredDataMap<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">;</span>
    itemMetaData<span class="token punctuation">.</span>size <span class="token operator">=</span> height<span class="token punctuation">;</span>
    <span class="token keyword">let</span> offset <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> lastMeasuredItemIndex<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> itemMetaData <span class="token operator">=</span> measuredDataMap<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
      itemMetaData<span class="token punctuation">.</span>offset <span class="token operator">=</span> offset<span class="token punctuation">;</span>
      offset <span class="token operator">+=</span> itemMetaData<span class="token punctuation">.</span>size<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
    
  <span class="token keyword">const</span> <span class="token function-variable function">getCurrentChildren</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">[</span>startIndex<span class="token punctuation">,</span> endIndex<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">getRangeToRender</span><span class="token punctuation">(</span>props<span class="token punctuation">,</span> scrollOffset<span class="token punctuation">)</span>
    <span class="token keyword">const</span> items <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> startIndex<span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> endIndex<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> item <span class="token operator">=</span> <span class="token function">getItemMetaData</span><span class="token punctuation">(</span>props<span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">const</span> itemStyle <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">position</span><span class="token operator">:</span> <span class="token string">&#39;absolute&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">height</span><span class="token operator">:</span> item<span class="token punctuation">.</span>size<span class="token punctuation">,</span>
        <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token string">&#39;100%&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">top</span><span class="token operator">:</span> item<span class="token punctuation">.</span>offset<span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">;</span>
      items<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>
        <span class="token operator">&lt;</span>ListItem key<span class="token operator">=</span><span class="token punctuation">{</span>i<span class="token punctuation">}</span> index<span class="token operator">=</span><span class="token punctuation">{</span>i<span class="token punctuation">}</span> style<span class="token operator">=</span><span class="token punctuation">{</span>itemStyle<span class="token punctuation">}</span> ComponentType<span class="token operator">=</span><span class="token punctuation">{</span>Child<span class="token punctuation">}</span> onSizeChange<span class="token operator">=</span><span class="token punctuation">{</span>sizeChangeHandle<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
      <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> items<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">const</span> <span class="token function-variable function">scrollHandle</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> scrollTop <span class="token punctuation">}</span> <span class="token operator">=</span> event<span class="token punctuation">.</span>currentTarget<span class="token punctuation">;</span>
    <span class="token function">setScrollOffset</span><span class="token punctuation">(</span>scrollTop<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>div style<span class="token operator">=</span><span class="token punctuation">{</span>containerStyle<span class="token punctuation">}</span> onScroll<span class="token operator">=</span><span class="token punctuation">{</span>scrollHandle<span class="token punctuation">}</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>div style<span class="token operator">=</span><span class="token punctuation">{</span>contentStyle<span class="token punctuation">}</span><span class="token operator">&gt;</span>
        <span class="token punctuation">{</span><span class="token function">getCurrentChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span>
      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> VariableSizeList<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,46),o=[e];function c(l,i){return s(),a("div",null,o)}const r=n(p,[["render",c],["__file","52.html.vue"]]);export{r as default};
