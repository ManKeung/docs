import{_ as n,o as s,c as a,a as p}from"./app.aec40525.js";const t={},o=p(`<h1 id="_10\u79CDjavascript\u4EE3\u7801\u590D\u7528\u6A21\u5F0F" tabindex="-1"><a class="header-anchor" href="#_10\u79CDjavascript\u4EE3\u7801\u590D\u7528\u6A21\u5F0F" aria-hidden="true">#</a> 10\u79CDJavaScript\u4EE3\u7801\u590D\u7528\u6A21\u5F0F</h1><h2 id="\u6A21\u5F0F1-\u539F\u578B\u7EE7\u627F" tabindex="-1"><a class="header-anchor" href="#\u6A21\u5F0F1-\u539F\u578B\u7EE7\u627F" aria-hidden="true">#</a> \u6A21\u5F0F1\uFF1A\u539F\u578B\u7EE7\u627F</h2><p>\u539F\u578B\u7EE7\u627F\u662F\u8BA9\u7236\u5BF9\u8C61\u4F5C\u4E3A\u5B50\u5BF9\u8C61\u7684\u539F\u578B\uFF0C\u4ECE\u800C\u8FBE\u5230\u7EE7\u627F\u7684\u76EE\u7684\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">object</span><span class="token punctuation">(</span><span class="token parameter">o</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">function</span> <span class="token constant">F</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>

    <span class="token class-name">F</span><span class="token punctuation">.</span>prototype <span class="token operator">=</span> o<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">F</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u8981\u7EE7\u627F\u7684\u7236\u5BF9\u8C61</span>
<span class="token keyword">var</span> parent <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;Papa&quot;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// \u65B0\u5BF9\u8C61</span>
<span class="token keyword">var</span> child <span class="token operator">=</span> <span class="token function">object</span><span class="token punctuation">(</span>parent<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u6D4B\u8BD5</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>child<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;Papa&quot;</span>


<span class="token comment">// \u7236\u6784\u9020\u51FD\u6570</span>
<span class="token keyword">function</span> <span class="token function">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// an &quot;own&quot; property</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&quot;Adam&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u7ED9\u539F\u578B\u6DFB\u52A0\u65B0\u5C5E\u6027</span>
<span class="token class-name">Person</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">getName</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token comment">// \u521B\u5EFA\u65B0person</span>
<span class="token keyword">var</span> papa <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u7EE7\u627F</span>
<span class="token keyword">var</span> kid <span class="token operator">=</span> <span class="token function">object</span><span class="token punctuation">(</span>papa<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>kid<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;Adam&quot;</span>


<span class="token comment">// \u7236\u6784\u9020\u51FD\u6570</span>
<span class="token keyword">function</span> <span class="token function">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// an &quot;own&quot; property</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&quot;Adam&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u7ED9\u539F\u578B\u6DFB\u52A0\u65B0\u5C5E\u6027</span>
<span class="token class-name">Person</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">getName</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token comment">// \u7EE7\u627F</span>
<span class="token keyword">var</span> kid <span class="token operator">=</span> <span class="token function">object</span><span class="token punctuation">(</span><span class="token class-name">Person</span><span class="token punctuation">.</span>prototype<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> kid<span class="token punctuation">.</span>getName<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;function&quot;,\u56E0\u4E3A\u662F\u5728\u539F\u578B\u91CC\u5B9A\u4E49\u7684</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> kid<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;undefined&quot;, \u56E0\u4E3A\u53EA\u7EE7\u627F\u4E86\u539F\u578B</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u540C\u65F6\uFF0CECMAScript5\u4E5F\u63D0\u4F9B\u4E86\u7C7B\u4F3C\u7684\u4E00\u4E2A\u65B9\u6CD5\u53EB\u505AObject.create\u7528\u4E8E\u7EE7\u627F\u5BF9\u8C61\uFF0C\u7528\u6CD5\u5982\u4E0B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">/* \u4F7F\u7528\u65B0\u7248\u7684ECMAScript 5\u63D0\u4F9B\u7684\u529F\u80FD */</span>
<span class="token keyword">var</span> child <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>parent<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> child <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>parent<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">}</span> <span class="token comment">// ECMA5 descriptor});</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>child<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u800C\u4E14\uFF0C\u4E5F\u53EF\u4EE5\u66F4\u7EC6\u7C92\u5EA6\u5730\u5728\u7B2C\u4E8C\u4E2A\u53C2\u6570\u4E0A\u5B9A\u4E49\u5C5E\u6027\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u9996\u5148\uFF0C\u5B9A\u4E49\u4E00\u4E2A\u65B0\u5BF9\u8C61manvar man = Object.create(null);</span>

<span class="token comment">// \u63A5\u7740\uFF0C\u521B\u5EFA\u5305\u542B\u5C5E\u6027\u7684\u914D\u7F6E\u8BBE\u7F6E</span>
<span class="token comment">// \u5C5E\u6027\u8BBE\u7F6E\u4E3A\u53EF\u5199\uFF0C\u53EF\u679A\u4E3E\uFF0C\u53EF\u914D\u7F6E</span>
<span class="token keyword">var</span> config <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">writable</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token literal-property property">enumerable</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token literal-property property">configurable</span><span class="token operator">:</span> <span class="token boolean">true</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// \u901A\u5E38\u4F7F\u7528Object.defineProperty()\u6765\u6DFB\u52A0\u65B0\u5C5E\u6027(ECMAScript5\u652F\u6301\uFF09</span>
<span class="token comment">// \u73B0\u5728\uFF0C\u4E3A\u4E86\u65B9\u4FBF\uFF0C\u6211\u4EEC\u81EA\u5B9A\u4E49\u4E00\u4E2A\u5C01\u88C5\u51FD\u6570</span>
<span class="token keyword">var</span> <span class="token function-variable function">defineProp</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">obj<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    config<span class="token punctuation">.</span>value <span class="token operator">=</span> value<span class="token punctuation">;</span>
    Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> key<span class="token punctuation">,</span> config<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">defineProp</span><span class="token punctuation">(</span>man<span class="token punctuation">,</span> <span class="token string">&#39;car&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Delorean&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">defineProp</span><span class="token punctuation">(</span>man<span class="token punctuation">,</span> <span class="token string">&#39;dob&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;1981&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">defineProp</span><span class="token punctuation">(</span>man<span class="token punctuation">,</span> <span class="token string">&#39;beard&#39;</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6240\u4EE5\uFF0C\u7EE7\u627F\u5C31\u8FD9\u4E48\u53EF\u4EE5\u505A\u4E86\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> driver <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span> man <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">defineProp</span> <span class="token punctuation">(</span>driver<span class="token punctuation">,</span> <span class="token string">&#39;topSpeed&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;100mph&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
driver<span class="token punctuation">.</span>topSpeed <span class="token comment">// 100mph</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F46\u662F\u6709\u4E2A\u5730\u65B9\u9700\u8981\u6CE8\u610F\uFF0C\u5C31\u662FObject.create(null)\u521B\u5EFA\u7684\u5BF9\u8C61\u7684\u539F\u578B\u4E3Aundefined\uFF0C\u4E5F\u5C31\u662F\u6CA1\u6709toString\u548CvalueOf\u65B9\u6CD5\uFF0C\u6240\u4EE5alert(man);\u7684\u65F6\u5019\u4F1A\u51FA\u9519\uFF0C\u4F46alert(man.car);\u662F\u6CA1\u95EE\u9898\u7684\u3002</p><h2 id="\u6A21\u5F0F2-\u590D\u5236\u6240\u6709\u5C5E\u6027\u8FDB\u884C\u7EE7\u627F" tabindex="-1"><a class="header-anchor" href="#\u6A21\u5F0F2-\u590D\u5236\u6240\u6709\u5C5E\u6027\u8FDB\u884C\u7EE7\u627F" aria-hidden="true">#</a> \u6A21\u5F0F2\uFF1A\u590D\u5236\u6240\u6709\u5C5E\u6027\u8FDB\u884C\u7EE7\u627F</h2><p>\u8FD9\u79CD\u65B9\u5F0F\u7684\u7EE7\u627F\u5C31\u662F\u5C06\u7236\u5BF9\u8C61\u91CC\u6240\u6709\u7684\u5C5E\u6027\u90FD\u590D\u5236\u5230\u5B50\u5BF9\u8C61\u4E0A\uFF0C\u4E00\u822C\u5B50\u5BF9\u8C61\u53EF\u4EE5\u4F7F\u7528\u7236\u5BF9\u8C61\u7684\u6570\u636E\u3002 \u5148\u6765\u770B\u4E00\u4E2A\u6D45\u62F7\u8D1D\u7684\u4F8B\u5B50\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">/* \u6D45\u62F7\u8D1D */</span>
<span class="token keyword">function</span> <span class="token function">extend</span><span class="token punctuation">(</span><span class="token parameter">parent<span class="token punctuation">,</span> child</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> i<span class="token punctuation">;</span>
    child <span class="token operator">=</span> child <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token keyword">in</span> parent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>parent<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            child<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> parent<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> child<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">var</span> dad <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;Adam&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> kid <span class="token operator">=</span> <span class="token function">extend</span><span class="token punctuation">(</span>dad<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>kid<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;Adam&quot;</span>

<span class="token keyword">var</span> dad <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">counts</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token literal-property property">reads</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">paper</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> kid <span class="token operator">=</span> <span class="token function">extend</span><span class="token punctuation">(</span>dad<span class="token punctuation">)</span><span class="token punctuation">;</span>
kid<span class="token punctuation">.</span>counts<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>dad<span class="token punctuation">.</span>counts<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;1,2,3,4&quot;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>dad<span class="token punctuation">.</span>reads <span class="token operator">===</span> kid<span class="token punctuation">.</span>reads<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4EE3\u7801\u7684\u6700\u540E\u4E00\u884C\uFF0C\u4F60\u53EF\u4EE5\u53D1\u73B0dad\u548Ckid\u7684reads\u662F\u4E00\u6837\u7684\uFF0C\u4E5F\u5C31\u662F\u4ED6\u4EEC\u4F7F\u7528\u7684\u662F\u540C\u4E00\u4E2A\u5F15\u7528\uFF0C\u8FD9\u4E5F\u5C31\u662F\u6D45\u62F7\u8D1D\u5E26\u6765\u7684\u95EE\u9898\u3002</p><p>\u6211\u4EEC\u518D\u6765\u770B\u4E00\u4E0B\u6DF1\u62F7\u8D1D\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">/* \u6DF1\u62F7\u8D1D */</span>
<span class="token keyword">function</span> <span class="token function">extendDeep</span><span class="token punctuation">(</span><span class="token parameter">parent<span class="token punctuation">,</span> child</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> i<span class="token punctuation">,</span>
        toStr <span class="token operator">=</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>toString<span class="token punctuation">,</span>
        astr <span class="token operator">=</span> <span class="token string">&quot;[object Array]&quot;</span><span class="token punctuation">;</span>

    child <span class="token operator">=</span> child <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token keyword">in</span> parent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>parent<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> parent<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">&#39;object&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                child<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token function">toStr</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>parent<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">===</span> astr<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
                <span class="token function">extendDeep</span><span class="token punctuation">(</span>parent<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> child<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                child<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> parent<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> child<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">var</span> dad <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">counts</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token literal-property property">reads</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">paper</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> kid <span class="token operator">=</span> <span class="token function">extendDeep</span><span class="token punctuation">(</span>dad<span class="token punctuation">)</span><span class="token punctuation">;</span>

kid<span class="token punctuation">.</span>counts<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>kid<span class="token punctuation">.</span>counts<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;1,2,3,4&quot;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>dad<span class="token punctuation">.</span>counts<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;1,2,3&quot;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>dad<span class="token punctuation">.</span>reads <span class="token operator">===</span> kid<span class="token punctuation">.</span>reads<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
kid<span class="token punctuation">.</span>reads<span class="token punctuation">.</span>paper <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6DF1\u62F7\u8D1D\u4EE5\u540E\uFF0C\u4E24\u4E2A\u503C\u5C31\u4E0D\u76F8\u7B49\u4E86\uFF0Cbingo\uFF01</p><h2 id="\u6A21\u5F0F3-\u6DF7\u5408-mix-in" tabindex="-1"><a class="header-anchor" href="#\u6A21\u5F0F3-\u6DF7\u5408-mix-in" aria-hidden="true">#</a> \u6A21\u5F0F3\uFF1A\u6DF7\u5408\uFF08mix-in\uFF09</h2><p>\u6DF7\u5165\u5C31\u662F\u5C06\u4E00\u4E2A\u5BF9\u8C61\u7684\u4E00\u4E2A\u6216\u591A\u4E2A\uFF08\u6216\u5168\u90E8\uFF09\u5C5E\u6027\uFF08\u6216\u65B9\u6CD5\uFF09\u590D\u5236\u5230\u53E6\u5916\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u6211\u4EEC\u4E3E\u4E00\u4E2A\u4F8B\u5B50\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">mix</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> arg<span class="token punctuation">,</span> prop<span class="token punctuation">,</span> child <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>arg <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> arg <span class="token operator">&lt;</span> arguments<span class="token punctuation">.</span>length<span class="token punctuation">;</span> arg <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span>prop <span class="token keyword">in</span> arguments<span class="token punctuation">[</span>arg<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>arguments<span class="token punctuation">[</span>arg<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>prop<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                child<span class="token punctuation">[</span>prop<span class="token punctuation">]</span> <span class="token operator">=</span> arguments<span class="token punctuation">[</span>arg<span class="token punctuation">]</span><span class="token punctuation">[</span>prop<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> child<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">var</span> cake <span class="token operator">=</span> <span class="token function">mix</span><span class="token punctuation">(</span>
    <span class="token punctuation">{</span> <span class="token literal-property property">eggs</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token literal-property property">large</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token literal-property property">butter</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">salted</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token literal-property property">flour</span><span class="token operator">:</span> <span class="token string">&#39;3 cups&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token literal-property property">sugar</span><span class="token operator">:</span> <span class="token string">&#39;sure!&#39;</span> <span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">dir</span><span class="token punctuation">(</span>cake<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>mix\u51FD\u6570\u5C06\u6240\u4F20\u5165\u7684\u6240\u6709\u53C2\u6570\u7684\u5B50\u5C5E\u6027\u90FD\u590D\u5236\u5230child\u5BF9\u8C61\u91CC\uFF0C\u4EE5\u4FBF\u4EA7\u751F\u4E00\u4E2A\u65B0\u5BF9\u8C61\u3002 \u90A3\u5982\u4F55\u6211\u4EEC\u53EA\u60F3\u6DF7\u5165\u90E8\u5206\u5C5E\u6027\u5462\uFF1F\u8BE5\u4E2A\u5982\u4F55\u505A\uFF1F\u5176\u5B9E\u6211\u4EEC\u53EF\u4EE5\u4F7F\u7528\u591A\u4F59\u7684\u53C2\u6570\u6765\u5B9A\u4E49\u9700\u8981\u6DF7\u5165\u7684\u5C5E\u6027\uFF0C\u4F8B\u5982mix\uFF08child,parent,method1,method2)\u8FD9\u6837\u5C31\u53EF\u4EE5\u53EA\u5C06parent\u91CC\u7684method1\u548Cmethod2\u6DF7\u5165\u5230child\u91CC\u3002\u4E0A\u4EE3\u7801\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// Car </span>
<span class="token keyword">var</span> <span class="token function-variable function">Car</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">settings</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>model <span class="token operator">=</span> settings<span class="token punctuation">.</span>model <span class="token operator">||</span> <span class="token string">&#39;no model provided&#39;</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>colour <span class="token operator">=</span> settings<span class="token punctuation">.</span>colour <span class="token operator">||</span> <span class="token string">&#39;no colour provided&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// Mixin</span>
<span class="token keyword">var</span> <span class="token function-variable function">Mixin</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token class-name">Mixin</span><span class="token punctuation">.</span>prototype <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token function-variable function">driveForward</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;drive forward&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">driveBackward</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;drive backward&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>


<span class="token comment">// \u5B9A\u4E49\u76842\u4E2A\u53C2\u6570\u5206\u522B\u662F\u88AB\u6DF7\u5165\u7684\u5BF9\u8C61\uFF08reciving\uFF09\u548C\u4ECE\u54EA\u91CC\u6DF7\u5165\u7684\u5BF9\u8C61\uFF08giving)</span>
<span class="token keyword">function</span> <span class="token function">augment</span><span class="token punctuation">(</span><span class="token parameter">receivingObj<span class="token punctuation">,</span> givingObj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5982\u679C\u63D0\u4F9B\u4E86\u6307\u5B9A\u7684\u65B9\u6CD5\u540D\u79F0\u7684\u8BDD\uFF0C\u4E5F\u5C31\u662F\u53C2\u6570\u591A\u4F593\u4E2A</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>arguments<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">,</span> len <span class="token operator">=</span> arguments<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            receivingObj<span class="token punctuation">.</span>prototype<span class="token punctuation">[</span>arguments<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> givingObj<span class="token punctuation">.</span>prototype<span class="token punctuation">[</span>arguments<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u5982\u679C\u4E0D\u6307\u5B9A\u7B2C3\u4E2A\u53C2\u6570\uFF0C\u6216\u8005\u66F4\u591A\u53C2\u6570\uFF0C\u5C31\u6DF7\u5165\u6240\u6709\u7684\u65B9\u6CD5</span>
    <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> methodName <span class="token keyword">in</span> givingObj<span class="token punctuation">.</span>prototype<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u68C0\u67E5receiving\u5BF9\u8C61\u5185\u90E8\u4E0D\u5305\u542B\u8981\u6DF7\u5165\u7684\u540D\u5B57\uFF0C\u5982\u4F55\u5305\u542B\u5C31\u4E0D\u6DF7\u5165\u4E86</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>receivingObj<span class="token punctuation">.</span>prototype<span class="token punctuation">[</span>methodName<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                receivingObj<span class="token punctuation">.</span>prototype<span class="token punctuation">[</span>methodName<span class="token punctuation">]</span> <span class="token operator">=</span> givingObj<span class="token punctuation">.</span>prototype<span class="token punctuation">[</span>methodName<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u7ED9Car\u6DF7\u5165\u5C5E\u6027\uFF0C\u4F46\u662F\u503C\u6DF7\u5165&#39;driveForward&#39; \u548C &#39;driveBackward&#39;*/</span>
<span class="token function">augment</span><span class="token punctuation">(</span>Car<span class="token punctuation">,</span> Mixin<span class="token punctuation">,</span> <span class="token string">&#39;driveForward&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;driveBackward&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u521B\u5EFA\u65B0\u5BF9\u8C61Car</span>
<span class="token keyword">var</span> vehicle <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Car</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">model</span><span class="token operator">:</span> <span class="token string">&#39;Ford Escort&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">colour</span><span class="token operator">:</span> <span class="token string">&#39;blue&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u6D4B\u8BD5\u662F\u5426\u6210\u529F\u5F97\u5230\u6DF7\u5165\u7684\u65B9\u6CD5</span>
vehicle<span class="token punctuation">.</span><span class="token function">driveForward</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
vehicle<span class="token punctuation">.</span><span class="token function">driveBackward</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8BE5\u65B9\u6CD5\u4F7F\u7528\u8D77\u6765\u5C31\u6BD4\u8F83\u7075\u6D3B\u4E86\u3002</p><h2 id="\u6A21\u5F0F4-\u501F\u7528\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u6A21\u5F0F4-\u501F\u7528\u65B9\u6CD5" aria-hidden="true">#</a> \u6A21\u5F0F4\uFF1A\u501F\u7528\u65B9\u6CD5</h2><p>\u4E00\u4E2A\u5BF9\u8C61\u501F\u7528\u53E6\u5916\u4E00\u4E2A\u5BF9\u8C61\u7684\u4E00\u4E2A\u6216\u4E24\u4E2A\u65B9\u6CD5\uFF0C\u800C\u8FD9\u4E24\u4E2A\u5BF9\u8C61\u4E4B\u95F4\u4E0D\u4F1A\u6709\u4EC0\u4E48\u76F4\u63A5\u8054\u7CFB\u3002\u4E0D\u7528\u591A\u89E3\u91CA\uFF0C\u76F4\u63A5\u7528\u4EE3\u7801\u89E3\u91CA\u5427\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> one <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;object&#39;</span><span class="token punctuation">,</span>
    <span class="token function-variable function">say</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">greet</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> greet <span class="token operator">+</span> <span class="token string">&#39;, &#39;</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// \u6D4B\u8BD5</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>one<span class="token punctuation">.</span><span class="token function">say</span><span class="token punctuation">(</span><span class="token string">&#39;hi&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;hi, object&quot;</span>

<span class="token keyword">var</span> two <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;another object&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>one<span class="token punctuation">.</span><span class="token function">say</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>two<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;hello, another object&quot;</span>

<span class="token comment">// \u5C06say\u8D4B\u503C\u7ED9\u4E00\u4E2A\u53D8\u91CF\uFF0Cthis\u5C06\u6307\u5411\u5230\u5168\u5C40\u53D8\u91CF</span>
<span class="token keyword">var</span> say <span class="token operator">=</span> one<span class="token punctuation">.</span>say<span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">say</span><span class="token punctuation">(</span><span class="token string">&#39;hoho&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;hoho, undefined&quot;</span>

<span class="token comment">// \u4F20\u5165\u4E00\u4E2A\u56DE\u8C03\u51FD\u6570callback</span>
<span class="token keyword">var</span> yetanother <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Yet another object&#39;</span><span class="token punctuation">,</span>
    <span class="token function-variable function">method</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">callback</span><span class="token punctuation">(</span><span class="token string">&#39;Hola&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>yetanother<span class="token punctuation">.</span><span class="token function">method</span><span class="token punctuation">(</span>one<span class="token punctuation">.</span>say<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;Holla, undefined&quot;</span>

<span class="token keyword">function</span> <span class="token function">bind</span><span class="token punctuation">(</span><span class="token parameter">o<span class="token punctuation">,</span> m</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">m</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>o<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>arguments<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">var</span> twosay <span class="token operator">=</span> <span class="token function">bind</span><span class="token punctuation">(</span>two<span class="token punctuation">,</span> one<span class="token punctuation">.</span>say<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">twosay</span><span class="token punctuation">(</span><span class="token string">&#39;yo&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;yo, another object&quot;</span>


<span class="token comment">// ECMAScript 5\u7ED9Function.prototype\u6DFB\u52A0\u4E86\u4E00\u4E2Abind()\u65B9\u6CD5\uFF0C\u4EE5\u4FBF\u5F88\u5BB9\u6613\u4F7F\u7528apply()\u548Ccall()\u3002</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> <span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>bind <span class="token operator">===</span> <span class="token string">&#39;undefined&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">bind</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">thisArg</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> fn <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">,</span>
slice <span class="token operator">=</span> <span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>slice<span class="token punctuation">,</span>
args <span class="token operator">=</span> <span class="token function">slice</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>arguments<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token function">fn</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>thisArg<span class="token punctuation">,</span> args<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token function">slice</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>arguments<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">var</span> twosay2 <span class="token operator">=</span> one<span class="token punctuation">.</span><span class="token function">say</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span>two<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">twosay2</span><span class="token punctuation">(</span><span class="token string">&#39;Bonjour&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;Bonjour, another object&quot;</span>

<span class="token keyword">var</span> twosay3 <span class="token operator">=</span> one<span class="token punctuation">.</span><span class="token function">say</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span>two<span class="token punctuation">,</span> <span class="token string">&#39;Enchant\xE9&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">twosay3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;Enchant\xE9, another object&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u6A21\u5F0F5-\u9ED8\u8BA4\u6A21\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u6A21\u5F0F5-\u9ED8\u8BA4\u6A21\u5F0F" aria-hidden="true">#</a> \u6A21\u5F0F5\uFF1A\u9ED8\u8BA4\u6A21\u5F0F</h2><p>\u4EE3\u7801\u590D\u7528\u5927\u5BB6\u5E38\u7528\u7684\u9ED8\u8BA4\u6A21\u5F0F\uFF0C\u5F80\u5F80\u662F\u6709\u95EE\u9898\u7684\uFF0C\u8BE5\u6A21\u5F0F\u4F7F\u7528Parent()\u7684\u6784\u9020\u51FD\u6570\u521B\u5EFA\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u5E76\u4E14\u5C06\u8BE5\u5BF9\u8C61\u8D4B\u503C\u7ED9Child()\u7684\u539F\u578B\u3002\u6211\u4EEC\u770B\u4E00\u4E0B\u4EE3\u7801\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">inherit</span><span class="token punctuation">(</span><span class="token parameter"><span class="token constant">C</span><span class="token punctuation">,</span> <span class="token constant">P</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">C</span><span class="token punctuation">.</span>prototype <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">P</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u7236\u6784\u9020\u51FD\u6570</span>
<span class="token keyword">function</span> <span class="token function">Parent</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name <span class="token operator">||</span> <span class="token string">&#39;Adam&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u7ED9\u539F\u578B\u6DFB\u52A0say\u529F\u80FD</span>
<span class="token class-name">Parent</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">say</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token comment">// Child\u6784\u9020\u51FD\u6570\u4E3A\u7A7A</span>
<span class="token keyword">function</span> <span class="token function">Child</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u6267\u884C\u7EE7\u627F</span>
<span class="token function">inherit</span><span class="token punctuation">(</span>Child<span class="token punctuation">,</span> Parent<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> kid <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Child</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>kid<span class="token punctuation">.</span><span class="token function">say</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;Adam&quot;</span>

<span class="token keyword">var</span> kiddo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Child</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
kiddo<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&quot;Patrick&quot;</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>kiddo<span class="token punctuation">.</span><span class="token function">say</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;Patrick&quot;</span>

<span class="token comment">// \u7F3A\u70B9:\u4E0D\u80FD\u8BA9\u53C2\u6570\u4F20\u8FDB\u7ED9Child\u6784\u9020\u51FD\u6570</span>
<span class="token keyword">var</span> s <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Child</span><span class="token punctuation">(</span><span class="token string">&#39;Seth&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">say</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;Adam&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u79CD\u6A21\u5F0F\u7684\u7F3A\u70B9\u662FChild\u4E0D\u80FD\u4F20\u8FDB\u53C2\u6570\uFF0C\u57FA\u672C\u4E0A\u4E5F\u5C31\u5E9F\u4E86\u3002</p><h2 id="\u6A21\u5F0F6-\u501F\u7528\u6784\u9020\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u6A21\u5F0F6-\u501F\u7528\u6784\u9020\u51FD\u6570" aria-hidden="true">#</a> \u6A21\u5F0F6\uFF1A\u501F\u7528\u6784\u9020\u51FD\u6570</h2><p>\u8BE5\u6A21\u5F0F\u662FChild\u501F\u7528Parent\u7684\u6784\u9020\u51FD\u6570\u8FDB\u884Capply\uFF0C\u7136\u540E\u5C06child\u7684this\u548C\u53C2\u6570\u4F20\u9012\u7ED9apply\u65B9\u6CD5\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u7236\u6784\u9020\u51FD\u6570</span>
<span class="token keyword">function</span> <span class="token function">Parent</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name <span class="token operator">||</span> <span class="token string">&#39;Adam&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u7ED9\u539F\u578B\u6DFB\u52A0say\u529F\u80FD</span>
<span class="token class-name">Parent</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">say</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// Child\u6784\u9020\u51FD\u6570</span>
<span class="token keyword">function</span> <span class="token function">Child</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">Parent</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> arguments<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">var</span> kid <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Child</span><span class="token punctuation">(</span><span class="token string">&quot;Patrick&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>kid<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;Patrick&quot;</span>

<span class="token comment">// \u7F3A\u70B9\uFF1A\u6CA1\u6709\u4ECE\u6784\u9020\u51FD\u6570\u4E0A\u7EE7\u627Fsay\u65B9\u6CD5</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> kid<span class="token punctuation">.</span>say<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;undefined&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7F3A\u70B9\u4E5F\u5F88\u660E\u663E\uFF0Csay\u65B9\u6CD5\u4E0D\u53EF\u7528\uFF0C\u56E0\u4E3A\u6CA1\u6709\u7EE7\u627F\u8FC7\u6765\u3002</p><h2 id="\u6A21\u5F0F7-\u501F\u7528\u6784\u9020\u51FD\u6570\u5E76\u8BBE\u7F6E\u539F\u578B" tabindex="-1"><a class="header-anchor" href="#\u6A21\u5F0F7-\u501F\u7528\u6784\u9020\u51FD\u6570\u5E76\u8BBE\u7F6E\u539F\u578B" aria-hidden="true">#</a> \u6A21\u5F0F7\uFF1A\u501F\u7528\u6784\u9020\u51FD\u6570\u5E76\u8BBE\u7F6E\u539F\u578B</h2><p>\u4E0A\u8FF0\u4E24\u4E2A\u6A21\u5F0F\u90FD\u6709\u81EA\u5DF1\u7684\u7F3A\u70B9\uFF0C\u90A3\u5982\u4F55\u628A\u4E24\u8005\u7684\u7F3A\u70B9\u53BB\u9664\u5462\uFF0C\u6211\u4EEC\u6765\u5C1D\u8BD5\u4E00\u4E0B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u7236\u6784\u9020\u51FD\u6570</span>
<span class="token keyword">function</span> <span class="token function">Parent</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name <span class="token operator">||</span> <span class="token string">&#39;Adam&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u7ED9\u539F\u578B\u6DFB\u52A0say\u529F\u80FD</span>
<span class="token class-name">Parent</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">say</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// Child\u6784\u9020\u51FD\u6570</span>
<span class="token keyword">function</span> <span class="token function">Child</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">Parent</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> arguments<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token class-name">Child</span><span class="token punctuation">.</span>prototype <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Parent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> kid <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Child</span><span class="token punctuation">(</span><span class="token string">&quot;Patrick&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>kid<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;Patrick&quot;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> kid<span class="token punctuation">.</span>say<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// function</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>kid<span class="token punctuation">.</span><span class="token function">say</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Patrick</span>
console<span class="token punctuation">.</span><span class="token function">dir</span><span class="token punctuation">(</span>kid<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">delete</span> kid<span class="token punctuation">.</span>name<span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>kid<span class="token punctuation">.</span><span class="token function">say</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;Adam&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD0\u884C\u8D77\u6765\uFF0C\u4E00\u5207\u6B63\u5E38\uFF0C\u4F46\u662F\u6709\u6CA1\u6709\u53D1\u73B0\uFF0CParent\u6784\u9020\u51FD\u6570\u6267\u884C\u4E86\u4E24\u6B21\uFF0C\u6240\u4EE5\u8BF4\uFF0C\u867D\u7136\u7A0B\u5E8F\u53EF\u7528\uFF0C\u4F46\u662F\u6548\u7387\u5F88\u4F4E\u3002</p><h2 id="\u6A21\u5F0F8-\u5171\u4EAB\u539F\u578B" tabindex="-1"><a class="header-anchor" href="#\u6A21\u5F0F8-\u5171\u4EAB\u539F\u578B" aria-hidden="true">#</a> \u6A21\u5F0F8\uFF1A\u5171\u4EAB\u539F\u578B</h2><p>\u5171\u4EAB\u539F\u578B\u662F\u6307Child\u548CParent\u4F7F\u7528\u540C\u6837\u7684\u539F\u578B\uFF0C\u4EE3\u7801\u5982\u4E0B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">inherit</span><span class="token punctuation">(</span><span class="token parameter"><span class="token constant">C</span><span class="token punctuation">,</span> <span class="token constant">P</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">C</span><span class="token punctuation">.</span>prototype <span class="token operator">=</span> <span class="token class-name">P</span><span class="token punctuation">.</span>prototype<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u7236\u6784\u9020\u51FD\u6570</span>
<span class="token keyword">function</span> <span class="token function">Parent</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name <span class="token operator">||</span> <span class="token string">&#39;Adam&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u7ED9\u539F\u578B\u6DFB\u52A0say\u529F\u80FD</span>
<span class="token class-name">Parent</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">say</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// Child\u6784\u9020\u51FD\u6570</span>
<span class="token keyword">function</span> <span class="token function">Child</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>

<span class="token function">inherit</span><span class="token punctuation">(</span>Child<span class="token punctuation">,</span> Parent<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> kid <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Child</span><span class="token punctuation">(</span><span class="token string">&#39;Patrick&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>kid<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// undefined</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> kid<span class="token punctuation">.</span>say<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// function</span>
kid<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&#39;Patrick&#39;</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>kid<span class="token punctuation">.</span><span class="token function">say</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Patrick</span>
console<span class="token punctuation">.</span><span class="token function">dir</span><span class="token punctuation">(</span>kid<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u786E\u5B9A\u8FD8\u662F\u4E00\u6837\uFF0CChild\u7684\u53C2\u6570\u6CA1\u6709\u6B63\u786E\u63A5\u6536\u5230\u3002</p><h2 id="\u6A21\u5F0F9-\u4E34\u65F6\u6784\u9020\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u6A21\u5F0F9-\u4E34\u65F6\u6784\u9020\u51FD\u6570" aria-hidden="true">#</a> \u6A21\u5F0F9\uFF1A\u4E34\u65F6\u6784\u9020\u51FD\u6570</h2><p>\u9996\u5148\u501F\u7528\u6784\u9020\u51FD\u6570\uFF0C\u7136\u540E\u5C06Child\u7684\u539F\u578B\u8BBE\u7F6E\u4E3A\u8BE5\u501F\u7528\u6784\u9020\u51FD\u6570\u7684\u5B9E\u4F8B\uFF0C\u6700\u540E\u6062\u590DChild\u539F\u578B\u7684\u6784\u9020\u51FD\u6570\u3002\u4EE3\u7801\u5982\u4E0B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">/* \u95ED\u5305 */</span>
<span class="token keyword">var</span> inherit <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> <span class="token function-variable function">F</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token constant">C</span><span class="token punctuation">,</span> <span class="token constant">P</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">F</span><span class="token punctuation">.</span>prototype <span class="token operator">=</span> <span class="token class-name">P</span><span class="token punctuation">.</span>prototype<span class="token punctuation">;</span>
        <span class="token class-name">C</span><span class="token punctuation">.</span>prototype <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">F</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token constant">C</span><span class="token punctuation">.</span>uber <span class="token operator">=</span> <span class="token class-name">P</span><span class="token punctuation">.</span>prototype<span class="token punctuation">;</span>
        <span class="token class-name">C</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>constructor <span class="token operator">=</span> <span class="token constant">C</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">Parent</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name <span class="token operator">||</span> <span class="token string">&#39;Adam&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u7ED9\u539F\u578B\u6DFB\u52A0say\u529F\u80FD</span>
<span class="token class-name">Parent</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">say</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// Child\u6784\u9020\u51FD\u6570</span>
<span class="token keyword">function</span> <span class="token function">Child</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>

<span class="token function">inherit</span><span class="token punctuation">(</span>Child<span class="token punctuation">,</span> Parent<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> kid <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Child</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>kid<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// undefined</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> kid<span class="token punctuation">.</span>say<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// function</span>
kid<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&#39;Patrick&#39;</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>kid<span class="token punctuation">.</span><span class="token function">say</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Patrick</span>
<span class="token keyword">var</span> kid2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Child</span><span class="token punctuation">(</span><span class="token string">&quot;Tom&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>kid<span class="token punctuation">.</span><span class="token function">say</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>kid<span class="token punctuation">.</span>constructor<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Child</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>kid<span class="token punctuation">.</span>constructor <span class="token operator">===</span> Parent<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u95EE\u9898\u7167\u65E7\uFF0CChild\u4E0D\u80FD\u6B63\u5E38\u63A5\u6536\u53C2\u6570\u3002</p><h2 id="\u6A21\u5F0F10-klass" tabindex="-1"><a class="header-anchor" href="#\u6A21\u5F0F10-klass" aria-hidden="true">#</a> \u6A21\u5F0F10\uFF1Aklass</h2><p>\u8FD9\u4E2A\u6A21\u5F0F\uFF0C\u5148\u4E0A\u4EE3\u7801\u5427\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">klass</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">Parent<span class="token punctuation">,</span> props</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token keyword">var</span> Child<span class="token punctuation">,</span> <span class="token constant">F</span><span class="token punctuation">,</span> i<span class="token punctuation">;</span>

    <span class="token comment">// 1.</span>
    <span class="token comment">// \u65B0\u6784\u9020\u51FD\u6570</span>
    <span class="token function-variable function">Child</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>Child<span class="token punctuation">.</span>uber <span class="token operator">&amp;&amp;</span> Child<span class="token punctuation">.</span>uber<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span><span class="token string">&quot;__construct&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            Child<span class="token punctuation">.</span>uber<span class="token punctuation">.</span><span class="token function">__construct</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> arguments<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Child</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span><span class="token string">&quot;__construct&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Child</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">__construct</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> arguments<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token comment">// 2.</span>
    <span class="token comment">// \u7EE7\u627F</span>
    Parent <span class="token operator">=</span> Parent <span class="token operator">||</span> Object<span class="token punctuation">;</span>
    <span class="token function-variable function">F</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token class-name">F</span><span class="token punctuation">.</span>prototype <span class="token operator">=</span> <span class="token class-name">Parent</span><span class="token punctuation">.</span>prototype<span class="token punctuation">;</span>
    <span class="token class-name">Child</span><span class="token punctuation">.</span>prototype <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">F</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    Child<span class="token punctuation">.</span>uber <span class="token operator">=</span> <span class="token class-name">Parent</span><span class="token punctuation">.</span>prototype<span class="token punctuation">;</span>
    <span class="token class-name">Child</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>constructor <span class="token operator">=</span> Child<span class="token punctuation">;</span>

    <span class="token comment">// 3.</span>
    <span class="token comment">// \u6DFB\u52A0\u5B9E\u73B0\u65B9\u6CD5</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token keyword">in</span> props<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>props<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Child</span><span class="token punctuation">.</span>prototype<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> props<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// return the &quot;class&quot;</span>
    <span class="token keyword">return</span> Child<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> Man <span class="token operator">=</span> <span class="token function">klass</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token function-variable function">__construct</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">what</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Man&#39;s constructor&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> what<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">getName</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> first <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Man</span><span class="token punctuation">(</span><span class="token string">&#39;Adam&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// logs &quot;Man&#39;s constructor&quot;</span>
first<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;Adam&quot;</span>

<span class="token keyword">var</span> SuperMan <span class="token operator">=</span> <span class="token function">klass</span><span class="token punctuation">(</span>Man<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token function-variable function">__construct</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">what</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;SuperMan&#39;s constructor&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">getName</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> name <span class="token operator">=</span> SuperMan<span class="token punctuation">.</span>uber<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token string">&quot;I am &quot;</span> <span class="token operator">+</span> name<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> clark <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SuperMan</span><span class="token punctuation">(</span><span class="token string">&#39;Clark Kent&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
clark<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;I am Clark Kent&quot;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>clark <span class="token keyword">instanceof</span> <span class="token class-name">Man</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>clark <span class="token keyword">instanceof</span> <span class="token class-name">SuperMan</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u600E\u4E48\u6837\uFF1F\u770B\u7740\u662F\u4E0D\u662F\u6709\u70B9\u6655\uFF0C\u8BF4\u597D\u70B9\uFF0C\u8BE5\u6A21\u5F0F\u7684\u8BED\u6CD5\u548C\u89C4\u8303\u62E7\u5F97\u548C\u522B\u7684\u8BED\u8A00\u4E00\u6837\uFF0C\u4F60\u613F\u610F\u7528\u4E48\uFF1F</p><h2 id="\u603B\u7ED3" tabindex="-1"><a class="header-anchor" href="#\u603B\u7ED3" aria-hidden="true">#</a> \u603B\u7ED3</h2><p>\u4EE5\u4E0A\u5C31\u662F\u6211\u8981\u7ED9\u5927\u5BB6\u5206\u4EAB\u768410\u4E2A\u4EE3\u7801\u590D\u7528\u6A21\u5F0F\uFF0C\u524D\u97624\u79CD\u6A21\u5F0F\u63A8\u8350\u4F7F\u7528\u3002\u540E\u97626\u79CD\u6A21\u5F0F\u5C3D\u91CF\u907F\u514D\u4F7F\u7528\u3002\u867D\u7136\u540E\u97626\u79CD\u6A21\u5F0F\uFF0C\u5728\u67D0\u79CD\u7279\u6B8A\u60C5\u51B5\u4E0B\u5B9E\u73B0\u4E86\u67D0\u4E9B\u529F\u80FD\uFF0C\u4F46\u662F\u90FD\u5B58\u5728\u5404\u81EA\u7684\u7F3A\u70B9\uFF0C\u6240\u4EE5\u4E00\u822C\u60C5\u51B5\uFF0C\u8BF7\u5927\u5BB6\u8981\u907F\u514D\u4F7F\u7528\u3002</p>`,53),e=[o];function c(i,l){return s(),a("div",null,e)}const k=n(t,[["render",c],["__file","31.html.vue"]]);export{k as default};
