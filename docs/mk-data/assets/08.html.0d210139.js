import{_ as s,o as n,c as a,a as e}from"./app.77669ddb.js";const p={},t=e(`<h1 id="typescript-\u5F00\u53D1\u5B9E\u7528\u6280\u5DE7\u6E05\u5355" tabindex="-1"><a class="header-anchor" href="#typescript-\u5F00\u53D1\u5B9E\u7528\u6280\u5DE7\u6E05\u5355" aria-hidden="true">#</a> Typescript \u5F00\u53D1\u5B9E\u7528\u6280\u5DE7\u6E05\u5355</h1><p>Typescript \u5728\u7C7B\u578B\u68C0\u67E5\u65B9\u9762\u975E\u5E38\u5F3A\u5927\uFF0C\u4F46\u6709\u65F6\u67D0\u4E9B\u7C7B\u578B\u662F\u5176\u4ED6\u7C7B\u578B\u7684\u5B50\u96C6\u5E76\u4E14\u9700\u8981\u4E3A\u5B83\u4EEC\u5B9A\u4E49\u7C7B\u578B\u68C0\u67E5\u65F6\uFF0C\u5B83\u4F1A\u53D8\u5F97\u4E4F\u5473\u3002</p><p>\u4E3E\u4E2A\u4F8B\u5B50\uFF0C\u6709\u4E24\u79CD\u54CD\u5E94\u7C7B\u578B\uFF1A</p><ul><li>\u7528\u6237\u914D\u7F6E\u6587\u4EF6\u54CD\u5E94</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">UserProfileResponse</span> <span class="token punctuation">{</span>
  id<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  email<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  phone<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  avatar<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u767B\u5F55\u54CD\u5E94</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">LoginResponse</span> <span class="token punctuation">{</span>
  id<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6211\u4EEC\u53EF\u4EE5\u4E3A UserProfileResponse \u5B9A\u4E49\u7C7B\u578B\u5E76\u4E3A LoginResponse \u9009\u62E9\u4E00\u4E9B\u5C5E\u6027\uFF0C\u800C\u4E0D\u662F\u5B9A\u4E49\u76F8\u540C\u4E0A\u4E0B\u6587 LoginResponse \u548C UserProfileResponse \u7684\u7C7B\u578B\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">LoginResponse</span> <span class="token operator">=</span> Pick<span class="token operator">&lt;</span>UserProfileResponse<span class="token punctuation">,</span> <span class="token string">&quot;id&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;name&quot;</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u8BA9\u6211\u4EEC\u4E86\u89E3\u4E00\u4E9B\u53EF\u4EE5\u5E2E\u52A9\u60A8\u7F16\u5199\u66F4\u597D\u4EE3\u7801\u7684\u5B9E\u7528\u51FD\u6570\u3002</p><h2 id="uppercase" tabindex="-1"><a class="header-anchor" href="#uppercase" aria-hidden="true">#</a> Uppercase</h2><p>\u6784\u9020\u4E00\u4E2A Type \u7684\u6240\u6709\u5C5E\u6027\u90FD\u8BBE\u7F6E\u4E3A\u5927\u5199\u7684\u7C7B\u578B\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Role</span> <span class="token operator">=</span> <span class="token string">&quot;admin&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;user&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;guest&quot;</span><span class="token punctuation">;</span>
<span class="token comment">// Bad practice</span>
<span class="token keyword">type</span> <span class="token class-name">UppercaseRole</span> <span class="token operator">=</span> <span class="token string">&quot;ADMIN&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;USER&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;GUEST&quot;</span><span class="token punctuation">;</span>
<span class="token comment">// Good practice</span>
<span class="token keyword">type</span> <span class="token class-name">UppercaseRole</span> <span class="token operator">=</span> Uppercase<span class="token operator">&lt;</span>Role<span class="token operator">&gt;</span><span class="token punctuation">;</span> <span class="token comment">// &quot;ADMIN&quot; | &quot;USER&quot; | &quot;GUEST&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="lowercase" tabindex="-1"><a class="header-anchor" href="#lowercase" aria-hidden="true">#</a> Lowercase</h2><p>\u6784\u9020\u4E00\u4E2A Type \u7684\u6240\u6709\u5C5E\u6027\u90FD\u8BBE\u7F6E\u4E3A\u5C0F\u5199\u7684\u7C7B\u578B\uFF0C\u4E0E\u5927\u5199\u76F8\u53CD\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Role</span> <span class="token operator">=</span> <span class="token string">&quot;ADMIN&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;USER&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;GUEST&quot;</span><span class="token punctuation">;</span>
<span class="token comment">// Bad practice</span>
<span class="token keyword">type</span> <span class="token class-name">LowercaseRole</span> <span class="token operator">=</span> <span class="token string">&quot;admin&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;user&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;guest&quot;</span><span class="token punctuation">;</span>
<span class="token comment">// Good practice</span>
<span class="token keyword">type</span> <span class="token class-name">LowercaseRole</span> <span class="token operator">=</span> Lowercase<span class="token operator">&lt;</span>Role<span class="token operator">&gt;</span><span class="token punctuation">;</span> <span class="token comment">// &quot;admin&quot; | &quot;user&quot; | &quot;guest&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="capitalize" tabindex="-1"><a class="header-anchor" href="#capitalize" aria-hidden="true">#</a> Capitalize</h2><p>\u6784\u9020\u4E00\u4E2A\u5C06 Type \u7684\u6240\u6709\u5C5E\u6027\u8BBE\u7F6E\u4E3A\u5927\u5199\u7684\u7C7B\u578B\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Role</span> <span class="token operator">=</span> <span class="token string">&quot;admin&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;user&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;guest&quot;</span><span class="token punctuation">;</span>
<span class="token comment">// Bad practice</span>
<span class="token keyword">type</span> <span class="token class-name">CapitalizeRole</span> <span class="token operator">=</span> <span class="token string">&quot;Admin&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;User&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;Guest&quot;</span><span class="token punctuation">;</span>
<span class="token comment">// Good practice</span>
<span class="token keyword">type</span> <span class="token class-name">CapitalizeRole</span> <span class="token operator">=</span> Capitalize<span class="token operator">&lt;</span>Role<span class="token operator">&gt;</span><span class="token punctuation">;</span> <span class="token comment">// &quot;Admin&quot; | &quot;User&quot; | &quot;Guest&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="uncapitalize" tabindex="-1"><a class="header-anchor" href="#uncapitalize" aria-hidden="true">#</a> Uncapitalize</h2><p>\u6784\u9020\u4E00\u4E2A\u5C06 Type \u7684\u6240\u6709\u5C5E\u6027\u8BBE\u7F6E\u4E3A uncapitalize \u7684\u7C7B\u578B\uFF0C\u4E0E\u9996\u5B57\u6BCD\u5927\u5199\u76F8\u53CD\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Role</span> <span class="token operator">=</span> <span class="token string">&quot;Admin&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;User&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;Guest&quot;</span><span class="token punctuation">;</span>
<span class="token comment">// Bad practice</span>
<span class="token keyword">type</span> <span class="token class-name">UncapitalizeRole</span> <span class="token operator">=</span> <span class="token string">&quot;admin&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;user&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;guest&quot;</span><span class="token punctuation">;</span>
<span class="token comment">// Good practice</span>
<span class="token keyword">type</span> <span class="token class-name">UncapitalizeRole</span> <span class="token operator">=</span> Uncapitalize<span class="token operator">&lt;</span>Role<span class="token operator">&gt;</span><span class="token punctuation">;</span> <span class="token comment">// &quot;admin&quot; | &quot;user&quot; | &quot;guest&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="partial" tabindex="-1"><a class="header-anchor" href="#partial" aria-hidden="true">#</a> Partial</h2><p>\u6784\u9020\u4E00\u4E2A\u7C7B\u578B\uFF0C\u5176\u4E2D Type \u7684\u6240\u6709\u5C5E\u6027\u90FD\u8BBE\u7F6E\u4E3A\u53EF\u9009\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  age<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  password<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// Bad practice</span>
<span class="token keyword">interface</span> <span class="token class-name">PartialUser</span> <span class="token punctuation">{</span>
  name<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  age<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  password<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// Good practice</span>
<span class="token keyword">type</span> <span class="token class-name">PartialUser</span> <span class="token operator">=</span> Partial<span class="token operator">&lt;</span>User<span class="token operator">&gt;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Required \u6784\u9020\u4E00\u4E2A\u7C7B\u578B\uFF0C\u8BE5\u7C7B\u578B\u7531\u8BBE\u7F6E\u4E3A required \u7684 Type \u7684\u6240\u6709\u5C5E\u6027\u7EC4\u6210\uFF0COpposite\u7684\u5BF9\u9762\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>
  name<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  age<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  password<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// Bad practice</span>
<span class="token keyword">interface</span> <span class="token class-name">RequiredUser</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  age<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  password<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// Good practice</span>
<span class="token keyword">type</span> <span class="token class-name">RequiredUser</span> <span class="token operator">=</span> Required<span class="token operator">&lt;</span>User<span class="token operator">&gt;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="readonly" tabindex="-1"><a class="header-anchor" href="#readonly" aria-hidden="true">#</a> Readonly</h2><p>\u6784\u9020\u4E00\u4E2A\u7C7B\u578B\uFF0C\u8BE5\u7C7B\u578B\u7531\u8BBE\u7F6E\u4E3A\u53EA\u8BFB\u7684 Type \u7684\u6240\u6709\u5C5E\u6027\u7EC4\u6210\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>
  role<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// Bad practice</span>
<span class="token keyword">const</span> user<span class="token operator">:</span> User <span class="token operator">=</span> <span class="token punctuation">{</span> role<span class="token operator">:</span> <span class="token string">&quot;ADMIN&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
user<span class="token punctuation">.</span>role <span class="token operator">=</span> <span class="token string">&quot;USER&quot;</span><span class="token punctuation">;</span>
<span class="token comment">// Good practice</span>
<span class="token keyword">type</span> <span class="token class-name">ReadonlyUser</span> <span class="token operator">=</span> Readonly<span class="token operator">&lt;</span>User<span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> user<span class="token operator">:</span> ReadonlyUser <span class="token operator">=</span> <span class="token punctuation">{</span> role<span class="token operator">:</span> <span class="token string">&quot;ADMIN&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
user<span class="token punctuation">.</span>role <span class="token operator">=</span> <span class="token string">&quot;USER&quot;</span><span class="token punctuation">;</span>
<span class="token comment">// Error: Cannot assign to &#39;role&#39; because it is a read-only property.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="record" tabindex="-1"><a class="header-anchor" href="#record" aria-hidden="true">#</a> Record</h2><p>\u6784\u9020\u4E00\u4E2A\u5177\u6709\u4E00\u7EC4\u7C7B\u578B T \u7684\u5C5E\u6027 K \u7684\u7C7B\u578B\uFF0C\u6BCF\u4E2A\u5C5E\u6027 K \u90FD\u6620\u5C04\u5230\u7C7B\u578B T\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">Address</span> <span class="token punctuation">{</span>
  street<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  pin<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">interface</span> <span class="token class-name">Addresses</span> <span class="token punctuation">{</span>
  home<span class="token operator">:</span> Address<span class="token punctuation">;</span>
  office<span class="token operator">:</span> Address<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// Alternative \u2705</span>
<span class="token keyword">type</span> <span class="token class-name">AddressesRecord</span> <span class="token operator">=</span> Record<span class="token operator">&lt;</span><span class="token string">&quot;home&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;office&quot;</span><span class="token punctuation">,</span> Address<span class="token operator">&gt;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="pick" tabindex="-1"><a class="header-anchor" href="#pick" aria-hidden="true">#</a> Pick</h2><p>\u53EA\u9009\u62E9\u952E\u5728\u8054\u5408\u7C7B\u578B\u952E\u4E2D\u7684 Type \u7684\u5C5E\u6027\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  age<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  password<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// Bad practice</span>
<span class="token keyword">interface</span> <span class="token class-name">UserPartial</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  age<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// Good practice</span>
<span class="token keyword">type</span> <span class="token class-name">UserPartial</span> <span class="token operator">=</span> Pick<span class="token operator">&lt;</span>User<span class="token punctuation">,</span> <span class="token string">&quot;name&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;age&quot;</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="omit" tabindex="-1"><a class="header-anchor" href="#omit" aria-hidden="true">#</a> Omit</h2><p>Omit\u5176\u952E\u5728\u8054\u5408\u7C7B\u578B\u952E\u4E2D\u7684 Type \u5C5E\u6027\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  age<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  password<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// Bad practice</span>
<span class="token keyword">interface</span> <span class="token class-name">UserPartial</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  age<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// Good practice</span>
<span class="token keyword">type</span> <span class="token class-name">UserPartial</span> <span class="token operator">=</span> Omit<span class="token operator">&lt;</span>User<span class="token punctuation">,</span> <span class="token string">&quot;password&quot;</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="exclude" tabindex="-1"><a class="header-anchor" href="#exclude" aria-hidden="true">#</a> Exclude</h2><p>\u6784\u9020\u4E00\u4E2A\u5177\u6709 Type \u7684\u6240\u6709\u5C5E\u6027\u7684\u7C7B\u578B\uFF0C\u9664\u4E86\u952E\u5728\u8054\u5408\u7C7B\u578B Excluded \u4E2D\u7684\u90A3\u4E9B\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Role</span> <span class="token operator">=</span> <span class="token string">&quot;ADMIN&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;USER&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;GUEST&quot;</span><span class="token punctuation">;</span>
<span class="token comment">// Bad practice</span>
<span class="token keyword">type</span> <span class="token class-name">NonAdminRole</span> <span class="token operator">=</span> <span class="token string">&quot;USER&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;GUEST&quot;</span><span class="token punctuation">;</span>
<span class="token comment">// Good practice</span>
<span class="token keyword">type</span> <span class="token class-name">NonAdmin</span> <span class="token operator">=</span> Exclude<span class="token operator">&lt;</span>Role<span class="token punctuation">,</span> <span class="token string">&quot;ADMIN&quot;</span><span class="token operator">&gt;</span><span class="token punctuation">;</span> <span class="token comment">// &quot;USER&quot; | &quot;GUEST&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="extract" tabindex="-1"><a class="header-anchor" href="#extract" aria-hidden="true">#</a> Extract</h2><p>\u6784\u9020\u4E00\u4E2A\u5177\u6709 Type \u7684\u6240\u6709\u5C5E\u6027\u7684\u7C7B\u578B\uFF0C\u5176\u952E\u5728\u8054\u5408\u7C7B\u578B Extract \u4E2D\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Role</span> <span class="token operator">=</span> <span class="token string">&quot;ADMIN&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;USER&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;GUEST&quot;</span><span class="token punctuation">;</span>
<span class="token comment">// Bad practice</span>
<span class="token keyword">type</span> <span class="token class-name">AdminRole</span> <span class="token operator">=</span> <span class="token string">&quot;ADMIN&quot;</span><span class="token punctuation">;</span>
<span class="token comment">// Good practice</span>
<span class="token keyword">type</span> <span class="token class-name">Admin</span> <span class="token operator">=</span> Extract<span class="token operator">&lt;</span>Role<span class="token punctuation">,</span> <span class="token string">&quot;ADMIN&quot;</span><span class="token operator">&gt;</span><span class="token punctuation">;</span> <span class="token comment">// &quot;ADMIN&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="nonnullable" tabindex="-1"><a class="header-anchor" href="#nonnullable" aria-hidden="true">#</a> NonNullable</h2><p>\u6784\u9020\u4E00\u4E2A\u7C7B\u578B\uFF0C\u5176\u4E2D Type \u7684\u6240\u6709\u5C5E\u6027\u90FD\u8BBE\u7F6E\u4E3A\u4E0D\u53EF\u4E3A\u7A7A\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Role</span> <span class="token operator">=</span> <span class="token string">&quot;ADMIN&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;USER&quot;</span> <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token comment">// Bad practice</span>
<span class="token keyword">type</span> <span class="token class-name">NonNullableRole</span> <span class="token operator">=</span> <span class="token string">&quot;ADMIN&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;USER&quot;</span><span class="token punctuation">;</span>
<span class="token comment">// Good practice</span>
<span class="token keyword">type</span> <span class="token class-name">NonNullableRole</span> <span class="token operator">=</span> NonNullable<span class="token operator">&lt;</span>Role<span class="token operator">&gt;</span><span class="token punctuation">;</span> <span class="token comment">// &quot;ADMIN&quot; | &quot;USER&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="keyof" tabindex="-1"><a class="header-anchor" href="#keyof" aria-hidden="true">#</a> keyof</h2><p>keyof \u4E0E Object.keys \u7A0D\u6709\u76F8\u4F3C\uFF0C\u53EA\u662F keyof \u91C7\u7528\u4E86\u63A5\u53E3\u7684\u952E\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">Point</span> <span class="token punctuation">{</span>
    x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
    y<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// type keys = &quot;x&quot; | &quot;y&quot;</span>
<span class="token keyword">type</span> <span class="token class-name">keys</span> <span class="token operator">=</span> <span class="token keyword">keyof</span> Point<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5047\u8BBE\u6211\u4EEC\u6709\u4E00\u4E2A\u5982\u4E0B\u6240\u793A\u7684\u5BF9\u8C61\uFF0C\u6211\u4EEC\u9700\u8981\u4F7F\u7528 typescript \u5B9E\u73B0\u4E00\u4E2A get \u51FD\u6570\u6765\u83B7\u53D6\u5176\u5C5E\u6027\u7684\u503C\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">{</span>
  a<span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
  hello<span class="token operator">:</span> <span class="token string">&#39;max&#39;</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">get</span><span class="token punctuation">(</span>o<span class="token operator">:</span> object<span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> o<span class="token punctuation">[</span>name<span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u6211\u4EEC\u4E00\u5F00\u59CB\u53EF\u80FD\u662F\u8FD9\u6837\u5199\u7684\uFF0C\u4F46\u5B83\u6709\u5F88\u591A\u7F3A\u70B9\uFF1A <ul><li>\u65E0\u6CD5\u786E\u8BA4\u8FD4\u56DE\u7C7B\u578B\uFF1A\u8FD9\u5C06\u5931\u53BB ts \u7684\u6700\u5927\u7C7B\u578B\u68C0\u67E5\u80FD\u529B\u3002</li><li>\u65E0\u6CD5\u7EA6\u675F\u5BC6\u94A5\uFF1A\u53EF\u80FD\u4F1A\u51FA\u73B0\u62FC\u5199\u9519\u8BEF\u3002</li></ul></li></ul><p>\u5728\u8FD9\u79CD\u60C5\u51B5\u4E0B\uFF0C\u53EF\u4EE5\u4F7F\u7528 keyof \u6765\u589E\u5F3A get \u51FD\u6570\u7684 type \u529F\u80FD\uFF0C\u6709\u5174\u8DA3\u7684\u53EF\u4EE5\u67E5\u770B _.get \u7684 type \u6807\u7B7E\u53CA\u5176\u5B9E\u73B0\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">get</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> object<span class="token punctuation">,</span> <span class="token constant">K</span> <span class="token keyword">extends</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>o<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token constant">K</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">K</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> o<span class="token punctuation">[</span>name<span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5FC5\u586B-\u90E8\u5206-\u9009\u62E9" tabindex="-1"><a class="header-anchor" href="#\u5FC5\u586B-\u90E8\u5206-\u9009\u62E9" aria-hidden="true">#</a> \u5FC5\u586B&amp;\u90E8\u5206&amp;\u9009\u62E9</h2><p>\u65E2\u7136\u77E5\u9053\u4E86keyof\uFF0C\u5C31\u53EF\u4EE5\u7528\u5B83\u5BF9\u5C5E\u6027\u505A\u4E00\u4E9B\u6269\u5C55\uFF0C\u6BD4\u5982\u5B9E\u73B0Partial\u548CPick\uFF0CPick\u4E00\u822C\u7528\u5728_.pick\u4E2D</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Partial<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span><span class="token constant">P</span> <span class="token keyword">in</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token punctuation">]</span><span class="token operator">?</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">P</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">type</span> <span class="token class-name">Required<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span><span class="token constant">P</span> <span class="token keyword">in</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token punctuation">]</span><span class="token operator">-</span><span class="token operator">?</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">P</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">type</span> <span class="token class-name">Pick<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">K</span> <span class="token keyword">extends</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span><span class="token constant">P</span> <span class="token keyword">in</span> <span class="token constant">K</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">P</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">interface</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>
  id<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  age<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// Equivalent to: type PartialUser = { id?: number; age?: number; name?: string; }</span>
<span class="token keyword">type</span> <span class="token class-name">PartialUser</span> <span class="token operator">=</span> Partial<span class="token operator">&lt;</span>User<span class="token operator">&gt;</span>

<span class="token comment">// Equivalent to: type PickUser = { id: number; age: number; }</span>
<span class="token keyword">type</span> <span class="token class-name">PickUser</span> <span class="token operator">=</span> Pick<span class="token operator">&lt;</span>User<span class="token punctuation">,</span> <span class="token string">&quot;id&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;age&quot;</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>\u8FD9\u4E9B\u7C7B\u578B\u5185\u7F6E\u5728 Typescript \u4E2D\u3002</p></blockquote><h2 id="\u6761\u4EF6\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u6761\u4EF6\u7C7B\u578B" aria-hidden="true">#</a> \u6761\u4EF6\u7C7B\u578B</h2><p>\u5B83\u7C7B\u4F3C\u4E8E ?: \u8FD0\u7B97\u7B26\uFF0C\u4F60\u53EF\u4EE5\u4F7F\u7528\u5B83\u6765\u6269\u5C55\u4E00\u4E9B\u57FA\u672C\u7C7B\u578B\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token constant">U</span></span> <span class="token operator">?</span> <span class="token constant">X</span> <span class="token operator">:</span> <span class="token constant">Y</span>

<span class="token keyword">type</span> <span class="token class-name">isTrue<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token boolean">true</span></span> <span class="token operator">?</span> <span class="token boolean">true</span> <span class="token operator">:</span> <span class="token boolean">false</span>
<span class="token comment">// Equivalent to type t = false</span>
<span class="token keyword">type</span> <span class="token class-name">t</span> <span class="token operator">=</span> isTrue<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span>

<span class="token comment">// Equivalent to type t = false</span>
<span class="token keyword">type</span> <span class="token class-name">t1</span> <span class="token operator">=</span> isTrue<span class="token operator">&lt;</span><span class="token boolean">false</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="never-exclude-omit" tabindex="-1"><a class="header-anchor" href="#never-exclude-omit" aria-hidden="true">#</a> never &amp; Exclude &amp; Omit</h2><p>never \u7C7B\u578B\u8868\u793A\u4ECE\u4E0D\u51FA\u73B0\u7684\u503C\u7684\u7C7B\u578B\u3002</p><p>\u7ED3\u5408 never \u548C\u6761\u4EF6\u7C7B\u578B\u53EF\u4EE5\u5F15\u5165\u8BB8\u591A\u6709\u8DA3\u548C\u6709\u7528\u7684\u7C7B\u578B\uFF0C\u4F8B\u5982 Omit</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Exclude<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">U</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token constant">U</span></span> <span class="token operator">?</span> <span class="token builtin">never</span> <span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">;</span>
<span class="token comment">// Equivalent to: type A = &#39;a&#39;</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">A</span></span> <span class="token operator">=</span> Exclude<span class="token operator">&lt;</span><span class="token string">&#39;x&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;x&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;y&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;z&#39;</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7ED3\u5408Exclude\uFF0C\u6211\u4EEC\u53EF\u4EE5\u4ECB\u7ECDOmit\u7684\u5199\u4F5C\u98CE\u683C\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Omit<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">K</span> <span class="token keyword">extends</span> <span class="token keyword">keyof</span> <span class="token builtin">any</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> Pick<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> Exclude<span class="token operator">&lt;</span><span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">K</span><span class="token operator">&gt;&gt;</span><span class="token punctuation">;</span>

<span class="token keyword">interface</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>
  id<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  age<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// Equivalent to: type PickUser = { age: number; name: string; }</span>
<span class="token keyword">type</span> <span class="token class-name">OmitUser</span> <span class="token operator">=</span> Omit<span class="token operator">&lt;</span>User<span class="token punctuation">,</span> <span class="token string">&quot;id&quot;</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="typeof" tabindex="-1"><a class="header-anchor" href="#typeof" aria-hidden="true">#</a> typeof</h2><p>\u987E\u540D\u601D\u4E49\uFF0Ctypeof\u4EE3\u8868\u4E00\u4E2A\u53D6\u4E00\u5B9A\u503C\u7684\u7C7B\u578B\uFF0C\u4E0B\u9762\u7684\u4F8B\u5B50\u5C55\u793A\u4E86\u5B83\u4EEC\u7684\u7528\u6CD5</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> a<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=</span> <span class="token number">3</span>
<span class="token comment">// Equivalent to: const b: number = 4</span>
<span class="token keyword">const</span> b<span class="token operator">:</span> <span class="token keyword">typeof</span> a <span class="token operator">=</span> <span class="token number">4</span>
\u5728\u4E00\u4E2A\u5178\u578B\u7684\u670D\u52A1\u5668\u7AEF\u9879\u76EE\u4E2D\uFF0C\u6211\u4EEC\u7ECF\u5E38\u9700\u8981\u5C06\u4E00\u4E9B\u5DE5\u5177\u585E\u8FDB\u4E0A\u4E0B\u6587\u4E2D\uFF0C\u6BD4\u5982config\u3001logger\u3001db models\u3001utils\u7B49\uFF0C\u7136\u540E\u4F7F\u7528<span class="token keyword">typeof</span>\u3002

<span class="token keyword">import</span> logger <span class="token keyword">from</span> <span class="token string">&#39;./logger&#39;</span>
<span class="token keyword">import</span> utils <span class="token keyword">from</span> <span class="token string">&#39;./utils&#39;</span>

<span class="token keyword">interface</span> <span class="token class-name">Context</span> <span class="token keyword">extends</span> <span class="token class-name">KoaContect</span> <span class="token punctuation">{</span>
  logger<span class="token operator">:</span> <span class="token keyword">typeof</span> logger<span class="token punctuation">,</span>
  utils<span class="token operator">:</span> <span class="token keyword">typeof</span> utils
<span class="token punctuation">}</span>

app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token punctuation">(</span>ctx<span class="token operator">:</span> Context<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  ctx<span class="token punctuation">.</span>logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&#39;hello, world&#39;</span><span class="token punctuation">)</span>

  <span class="token comment">// will return an error because this method is not exposed in logger.ts, which minimizes spelling errors</span>
  ctx<span class="token punctuation">.</span>loger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&#39;hello, world&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="is" tabindex="-1"><a class="header-anchor" href="#is" aria-hidden="true">#</a> .is</h2><p>\u5728\u6B64\u4E4B\u524D\uFF0C\u6211\u4EEC\u5148\u6765\u770B\u4E00\u4E2Akoa\u9519\u8BEF\u5904\u7406\u6D41\u7A0B, \u8FD9\u662F\u96C6\u4E2D\u9519\u8BEF\u5904\u7406\u548C\u8BC6\u522B\u4EE3\u7801\u7684\u8FC7\u7A0B\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> next<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token keyword">await</span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> code <span class="token operator">=</span> <span class="token string">&#39;BAD_REQUEST&#39;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">.</span>isAxiosError<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      code <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Axios-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>err<span class="token punctuation">.</span>code<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>err <span class="token keyword">instanceof</span> <span class="token class-name">Sequelize</span><span class="token punctuation">.</span>BaseError<span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token punctuation">}</span>
    ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token punctuation">{</span>
      code
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728 err.code \u4E2D\uFF0C\u5B83\u5C06\u7F16\u8BD1\u9519\u8BEF\uFF0C\u5373\u201CError\u201D.ts(2339) \u7C7B\u578B\u4E0A\u4E0D\u5B58\u5728\u5C5E\u6027\u201Ccode\u201D\u3002</p><p>\u5728\u8FD9\u79CD\u60C5\u51B5\u4E0B\uFF0C\u53EF\u4EE5\u4F7F\u7528 as AxiosError \u6216 as any \u6765\u907F\u514D\u9519\u8BEF\uFF0C\u4F46\u662F\u5F3A\u5236\u7C7B\u578B\u8F6C\u6362\u4E0D\u591F\u53CB\u597D\uFF01</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>err <span class="token keyword">as</span> AxiosError<span class="token punctuation">)</span><span class="token punctuation">.</span>isAxiosError<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  code <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Axios-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token punctuation">(</span>err <span class="token keyword">as</span> AxiosError<span class="token punctuation">)</span><span class="token punctuation">.</span>code<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u8FD9\u79CD\u60C5\u51B5\u4E0B\uFF0C\u4F60\u53EF\u4EE5\u4F7F\u7528 is \u6765\u786E\u5B9A\u503C\u7684\u7C7B\u578B\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">isAxiosError</span> <span class="token punctuation">(</span>error<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token operator">:</span> error <span class="token keyword">is</span> AxiosError <span class="token punctuation">{</span>
  <span class="token keyword">return</span> error<span class="token punctuation">.</span>isAxiosError
<span class="token punctuation">}</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isAxiosError</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  code <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Axios-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>err<span class="token punctuation">.</span>code<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728 GraphQL \u6E90\u4EE3\u7801\u4E2D\uFF0C\u6709\u5F88\u591A\u8FD9\u6837\u7684\u7528\u9014\u6765\u8BC6\u522B\u7C7B\u578B\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">isType</span><span class="token punctuation">(</span>type<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">type</span> <span class="token class-name"><span class="token keyword">is</span></span> GraphQLType<span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">isScalarType</span><span class="token punctuation">(</span>type<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">type</span> <span class="token class-name"><span class="token keyword">is</span></span> GraphQLScalarType<span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">isObjectType</span><span class="token punctuation">(</span>type<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">type</span> <span class="token class-name"><span class="token keyword">is</span></span> GraphQLObjectType<span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">isInterfaceType</span><span class="token punctuation">(</span>type<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">type</span> <span class="token class-name"><span class="token keyword">is</span></span> GraphQLInterfaceType<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="record-dictionary-many" tabindex="-1"><a class="header-anchor" href="#record-dictionary-many" aria-hidden="true">#</a> Record &amp; Dictionary &amp; Many</h2><p>\u8FD9\u4E9B\u8BED\u6CD5\u7CD6\u662F\u4ECE lodash \u7684\u7C7B\u578B\u6E90\u4EE3\u7801\u4E2D\u5B66\u4E60\u7684\uFF0C\u5E76\u4E14\u901A\u5E38\u5728\u5DE5\u4F5C\u573A\u6240\u4E2D\u7ECF\u5E38\u4F7F\u7528\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Record<span class="token operator">&lt;</span><span class="token constant">K</span> <span class="token keyword">extends</span> <span class="token keyword">keyof</span> <span class="token builtin">any</span><span class="token punctuation">,</span> <span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token punctuation">[</span><span class="token constant">P</span> <span class="token keyword">in</span> <span class="token constant">K</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">interface</span> <span class="token class-name">Dictionary<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span>index<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">interface</span> <span class="token class-name">NumericDictionary<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span>index<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> data<span class="token operator">:</span>Dictionary<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  a<span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
  b<span class="token operator">:</span> <span class="token number">4</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u7528-const-enum-\u7EF4\u62A4-const-\u8868" tabindex="-1"><a class="header-anchor" href="#\u7528-const-enum-\u7EF4\u62A4-const-\u8868" aria-hidden="true">#</a> \u7528 const enum \u7EF4\u62A4 const \u8868</h2><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// Use objects to maintain consts</span>
<span class="token keyword">const</span> <span class="token constant">TODO_STATUS</span> <span class="token punctuation">{</span>
  <span class="token constant">TODO</span><span class="token operator">:</span> <span class="token string">&#39;TODO&#39;</span><span class="token punctuation">,</span>
  <span class="token constant">DONE</span><span class="token operator">:</span> <span class="token string">&#39;DONE&#39;</span><span class="token punctuation">,</span>
  <span class="token constant">DOING</span><span class="token operator">:</span> <span class="token string">&#39;DOING&#39;</span>
<span class="token punctuation">}</span>

<span class="token comment">// Maintaining constants with const enum</span>
<span class="token keyword">const</span> <span class="token keyword">enum</span> <span class="token constant">TODO_STATUS</span> <span class="token punctuation">{</span>
  <span class="token constant">TODO</span> <span class="token operator">=</span> <span class="token string">&#39;TODO&#39;</span><span class="token punctuation">,</span>
  <span class="token constant">DONE</span> <span class="token operator">=</span> <span class="token string">&#39;DONE&#39;</span><span class="token punctuation">,</span>
  <span class="token constant">DOING</span> <span class="token operator">=</span> <span class="token string">&#39;DOING&#39;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">todos</span> <span class="token punctuation">(</span>status<span class="token operator">:</span> <span class="token constant">TODO_STATUS</span><span class="token punctuation">)</span><span class="token operator">:</span> Todo<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token function">todos</span><span class="token punctuation">(</span><span class="token constant">TODO_STATUS</span><span class="token punctuation">.</span><span class="token constant">TODO</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="vs-code-\u6280\u5DE7\u548C-typescript-\u547D\u4EE4" tabindex="-1"><a class="header-anchor" href="#vs-code-\u6280\u5DE7\u548C-typescript-\u547D\u4EE4" aria-hidden="true">#</a> VS Code \u6280\u5DE7\u548C Typescript \u547D\u4EE4</h2><p>\u65F6\u5019\u7528 VS Code\uFF0C\u7528 tsc \u7F16\u8BD1\u65F6\u51FA\u73B0\u7684\u95EE\u9898\u4E0E VS Code \u63D0\u793A\u7684\u95EE\u9898\u4E0D\u5339\u914D\u3002</p><p>\u5728\u9879\u76EE\u7684\u53F3\u4E0B\u89D2\u627E\u5230Typescript\u5B57\u6837\uFF0C\u7248\u672C\u53F7\u663E\u793A\u5728\u53F3\u4FA7\uFF0C\u4F60\u53EF\u4EE5\u70B9\u51FB\u5B83\u5E76\u9009\u62E9Use Workspace Version\uFF0C\u8868\u793A\u5B83\u59CB\u7EC8\u4E0E\u9879\u76EE\u6240\u4F9D\u8D56\u7684typescript\u7248\u672C\u76F8\u540C\u3002</p><p>\u6216\u7F16\u8F91 .vs-code/settings.json</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;typescript.tsdk&quot;</span><span class="token operator">:</span> <span class="token string">&quot;node_modules/typescript/lib&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,92),o=[t];function c(l,i){return n(),a("div",null,o)}const u=s(p,[["render",c],["__file","08.html.vue"]]);export{u as default};
