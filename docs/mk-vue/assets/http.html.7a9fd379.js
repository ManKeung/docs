import{_ as t,r as p,o as e,c as o,b as n,d as s,e as c,a as i}from"./app.483175fe.js";const l="/docs/mk-vue/api/01.png",u={},r=n("h1",{id:"http\u8BF7\u6C42",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#http\u8BF7\u6C42","aria-hidden":"true"},"#"),s(" Http\u8BF7\u6C42")],-1),k=n("code",null,"axios",-1),d=n("code",null,"get",-1),v=n("code",null,"post",-1),m=n("code",null,"put",-1),b=n("code",null,"delete",-1),h=n("code",null,"patch",-1),f={href:"https://github.com/axios/axios",target:"_blank",rel:"noopener noreferrer"},g=i(`<h4 id="\u57FA\u672C\u4F7F\u7528" tabindex="-1"><a class="header-anchor" href="#\u57FA\u672C\u4F7F\u7528" aria-hidden="true">#</a> \u57FA\u672C\u4F7F\u7528</h4><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">this</span><span class="token punctuation">.</span>$mk<span class="token punctuation">.</span>http<span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>$mk<span class="token punctuation">.</span>http<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>url<span class="token punctuation">[</span><span class="token punctuation">,</span> config<span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>$mk<span class="token punctuation">.</span>http<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>url<span class="token punctuation">[</span><span class="token punctuation">,</span> config<span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>$mk<span class="token punctuation">.</span>http<span class="token punctuation">.</span><span class="token function">head</span><span class="token punctuation">(</span>url<span class="token punctuation">[</span><span class="token punctuation">,</span> config<span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>$mk<span class="token punctuation">.</span>http<span class="token punctuation">.</span><span class="token function">options</span><span class="token punctuation">(</span>url<span class="token punctuation">[</span><span class="token punctuation">,</span> config<span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>$mk<span class="token punctuation">.</span>http<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span>url<span class="token punctuation">[</span><span class="token punctuation">,</span> data<span class="token punctuation">[</span><span class="token punctuation">,</span> config<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>$mk<span class="token punctuation">.</span>http<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>url<span class="token punctuation">[</span><span class="token punctuation">,</span> data<span class="token punctuation">[</span><span class="token punctuation">,</span> config<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>$mk<span class="token punctuation">.</span>http<span class="token punctuation">.</span><span class="token function">patch</span><span class="token punctuation">(</span>url<span class="token punctuation">[</span><span class="token punctuation">,</span> data<span class="token punctuation">[</span><span class="token punctuation">,</span> config<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u4F8B\u5B50" tabindex="-1"><a class="header-anchor" href="#\u4F8B\u5B50" aria-hidden="true">#</a> \u4F8B\u5B50</h4><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>		window<span class="token punctuation">.</span>$mk<span class="token punctuation">.</span>http<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/api/get&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
			<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;mock\u6A21\u62DF\u6570\u636E&#39;</span><span class="token punctuation">)</span>
			<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
			<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;mock\u6A21\u62DF\u6570\u636E&#39;</span><span class="token punctuation">)</span>
		<span class="token punctuation">}</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+l+`" alt="\u56FE\u7247"></p><h4 id="\u5168\u5C40\u914D\u7F6E" tabindex="-1"><a class="header-anchor" href="#\u5168\u5C40\u914D\u7F6E" aria-hidden="true">#</a> \u5168\u5C40\u914D\u7F6E</h4><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">&#39;axios&#39;</span>
<span class="token keyword">import</span> request <span class="token keyword">from</span> <span class="token string">&#39;./requestInterceptors&#39;</span>
<span class="token keyword">import</span> response <span class="token keyword">from</span> <span class="token string">&#39;./responseInterceptors&#39;</span>

axios<span class="token punctuation">.</span>defaults<span class="token punctuation">.</span>withCredentials <span class="token operator">=</span> <span class="token boolean">true</span>

<span class="token keyword">const</span> http <span class="token operator">=</span> axios<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
	headers<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
	responseType<span class="token operator">:</span> <span class="token string">&#39;json&#39;</span><span class="token punctuation">,</span>
	timeout<span class="token operator">:</span> <span class="token number">1000</span> <span class="token operator">*</span> <span class="token number">10</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

http<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>request<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>onFulfilled<span class="token punctuation">,</span> request<span class="token punctuation">.</span>onRejected<span class="token punctuation">)</span>
http<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>response<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>onFulfilled<span class="token punctuation">,</span> response<span class="token punctuation">.</span>onRejected<span class="token punctuation">)</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> http
</code></pre><div class="highlight-lines"><br><br><br><br><br><br><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><br><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u8BF7\u6C42\u62E6\u622A" tabindex="-1"><a class="header-anchor" href="#\u8BF7\u6C42\u62E6\u622A" aria-hidden="true">#</a> \u8BF7\u6C42\u62E6\u622A</h4><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> axios<span class="token punctuation">,</span> <span class="token punctuation">{</span> AxiosRequestConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;axios&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
	<span class="token function-variable function">onFulfilled</span><span class="token operator">:</span> <span class="token punctuation">(</span>config<span class="token operator">:</span> AxiosRequestConfig<span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
		config<span class="token punctuation">.</span>cancelToken <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">axios</span><span class="token punctuation">.</span><span class="token function">CancelToken</span><span class="token punctuation">(</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
			<span class="token comment">// ! \u5168\u5C40\u6CA1\u6302\u4E0A\u8BBE\u7F6E\u9ED8\u8BA4\u503C</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>window<span class="token punctuation">.</span>_cancelHttpArr<span class="token punctuation">)</span> window<span class="token punctuation">.</span>_cancelHttpArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>

			<span class="token comment">// TODO \u628A\u8BF7\u6C42push\u8FDB\u53BB\u4FBF\u4E8E\u53D6\u6D88\u8BF7\u6C42</span>
			window<span class="token punctuation">.</span>_cancelHttpArr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span>
		<span class="token punctuation">}</span><span class="token punctuation">)</span>

		<span class="token keyword">return</span> config
	<span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token function-variable function">onRejected</span><span class="token operator">:</span> <span class="token punctuation">(</span>error<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">Promise</span><span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u54CD\u5E94\u62E6\u622A" tabindex="-1"><a class="header-anchor" href="#\u54CD\u5E94\u62E6\u622A" aria-hidden="true">#</a> \u54CD\u5E94\u62E6\u622A</h4><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> axios<span class="token punctuation">,</span> <span class="token punctuation">{</span> AxiosResponse <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;axios&#39;</span>
<span class="token keyword">import</span> <span class="token constant">CODE</span> <span class="token keyword">from</span> <span class="token string">&#39;./code&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
	<span class="token function-variable function">onFulfilled</span><span class="token operator">:</span> <span class="token punctuation">(</span>response<span class="token operator">:</span> AxiosResponse<span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token punctuation">,</span> <span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>response<span class="token punctuation">.</span>data<span class="token operator">?.</span>code <span class="token operator">===</span> <span class="token constant">CODE</span><span class="token punctuation">.</span><span class="token constant">OK</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token builtin">Promise</span><span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>data<span class="token punctuation">)</span>

		<span class="token keyword">return</span> <span class="token builtin">Promise</span><span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>data<span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token function-variable function">onRejected</span><span class="token operator">:</span> <span class="token punctuation">(</span>error<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>axios<span class="token punctuation">.</span><span class="token function">isCancel</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token builtin">Promise</span><span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>

		<span class="token keyword">return</span> <span class="token builtin">Promise</span><span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="code\u7801" tabindex="-1"><a class="header-anchor" href="#code\u7801" aria-hidden="true">#</a> code\u7801</h4><p>\u5177\u4F53\u7801\u503C\u6839\u636E\u4F60\u9879\u76EE\u81EA\u884C\u4FEE\u6539</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">enum</span> code <span class="token punctuation">{</span>
	<span class="token constant">OK</span> <span class="token operator">=</span> <span class="token number">2000</span><span class="token punctuation">,</span> <span class="token comment">// \u670D\u52A1\u6B63\u5E38\uFF0C\u4E14\u8FD4\u56DE\u6570\u636E</span>
	<span class="token constant">ERR</span> <span class="token operator">=</span> <span class="token number">4000</span><span class="token punctuation">,</span> <span class="token comment">// \u53C2\u6570\u9519\u8BEF</span>
	<span class="token constant">LOGINERR</span> <span class="token operator">=</span> <span class="token number">4001</span><span class="token punctuation">,</span> <span class="token comment">// \u7528\u6237\u767B\u9646\u8BA4\u8BC1\u5931\u8D25</span>
	<span class="token constant">DATAERR</span> <span class="token operator">=</span> <span class="token number">4002</span><span class="token punctuation">,</span> <span class="token comment">// \u6570\u636E\u4E0D\u662F\u6700\u65B0\uFF0C\u9700\u5237\u65B0</span>
	<span class="token constant">AUTHERR</span> <span class="token operator">=</span> <span class="token number">4003</span><span class="token punctuation">,</span> <span class="token comment">// \u65E0\u6743\u9650\u64CD\u4F5C</span>
	<span class="token constant">ERR404</span> <span class="token operator">=</span> <span class="token number">4004</span><span class="token punctuation">,</span> <span class="token comment">// \u627E\u4E0D\u5230\u8D44\u6E90</span>
	<span class="token constant">TOKENERR</span> <span class="token operator">=</span> <span class="token number">401</span><span class="token punctuation">,</span> <span class="token comment">// token\u9A8C\u8BC1\u9519\u8BEF</span>
	<span class="token constant">SERVERERR</span> <span class="token operator">=</span> <span class="token number">5000</span><span class="token punctuation">,</span> <span class="token comment">// \u670D\u52A1\u7AEF\u5F02\u5E38</span>
	<span class="token constant">OTHERERR</span> <span class="token operator">=</span> <span class="token number">6000</span> <span class="token comment">// \u672A\u77E5\u9519\u8BEF</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> code
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u53D6\u6D88\u8BF7\u6C42" tabindex="-1"><a class="header-anchor" href="#\u53D6\u6D88\u8BF7\u6C42" aria-hidden="true">#</a> \u53D6\u6D88\u8BF7\u6C42</h4><p>\u7EC6\u5FC3\u7684\u4F60\u80AF\u5B9A\uFF0C\u53D1\u73B0\u5728\u8BF7\u6C42\u62E6\u622A\u4E2D\u4F7F\u7528\u4E86<code>window._cancelHttpArr</code>\u5B58\u50A8<code>c</code>\u65B9\u4FBF\u53D6\u6D88\u8BF7\u6C42\uFF0C\u54CD\u5E94\u62E6\u622A<code>axios.isCancel(error)</code>\u5904\u7406\u53D6\u6D88\u8BF7\u6C42\u9519\u8BEF\uFF0C\u5177\u4F53\u4F7F\u7528\u5DE5\u5177\u51FD\u6570\u4F1A\u4ECB\u7ECD\u3002</p>`,16);function y(w,x){const a=p("ExternalLinkIcon");return e(),o("div",null,[r,n("p",null,[s("\u7B80\u5355\u5C01\u88C5"),k,s("\uFF0C\u652F\u6301"),d,s("\u3001"),v,s("\u3001"),m,s("\u3001"),b,s("\u548C"),h,s("\u65B9\u6CD5\uFF0Cpromise \u7684 HTTP \u5E93\u3002\u66F4\u591A\u67E5\u770B"),n("a",f,[s("axios\u6587\u6863"),c(a)])]),g])}const R=t(u,[["render",y],["__file","http.html.vue"]]);export{R as default};
