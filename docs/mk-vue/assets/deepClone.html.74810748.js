import{_ as n,o as s,c as a,a as t}from"./app.d21e7df6.js";const e={},p=t(`<h1 id="\u6DF1\u62F7\u8D1D" tabindex="-1"><a class="header-anchor" href="#\u6DF1\u62F7\u8D1D" aria-hidden="true">#</a> \u6DF1\u62F7\u8D1D</h1><p>deepClone(target: T)</p><ul><li><code>target</code> \u62F7\u8D1D\u5185\u5BB9</li></ul><details class="custom-container details"><summary>\u70B9\u51FB\u67E5\u770B</summary><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token doc-comment comment">/**
 * @Author: Mankeung
 * <span class="token keyword">@description</span>: \u6DF1\u62F7\u8D1D
 * <span class="token keyword">@param</span> <span class="token punctuation">{</span>T<span class="token punctuation">}</span> target
 * <span class="token keyword">@return</span> <span class="token punctuation">{</span>T<span class="token punctuation">}</span>
 */</span>
<span class="token keyword">function</span> <span class="token generic-function"><span class="token function">deepClone</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>target<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token punctuation">{</span>
	<span class="token comment">// \u5B9A\u4E49\u4E00\u4E2A\u53D8\u91CF</span>
	<span class="token keyword">let</span> result<span class="token operator">:</span> <span class="token builtin">any</span>
	<span class="token comment">// \u5982\u679C\u5F53\u524D\u9700\u8981\u6DF1\u62F7\u8D1D\u7684\u662F\u4E00\u4E2A\u5BF9\u8C61\u7684\u8BDD</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> target <span class="token operator">===</span> <span class="token string">&#39;object&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">// \u5982\u679C\u662F\u4E00\u4E2A\u6570\u7EC4\u7684\u8BDD</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token builtin">Array</span><span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token comment">// \u5C06result\u8D4B\u503C\u4E3A\u4E00\u4E2A\u6570\u7EC4\uFF0C\u5E76\u4E14\u6267\u884C\u904D\u5386</span>
			<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> i <span class="token keyword">in</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token comment">// \u9012\u5F52\u514B\u9686\u6570\u7EC4\u4E2D\u7684\u6BCF\u4E00\u9879</span>
				result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token function">deepClone</span><span class="token punctuation">(</span>target<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
			<span class="token punctuation">}</span>
			<span class="token comment">// \u5224\u65AD\u5982\u679C\u5F53\u524D\u7684\u503C\u662Fnull\u7684\u8BDD\uFF1B\u76F4\u63A5\u8D4B\u503C\u4E3Anull</span>
		<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>target <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			result <span class="token operator">=</span> <span class="token keyword">null</span>
			<span class="token comment">// \u5224\u65AD\u5982\u679C\u5F53\u524D\u7684\u503C\u662F\u4E00\u4E2ARegExp\u5BF9\u8C61\u7684\u8BDD\uFF0C\u76F4\u63A5\u8D4B\u503C</span>
		<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>target<span class="token punctuation">.</span>constructor <span class="token operator">===</span> RegExp<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			result <span class="token operator">=</span> target
		<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
			<span class="token comment">// \u5426\u5219\u662F\u666E\u901A\u5BF9\u8C61\uFF0C\u76F4\u63A5for in\u5FAA\u73AF\uFF0C\u9012\u5F52\u8D4B\u503C\u5BF9\u8C61\u7684\u6240\u6709\u503C</span>
			result <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
			<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> i <span class="token keyword">in</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				result<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">deepClone</span><span class="token punctuation">(</span>target<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
		<span class="token comment">// \u5982\u679C\u4E0D\u662F\u5BF9\u8C61\u7684\u8BDD\uFF0C\u5C31\u662F\u57FA\u672C\u6570\u636E\u7C7B\u578B\uFF0C\u90A3\u4E48\u76F4\u63A5\u8D4B\u503C</span>
	<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
		result <span class="token operator">=</span> target
	<span class="token punctuation">}</span>
	<span class="token comment">// \u8FD4\u56DE\u6700\u7EC8\u7ED3\u679C</span>
	<span class="token keyword">return</span> result
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><ul><li>\u4F8B\u5B50\uFF1A</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$mk<span class="token punctuation">.</span>utils<span class="token punctuation">.</span><span class="token function">deepClone</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    name<span class="token operator">:</span> <span class="token string">&#39;mankeung&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),o=[p];function c(l,i){return s(),a("div",null,o)}const r=n(e,[["render",c],["__file","deepClone.html.vue"]]);export{r as default};
