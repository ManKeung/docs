import{_ as n,o as s,c as a,a as t}from"./app.f7ff22a9.js";const p={},e=t(`<h1 id="\u6570\u636E\u52A0\u5BC6" tabindex="-1"><a class="header-anchor" href="#\u6570\u636E\u52A0\u5BC6" aria-hidden="true">#</a> \u6570\u636E\u52A0\u5BC6</h1><h4 id="\u5BF9\u79F0\u52A0\u89E3\u5BC6" tabindex="-1"><a class="header-anchor" href="#\u5BF9\u79F0\u52A0\u89E3\u5BC6" aria-hidden="true">#</a> \u5BF9\u79F0\u52A0\u89E3\u5BC6</h4><h5 id="\u52A0\u5BC6" tabindex="-1"><a class="header-anchor" href="#\u52A0\u5BC6" aria-hidden="true">#</a> \u52A0\u5BC6</h5><p>en(value: T)</p><ul><li><code>value</code> \u52A0\u5BC6\u6570\u636E</li></ul><details class="custom-container details"><summary>\u70B9\u51FB\u67E5\u770B</summary><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> CryptoJS <span class="token keyword">from</span> <span class="token string">&#39;crypto-js&#39;</span>\r
<span class="token keyword">import</span> secretKey <span class="token keyword">from</span> <span class="token string">&#39;@/config/secretKey&#39;</span>\r
\r
<span class="token doc-comment comment">/**\r
 * @Author: Mankeung\r
 * <span class="token keyword">@description</span>: \u52A0\u5BC6\r
 * <span class="token keyword">@param</span> <span class="token punctuation">{</span>T<span class="token punctuation">}</span> value \u52A0\u5BC6\u6570\u636E\r
 * <span class="token keyword">@return</span> <span class="token punctuation">{</span>string<span class="token punctuation">}</span>\r
 */</span>\r
<span class="token keyword">const</span> en <span class="token operator">=</span> <span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\r
	<span class="token keyword">try</span> <span class="token punctuation">{</span>\r
		<span class="token keyword">const</span> srcs <span class="token operator">=</span> CryptoJS<span class="token punctuation">.</span>enc<span class="token punctuation">.</span>Utf8<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span>\r
		<span class="token keyword">const</span> encrypted <span class="token operator">=</span> CryptoJS<span class="token punctuation">.</span><span class="token constant">AES</span><span class="token punctuation">.</span><span class="token function">encrypt</span><span class="token punctuation">(</span>srcs<span class="token punctuation">,</span> secretKey<span class="token punctuation">.</span>crypot<span class="token punctuation">.</span>key<span class="token punctuation">,</span> <span class="token punctuation">{</span>\r
			iv<span class="token operator">:</span> secretKey<span class="token punctuation">.</span>crypot<span class="token punctuation">.</span>iv<span class="token punctuation">,</span>\r
			mode<span class="token operator">:</span> CryptoJS<span class="token punctuation">.</span>mode<span class="token punctuation">.</span><span class="token constant">CBC</span><span class="token punctuation">,</span>\r
			padding<span class="token operator">:</span> CryptoJS<span class="token punctuation">.</span>pad<span class="token punctuation">.</span>Pkcs7\r
		<span class="token punctuation">}</span><span class="token punctuation">)</span>\r
		<span class="token keyword">return</span> encrypted<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\r
	<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r
		<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\u52A0\u5BC6\u6570\u636E</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>value<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\u51FA\u9519\u4E86~</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>\r
		<span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>\r
	<span class="token punctuation">}</span>\r
<span class="token punctuation">}</span>\r
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><ul><li>\u4F8B\u5B50\uFF1A</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> str <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$mk<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>crypto<span class="token punctuation">.</span><span class="token function">en</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    name<span class="token operator">:</span> <span class="token string">&#39;mankeung&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u89E3\u5BC6" tabindex="-1"><a class="header-anchor" href="#\u89E3\u5BC6" aria-hidden="true">#</a> \u89E3\u5BC6</h4><p>de(en: string)</p><ul><li><code>en</code> \u5F85\u89E3\u5BC6\u6570\u636E</li></ul><details class="custom-container details"><summary>\u70B9\u51FB\u67E5\u770B</summary><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token doc-comment comment">/**\r
 * @Author: Mankeung\r
 * <span class="token keyword">@description</span>: \u89E3\u5BC6\r
 * <span class="token keyword">@param</span> <span class="token punctuation">{</span>string<span class="token punctuation">}</span> en\r
 * <span class="token keyword">@return</span> <span class="token punctuation">{</span>unknown<span class="token punctuation">}</span>\r
 */</span>\r
<span class="token keyword">const</span> de <span class="token operator">=</span> <span class="token punctuation">(</span>en<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">unknown</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\r
	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>en<span class="token punctuation">)</span> <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;en\u53C2\u6570\u4E0D\u80FD\u4E3A\u7A7A&#39;</span><span class="token punctuation">)</span>\r
\r
	<span class="token keyword">try</span> <span class="token punctuation">{</span>\r
		<span class="token keyword">const</span> decrypt <span class="token operator">=</span> CryptoJS<span class="token punctuation">.</span><span class="token constant">AES</span><span class="token punctuation">.</span><span class="token function">decrypt</span><span class="token punctuation">(</span>en<span class="token punctuation">,</span> secretKey<span class="token punctuation">.</span>crypot<span class="token punctuation">.</span>key<span class="token punctuation">,</span> <span class="token punctuation">{</span>\r
			iv<span class="token operator">:</span> secretKey<span class="token punctuation">.</span>crypot<span class="token punctuation">.</span>iv<span class="token punctuation">,</span>\r
			mode<span class="token operator">:</span> CryptoJS<span class="token punctuation">.</span>mode<span class="token punctuation">.</span><span class="token constant">CBC</span><span class="token punctuation">,</span>\r
			padding<span class="token operator">:</span> CryptoJS<span class="token punctuation">.</span>pad<span class="token punctuation">.</span>Pkcs7\r
		<span class="token punctuation">}</span><span class="token punctuation">)</span>\r
		<span class="token keyword">const</span> decryptedStr <span class="token operator">=</span> decrypt<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>CryptoJS<span class="token punctuation">.</span>enc<span class="token punctuation">.</span>Utf8<span class="token punctuation">)</span>\r
		<span class="token keyword">return</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>decryptedStr<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\r
	<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\r
		<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;en\u53C2\u6570\u4E0D\u80FD\u4E3A\u7A7A&#39;</span><span class="token punctuation">)</span>\r
		<span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>\r
	<span class="token punctuation">}</span>\r
<span class="token punctuation">}</span>\r
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><ul><li>\u4F8B\u5B50\uFF1A</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> str <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$mk<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>crypto<span class="token punctuation">.</span><span class="token function">en</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    name<span class="token operator">:</span> <span class="token string">&#39;mankeung&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> newStr <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$mk<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>crypto<span class="token punctuation">.</span><span class="token function">de</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>newStr<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,14),o=[e];function c(i,l){return s(),a("div",null,o)}const r=n(p,[["render",c],["__file","encryption.html.vue"]]);export{r as default};
