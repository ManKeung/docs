import{_ as n,o as s,c as a,a as t}from"./app.d4c8b8a5.js";const p={},e=t(`<h1 id="\u8282\u6D41\u9632\u6296" tabindex="-1"><a class="header-anchor" href="#\u8282\u6D41\u9632\u6296" aria-hidden="true">#</a> \u8282\u6D41\u9632\u6296</h1><h4 id="\u4F55\u8C13\u8282\u6D41\u548C\u9632\u6296" tabindex="-1"><a class="header-anchor" href="#\u4F55\u8C13\u8282\u6D41\u548C\u9632\u6296" aria-hidden="true">#</a> \u4F55\u8C13\u8282\u6D41\u548C\u9632\u6296\uFF1F</h4><ul><li>\u8282\u6D41</li></ul><p>\u8282\u6D41\u7684\u610F\u601D\u662F\uFF0C\u89C4\u5B9A\u65F6\u95F4\u5185\uFF0C\u53EA\u89E6\u53D1\u4E00\u6B21\u3002\u6BD4\u5982\u6211\u4EEC\u8BBE\u5B9A1000ms\uFF0C\u5728\u8FD9\u4E2A\u65F6\u95F4\u5185\uFF0C\u65E0\u8BBA\u70B9\u51FB\u6309\u94AE\u591A\u5C11\u6B21\uFF0C\u5B83\u90FD\u53EA\u4F1A\u89E6\u53D1\u4E00\u6B21\u3002\u5177\u4F53\u573A\u666F\u53EF\u4EE5\u662F\u62A2\u8D2D\u65F6\u5019\uFF0C\u7531\u4E8E\u6709\u65E0\u6570\u4EBA \u5FEB\u901F\u70B9\u51FB\u6309\u94AE\uFF0C\u5982\u679C\u6BCF\u6B21\u70B9\u51FB\u90FD\u53D1\u9001\u8BF7\u6C42\uFF0C\u5C31\u4F1A\u7ED9\u670D\u52A1\u5668\u9020\u6210\u5DE8\u5927\u7684\u538B\u529B\uFF0C\u4F46\u662F\u6211\u4EEC\u8FDB\u884C\u8282\u6D41\u540E\uFF0C\u5C31\u4F1A\u5927\u5927\u51CF\u5C11\u8BF7\u6C42\u7684\u6B21\u6570\u3002</p><ul><li>\u9632\u6296</li></ul><p>\u9632\u6296\u7684\u610F\u601D\u662F\uFF0C\u5728\u8FDE\u7EED\u7684\u64CD\u4F5C\u4E2D\uFF0C\u65E0\u8BBA\u8FDB\u884C\u4E86\u591A\u957F\u65F6\u95F4\uFF0C\u53EA\u6709\u67D0\u4E00\u6B21\u7684\u64CD\u4F5C\u540E\u5728\u6307\u5B9A\u7684\u65F6\u95F4\u5185\u6CA1\u6709\u518D\u64CD\u4F5C\uFF0C\u8FD9\u4E00\u6B21\u624D\u88AB\u5224\u5B9A\u6709\u6548\u3002\u5177\u4F53\u573A\u666F\u53EF\u4EE5\u641C\u7D22\u6846\u8F93\u5165\u5173\u952E\u5B57\u8FC7\u7A0B\u4E2D\u5B9E\u65F6 \u8BF7\u6C42\u670D\u52A1\u5668\u5339\u914D\u641C\u7D22\u7ED3\u679C\uFF0C\u5982\u679C\u4E0D\u8FDB\u884C\u5904\u7406\uFF0C\u90A3\u4E48\u5C31\u662F\u8F93\u5165\u6846\u5185\u5BB9\u4E00\u76F4\u53D8\u5316\uFF0C\u5BFC\u81F4\u4E00\u76F4\u53D1\u9001\u8BF7\u6C42\u3002\u5982\u679C\u8FDB\u884C\u9632\u6296\u5904\u7406\uFF0C\u7ED3\u679C\u5C31\u662F\u5F53\u6211\u4EEC\u8F93\u5165\u5185\u5BB9\u5B8C\u6210\u540E\uFF0C\u4E00\u5B9A\u65F6\u95F4(\u6BD4\u59821000ms)\u6CA1\u6709\u518D \u8F93\u5165\u5185\u5BB9\uFF0C\u8FD9\u65F6\u518D\u89E6\u53D1\u8BF7\u6C42\u3002</p><p>\u7ED3\u5408\u4EE5\u4E0A\u4E24\u79CD\u60C5\u51B5\uFF0C\u56DE\u5230\u6211\u4EEC\u6700\u5B9E\u9645\u7684\u573A\u666F\uFF0C\u6BD4\u5982\u9632\u6B62\u8868\u5355\u63D0\u4EA4\u6309\u94AE\u88AB\u591A\u6B21\u89E6\u53D1\uFF0C\u6211\u4EEC\u5E94\u8BE5\u9009\u62E9\u4F7F\u7528\u8282\u6D41\u800C\u4E0D\u662F\u9632\u6296\u65B9\u6848\u3002</p><h4 id="\u8282\u6D41" tabindex="-1"><a class="header-anchor" href="#\u8282\u6D41" aria-hidden="true">#</a> \u8282\u6D41</h4><p>throttle(func: Function, wait = 1000, type = 2)</p><ul><li><code>func</code> \u76EE\u6807\u51FD\u6570</li><li><code>wait</code> \u5EF6\u8FDF\u65F6\u95F4</li><li><code>type</code> 1 \u8868\u65F6\u95F4\u6233\u7248\uFF0C2 \u8868\u5B9A\u65F6\u5668\u7248</li></ul><details class="custom-container details"><summary>\u70B9\u51FB\u67E5\u770B</summary><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token doc-comment comment">/**
 * @Author: Mankeung
 * <span class="token keyword">@description</span>: \u8282\u6D41\u51FD\u6570
 * <span class="token keyword">@param</span> <span class="token punctuation">{</span>Function<span class="token punctuation">}</span> func \u76EE\u6807\u51FD\u6570
 * <span class="token keyword">@param</span> <span class="token punctuation">{</span>number<span class="token punctuation">}</span> wait \u5EF6\u8FDF\u65F6\u95F4
 * <span class="token keyword">@param</span> <span class="token punctuation">{</span>number<span class="token punctuation">}</span> type 1 \u8868\u65F6\u95F4\u6233\u7248\uFF0C2 \u8868\u5B9A\u65F6\u5668\u7248
 * <span class="token keyword">@return</span> <span class="token punctuation">{</span>Function<span class="token punctuation">}</span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">(</span>func<span class="token operator">:</span> <span class="token builtin">Function</span><span class="token punctuation">,</span> wait <span class="token operator">=</span> <span class="token number">1000</span><span class="token punctuation">,</span> type <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Function</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	<span class="token keyword">let</span> previous <span class="token operator">=</span> <span class="token number">0</span>
	<span class="token keyword">let</span> timer<span class="token operator">:</span> <span class="token builtin">any</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">=</span> <span class="token keyword">null</span>

	<span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">const</span> context <span class="token operator">=</span> <span class="token keyword">this</span>
		<span class="token keyword">const</span> args <span class="token operator">=</span> arguments
		<span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">const</span> now <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

			<span class="token keyword">if</span> <span class="token punctuation">(</span>now <span class="token operator">-</span> previous <span class="token operator">&gt;</span> wait<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token function">func</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> args<span class="token punctuation">)</span>
				previous <span class="token operator">=</span> now
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">===</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>timer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				timer <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
					timer <span class="token operator">=</span> <span class="token keyword">null</span>
					<span class="token function">func</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> args<span class="token punctuation">)</span>
				<span class="token punctuation">}</span><span class="token punctuation">,</span> wait<span class="token punctuation">)</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><ul><li>\u4F8B\u5B50\uFF1A</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> <span class="token function-variable function">handleClick</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>$mk<span class="token punctuation">.</span>utils<span class="token punctuation">.</span><span class="token function">throttle</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u70B9\u51FB1\u6B21&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u9632\u6296" tabindex="-1"><a class="header-anchor" href="#\u9632\u6296" aria-hidden="true">#</a> \u9632\u6296</h4><p>debounce(func: Function, wait = 1000, immediate = false)</p><ul><li><code>func</code> \u76EE\u6807\u51FD\u6570</li><li><code>wait</code> \u5EF6\u8FDF\u6267\u884C</li><li><code>immediate</code> true - \u7ACB\u5373\u6267\u884C\uFF0C false - \u5EF6\u8FDF\u6267\u884C</li></ul><details class="custom-container details"><summary>\u70B9\u51FB\u67E5\u770B</summary><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token doc-comment comment">/**
 * @Author: Mankeung
 * <span class="token keyword">@description</span>: \u51FD\u6570\u9632\u6296
 * <span class="token keyword">@param</span> <span class="token punctuation">{</span>Function<span class="token punctuation">}</span> func \u76EE\u6807\u51FD\u6570
 * <span class="token keyword">@param</span> <span class="token punctuation">{</span>number<span class="token punctuation">}</span> wait \u5EF6\u8FDF\u6267\u884C\u6BEB\u79D2
 * <span class="token keyword">@param</span> <span class="token punctuation">{</span>boolean<span class="token punctuation">}</span> immediate true - \u7ACB\u5373\u6267\u884C\uFF0C false - \u5EF6\u8FDF\u6267\u884C
 * <span class="token keyword">@return</span> <span class="token punctuation">{</span>Function<span class="token punctuation">}</span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">(</span>func<span class="token operator">:</span> <span class="token builtin">Function</span><span class="token punctuation">,</span> wait <span class="token operator">=</span> <span class="token number">1000</span><span class="token punctuation">,</span> immediate <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Function</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	<span class="token keyword">let</span> timer<span class="token operator">:</span> <span class="token builtin">any</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">=</span> <span class="token keyword">null</span>
	<span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">const</span> context <span class="token operator">=</span> <span class="token keyword">this</span>
		<span class="token keyword">const</span> args <span class="token operator">=</span> arguments
		<span class="token keyword">if</span> <span class="token punctuation">(</span>timer<span class="token punctuation">)</span> <span class="token function">clearTimeout</span><span class="token punctuation">(</span>timer<span class="token punctuation">)</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>immediate<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">const</span> callNow <span class="token operator">=</span> <span class="token operator">!</span>timer
			timer <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
				timer <span class="token operator">=</span> <span class="token keyword">null</span>
			<span class="token punctuation">}</span><span class="token punctuation">,</span> wait<span class="token punctuation">)</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>callNow<span class="token punctuation">)</span> <span class="token function">func</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> args<span class="token punctuation">)</span>
		<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
			timer <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
				<span class="token function">func</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> args<span class="token punctuation">)</span>
			<span class="token punctuation">}</span><span class="token punctuation">,</span> wait<span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><ul><li>\u4F8B\u5B50\uFF1A</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> <span class="token function-variable function">handleClick</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>$mk<span class="token punctuation">.</span>utils<span class="token punctuation">.</span><span class="token function">debounce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u70B9\u51FB1\u6B21&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,19),o=[e];function c(i,l){return s(),a("div",null,o)}const r=n(p,[["render",c],["__file","debounce.html.vue"]]);export{r as default};
